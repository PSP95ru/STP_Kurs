{"version":3,"file":"js/app.ac2d60fb.js","mappings":"wHAA4D,EAAU,WACrE,WACGA,EAAAA,EAAAA,MAAe,GAEnB,OAASC,EAAAA,EAAAA,EAAQD,CAAAA,EAAAA,EAAAA,EAAAA,CAAAA,EAAe,sB,OCOhC,GACAE,KAAA,MAEAC,KAAAA,KAAA,CAEA,IChByO,I,UCOrOC,GAAY,OACd,EACAH,EACAD,GACA,EACA,KACA,KACA,MAIF,EAAeI,EAAiB,Q,SClBYC,EAAOC,WAAS,MAAU,KACrE,aACD,OAAIN,EAAAA,EAAAA,EAAAA,CAAe,EAAG,cAAE,eAExB,E,+FCJ+Q,EAAC,W,IAACO,EAAM,K,EAACC,EAAOC,MAAIC,G,OAAiBC,EAAAA,EAAAA,EAAwB,C,MAAI,CAAoB,IAAC,GAACC,SAAW,WAAoB,CAACP,EAAG,IAAM,+CAACQ,MAAM,CAAC,UAAK,IAA8B,OAAGJ,MAAUA,EAAIK,gBAA2B,SAAU,SAAW,GAAEC,EAAK,iBAACC,E,WAAyB,oB,SAA4B,C,MAAEH,C,GAAQ,gB,MAAC,S,OAAsC,aAAQ,SAAe,G,aAASJ,C,kBAA4B,O,IAAG,Y,GAAoCI,UAAM,G,YAAqF,MAAK,sBAAQ,MAAK,YAAO,OAAW,EAAI,iBAAeI,EAAAA,EAA6C,IAAiH,QAAW,mBAAI,MAAAC,CAAa,mDAAEL,MAAAA,Y,UAA+C,I,UAAyB,GAAU,GAACM,IAAAA,EAAY,GAAE,mC,UAAA,mD,YAAC,O,IAAG,YAAqE,gBAAG,QAAM,IAAkE,SAAY,eAAG,IAAO,kBAAQV,OAAIW,EAAAA,cAAqBT,IAAqD,qDAACC,MAAmC,CAACP,EAAG,UAAY,kCAACW,MAAAA,CAAqBD,UAAI,I,MAA4B,C,MAAEF,EAAAA,oBAAM,SAAE,YAAC,sBAAyB,C,aAAa,wB,OAAkD,C,YAAC,O,IAAG,YAAkE,gBAAG,QAAM,IAA6EE,MAAI,OAAW,WAAI,IAAa,kBAAEF,OAAAA,EAAAA,cAAQ,IAAmCQ,QAAG,0C,gBAAkD,qC,YAAC,O,IAAG,YAA2E,gBAAG,QAAM,IAAmG,MAAQ,kBAAiB,IAAO,kBAAQZ,OAAS,eAACE,IAAsC,2DAACC,MAAoB,CAACP,EAAG,UAAY,wDAACW,MAAAA,CAAqBD,MAAI,kB,MAA4B,C,MAAEF,EAAAA,KAAM,SAAE,YAAC,OAAW,C,aAA2B,U,MAAuD,C,YAAC,O,IAAG,YAAkD,gBAAG,QAAM,IAA8C,MAAQ,kBAAwB,IAAO,kBAAQJ,OAAIa,EAAAA,mBAAgBX,IAAgD,wCAACC,QAAgC,GAAGP,EAAG,OAAc,IAAI,CAAaW,MAAAA,CAAqBD,MAAI,yB,MAA4B,C,MAAEF,EAAAA,eAAM,SAAE,YAAC,iBAAmBJ,C,aAAmB,qB,KAAkD,Y,YAAC,O,IAAG,YAAgD,gBAAG,QAAM,IAA8C,MAAQ,kBAA4B,IAAO,kBAAQA,OAAIc,EAAAA,cAAgBZ,IAAgD,sCAACC,QAAgC,GAAGP,EAAG,OAAc,IAAI,CAAaW,MAAAA,CAAqBD,MAAI,6B,MAA4B,C,MAAEF,EAAAA,eAAM,SAAE,YAAC,iBAAmBJ,C,aAAmB,qB,KAAmD,Y,YAAC,O,IAAG,YAAgD,gBAAG,QAAM,IAEpvGT,MAAAA,CAAAA,EAAe,IAAK,WAEfC,GAAAA,C,iICCT,SAASuB,EAA8BC,EAAIC,GACzC,MAAMC,EAAS,CAAEC,EAAGF,EAAGE,EAAIH,EAAGG,EAAGC,EAAGH,EAAGG,EAAIJ,EAAGI,GAQ9C,OAPIC,KAAKC,IAAIJ,EAAOC,GAAKE,KAAKC,IAAIJ,EAAOE,IACvCF,EAAOC,EAAIE,KAAKE,KAAKL,EAAOC,GAC5BD,EAAOE,EAAI,IAEXF,EAAOC,EAAI,EACXD,EAAOE,EAAIC,KAAKE,KAAKL,EAAOE,IAEvBF,CACT,CAGA,SAASM,EAAeC,EAASC,EAAaC,EAAOnB,GACnD,MAAMoB,EAAapB,EAAOqB,MAAKC,GAASA,EAAMC,KAAOJ,EAAMK,UACrDC,EAAWzB,EAAOqB,MAAKC,GAASA,EAAMC,KAAOJ,EAAMO,QACnDC,EAAaC,EAAmBX,EAASG,EAAYD,EAAMU,YAC3DC,EAAWF,EAAmBX,EAASQ,EAAUN,EAAMY,UAC7Db,EAAYc,QAAQC,EAAeN,EAAWhB,EAAGgB,EAAWf,EAAGO,EAAMI,IAAK,IAC1EL,EAAYgB,KAAKD,EAAeH,EAASnB,EAAGmB,EAASlB,EAAGO,EAAMI,GAAIL,EAAYiB,OAAS,GACzF,CAEA,SAASC,EAAeC,GACtB,MAAMF,EAAStB,KAAKyB,KAAKD,EAAO1B,EAAI0B,EAAO1B,EAAI0B,EAAOzB,EAAIyB,EAAOzB,GACjE,MAAO,CACLD,EAAG0B,EAAO1B,EAAIwB,EACdvB,EAAGyB,EAAOzB,EAAIuB,EAElB,CAEA,SAASI,EAAkBF,GACzB,MAAO,CACL1B,GAAK,EAAK0B,EAAOzB,EACjBA,EAAGyB,EAAO1B,EAEd,CAEA,SAAS6B,EAAYH,GACnB,MAAO,CACL1B,GAAK,EAAK0B,EAAO1B,EACjBC,GAAK,EAAKyB,EAAOzB,EAErB,CAEA,SAAS6B,EAAmBjC,EAAIC,EAAIiC,EAAIC,GACtC,IAAIC,EAAU,GAOd,OANAA,GAAW,KAAQpC,EAAGG,EAAK,KAAQH,EAAGI,EAAK,KAC3CgC,GAAW,KAAQnC,EAAGE,EAAK,KAAQF,EAAGG,EAAK,KAC3CgC,GAAW,KAAQF,EAAG/B,EAAK,KAAQ+B,EAAG9B,EAAK,KAC3CgC,GAAW,KAAQD,EAAGhC,EAAK,KAAQgC,EAAG/B,EAAK,KAC3CgC,GAAW,KAAQpC,EAAGG,EAAK,KAAQH,EAAGI,EAAK,KAC3CgC,GAAW,IACJA,CACT,CAGA,SAASC,EAAsBC,EAAcC,GAC3C,MAAMC,EAAsB,EACtBC,EAAgB,CAAEtC,EAAGoC,EAAWpC,EAAImC,EAAanC,EAAGC,EAAGmC,EAAWnC,EAAIkC,EAAalC,GAEnFsC,EAA0Bd,EAAca,GAExCE,EAAaZ,EAAiBW,GACpCC,EAAWxC,EAAIwC,EAAWxC,GAAKqC,EAAsB,GACrDG,EAAWvC,EAAIuC,EAAWvC,GAAKoC,EAAsB,GAErD,MAAMI,EAAaZ,EAAWW,GAExB3C,EAAK,CAAEG,EAAGmC,EAAanC,EAAIwC,EAAWxC,EAAGC,EAAGkC,EAAalC,EAAIuC,EAAWvC,GACxEH,EAAK,CAAEE,EAAGmC,EAAanC,EAAIyC,EAAWzC,EAAGC,EAAGkC,EAAalC,EAAIwC,EAAWxC,GACxE8B,EAAK,CAAE/B,EAAGoC,EAAWpC,EAAIyC,EAAWzC,EAAGC,EAAGmC,EAAWnC,EAAIwC,EAAWxC,GACpE+B,EAAK,CAAEhC,EAAGoC,EAAWpC,EAAIwC,EAAWxC,EAAGC,EAAGmC,EAAWnC,EAAIuC,EAAWvC,GAC1E,OAAO6B,EAAkBjC,EAAIC,EAAIiC,EAAIC,EACvC,CACA,SAASU,EAAezC,EAAGJ,EAAIC,GAC7B,OAAQG,EAAIJ,EAAGI,IAAMH,EAAGE,EAAIH,EAAGG,IAAMF,EAAGG,EAAIJ,EAAGI,GAAKJ,EAAGG,CACzD,CACA,SAAS2C,EAAe3C,EAAGH,EAAIC,GAC7B,OAAQE,EAAIH,EAAGG,IAAMF,EAAGG,EAAIJ,EAAGI,IAAMH,EAAGE,EAAIH,EAAGG,GAAKH,EAAGI,CACzD,CAEA,SAAS2C,EAAwBjC,EAAOkC,EAAYC,GAClD,MAAMC,EAAWpC,EAAMqC,QAAUrC,EAAMsC,MAAQ,EACzCC,EAAYH,EAAWpC,EAAMsC,MAC7BE,EAAUxC,EAAMyC,QAAUzC,EAAM0C,MAAQ,EACxCC,EAAaH,EAAUxC,EAAM0C,MAG7BE,EAAgB,CAACjC,EAAeyB,EAAUJ,EAAcI,EAAUF,EAAYC,GAAW,GAC7FxB,EAAe4B,EAAWP,EAAcO,EAAWL,EAAYC,GAAW,GAC1ExB,EAAeoB,EAAcS,EAASN,EAAYC,GAAWK,EAAS,GACtE7B,EAAeoB,EAAcY,EAAYT,EAAYC,GAAWQ,EAAY,IAG9E,IAAIE,EAAmBD,EAAcE,QAAOC,GAAUA,EAAM1D,GAAK+C,GAAcW,EAAM1D,GAAKkD,GAAeQ,EAAMzD,GAAKkD,GAAaO,EAAMzD,GAAKqD,IAGxIE,EAAiBhC,OAAS,IAAGgC,EAAmBD,GAEpD,IAAII,EAAc,KACdC,EAAU,IACdJ,EAAiBK,SAAQH,IACvB,MAAMI,GAAQJ,EAAM1D,EAAI8C,EAAS9C,IAAM0D,EAAM1D,EAAI8C,EAAS9C,IAAM0D,EAAMzD,EAAI6C,EAAS7C,IAAMyD,EAAMzD,EAAI6C,EAAS7C,GACxG2D,EAAUE,IACZF,EAAUE,EACVH,EAAcD,EAChB,IAIF,MAAM3D,EAAS,CAAEC,GAAI,EAAGC,EAAG,GAC3B,OAAQ0D,EAAYI,SAClB,KAAK,EACHhE,EAAOC,EAAI,EACX,MAEF,KAAK,EACHD,EAAOC,EAAI,EACXD,EAAOE,GAAK,EACZ,MAEF,KAAK,EACHF,EAAOC,EAAI,EACXD,EAAOE,EAAI,EACX,MAGJ,OAAOF,CACT,CACA,SAASiE,EAAS1D,EAAS2D,EAAQjE,EAAGC,GAEpC,IAAIiE,EAAiB,CACnBtD,IAAK,GAEP,MAAMuD,EAAc,IAAIF,GAcxB,OAZAE,EAAYN,SAASlD,IACnB,IAA2B,IAAvBuD,EAAetD,GAAW,CAE5B,MAAMwD,EAAO/E,GAAOsB,EAAM0D,MAAMC,QAAQ3D,GACpCL,EAAQiE,cAAc,IAAIC,OAAOJ,GAAOpE,EAAGC,KAE7CiE,EAAiBO,EAAe9D,EAAMqC,QAASrC,EAAMyC,QAASzC,EAAM0D,KAAM1D,EAAMsC,MAAOtC,EAAM0C,MAAO1C,EAAMC,IAG9G,MAEyB,IAAvBsD,EAAetD,KAAWsD,EAAiB,MACxCA,CACT,CACA,SAASQ,EAAkB/D,EAAOgE,EAAIC,EAAIC,EAAIC,GAC5C,OAAOC,EAAAA,GAAaC,UAAUC,EAAAA,GAAUb,KAAK/E,GAAOsB,EAAM0D,MAAMC,QAAQ3D,IAASsE,EAAAA,GAAUC,KAAK,CAACP,EAAIC,GAAK,CAACC,EAAIC,IACjH,CACA,SAASK,EAAoB7E,EAASK,EAAO4C,GAC3C,IAAIxD,EAAS,KACb,MAAMqF,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACjB,IAAIkC,EAAU,EAWd,OATA/B,EAAcgC,OAAO1B,SAAQH,IAC3B,IAAKA,EAAM1D,EAAIoF,IAAO1B,EAAM1D,EAAIoF,IAAO1B,EAAMzD,EAAIoF,IAAO3B,EAAMzD,EAAIoF,GAAMC,EAAS,CAC/E,MAAME,EAAY,IAAIhB,OAAOnF,GAAOsB,EAAM0D,MAAMC,QAAQ3D,KACnDL,EAAQiE,cAAciB,EAAW9B,EAAM1D,EAAG0D,EAAMzD,IAAQK,EAAQmF,gBAAgBD,EAAW9B,EAAM1D,EAAG0D,EAAMzD,MAC7GqF,GAAW5B,EAAM1D,EAAIoF,IAAO1B,EAAM1D,EAAIoF,IAAO1B,EAAMzD,EAAIoF,IAAO3B,EAAMzD,EAAIoF,GACxEtF,EAAS2D,EAEb,KAEK3D,CACT,CACA,SAASkB,EAAoBX,EAASK,EAAO+E,GAC3C,MAAMhE,EAASiE,EAAgBD,GACzBE,EAAY1F,KAAK2F,IAAIlF,EAAMsC,MAAOtC,EAAM0C,OACxCE,EAAgBmB,EAAiB/D,EAAOA,EAAMqC,QAASrC,EAAMyC,QAASzC,EAAMqC,QAAUtB,EAAO1B,EAAI4F,EAAWjF,EAAMyC,QAAU1B,EAAOzB,EAAI2F,GAG7I,OAAOT,EAAmB7E,EAASK,EAAO4C,EAC5C,CACA,SAASkB,EAAgBqB,EAAUC,EAAU1B,EAAM2B,EAAQC,GAAsBC,EAASD,GAAuBE,GAAkCvF,EAAK,KAAMwF,EAAW,MACvK,IAAIC,EAAYC,GAAYC,eAK5B,OAH2B,IAAvBC,GAAanC,KACfgC,EAAYhC,GAEP,CAELzD,GAAIA,EAEJoC,QAAS8C,EACT1C,QAAS2C,EAET9C,MAAO+C,EACP3C,MAAO6C,EAEP7B,KAAMgC,EAENI,KAAML,EAEV,CACA,SAASM,EAAW/F,GAClB,OAAO8D,EAAe9D,EAAMqC,QAASrC,EAAMyC,QAASzC,EAAM0D,KAAM1D,EAAMsC,MAAOtC,EAAM0C,MAAO1C,EAAMC,GAAID,EAAM8F,KAC5G,CACA,SAASE,EAAgB9F,EAASE,EAAQ,KAAMG,EAAa,GAAIE,EAAW,IAAKR,EAAK,KAAMwF,EAAW,MACrG,MAAO,CACLxF,GAAIA,EACJC,QAASA,EACTE,MAAOA,EAEPG,WAAYA,EACZE,SAAUA,EAId,CACA,SAASwF,EAAWpG,GAClB,OAAOmG,EAAenG,EAAMK,QAASL,EAAMO,MAAOP,EAAMU,WAAYV,EAAMY,SAAUZ,EAAMI,GAAIJ,EAAMiG,KACtG,CACA,SAASnF,EAAgBtB,EAAGC,EAAG8D,EAAU,KAAM8C,EAAQ,KAAMjG,EAAK,MAChE,MAAO,CACLA,GAAIA,EACJZ,EAAGA,EACHC,EAAGA,EACH8D,QAASA,EACT8C,MAAOA,EAEX,CAEA,SAASC,EAAWpD,GAClB,OAAOpC,EAAeoC,EAAM1D,EAAG0D,EAAMzD,EAAGyD,EAAMK,QAASL,EAAMmD,MAAOnD,EAAM9C,GAC5E,CACA,SAASmG,EAAYC,EAAWrG,GAC9B,MAAMyE,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACX6D,EAAKD,EAAUhH,EACfkH,EAAKF,EAAU/G,EACrB,IAAIkH,EAAWjH,KAAKkH,MAAMF,EAAK7B,EAAI4B,EAAK7B,GAIxC,OAFA+B,EAAsB,IAAXA,EAAiBjH,KAAKmH,IACf,MAAdF,IAAmBA,EAAW,KAC3BA,CACT,CAEA,SAASxB,EAAiBD,GACxB,MAAMhE,EAAS,CAAE1B,EAAG,EAAGC,EAAG,GACpBqH,EAAW5B,EAAQxF,KAAKmH,GAAK,IAC7BE,EAAY,CAAEvH,EAAG,EAAGC,EAAG,GAG7B,OAFAsH,EAAUtH,EAA0B,IAArBC,KAAKsH,IAAIF,GAAoB5F,EAAOzB,EACnDsH,EAAUvH,EAA0B,IAArBE,KAAKuH,IAAIH,GAAoB5F,EAAO1B,EAC5CuH,CACT,CAEA,SAASG,EAAwBpH,EAASU,EAAYP,EAAYU,EAAUL,EAAW,MACrF,GAAI4D,EAAiBjE,EAAYO,EAAWhB,EAAGgB,EAAWf,EAAGkB,EAASnB,EAAGmB,EAASlB,GAAGsF,OAAO/D,OAAS,EAAG,CACtG,MAAMmG,EAAiBxC,EAAmB7E,EAASG,EAAYiE,EAAiBjE,EAAYO,EAAWhB,EAAGgB,EAAWf,EAAGkB,EAASnB,EAAGmB,EAASlB,IACvI2H,EAAiBb,EAAWY,EAAgBlH,GAClD,IAAIoH,EAAe1G,EACf2G,EAAe,KACfC,EAAQ,KACI,MAAZjH,IACF+G,EAAe1C,EAAmB7E,EAASQ,EAAU4D,EAAiB5D,EAAUE,EAAWhB,EAAGgB,EAAWf,EAAGkB,EAASnB,EAAGmB,EAASlB,IACjI6H,EAAef,EAAWc,EAAc/G,GACxCiH,EAAQjH,EAASF,IAEnB,MAAMb,EAAS4G,EAAelG,EAAWG,GAAImH,EAAOH,EAAgBE,GACpE,OAAO/H,CACT,CAAO,OAAO,IAChB,CAEA,SAASiI,EAA2BxH,EAAOQ,EAAYG,EAAU8G,EAAaC,GAC5E,MAAMnI,EAAS,GACToI,EAAmB,CAAEnI,EAAyC,EAAtCE,KAAKC,IAAIgB,EAASnB,EAAIgB,EAAWhB,GAASiI,EAAYjI,EAAGC,EAAyC,EAAtCC,KAAKC,IAAIgB,EAASlB,EAAIe,EAAWf,GAASgI,EAAYhI,GAC1ImI,EAAiB,CAAEpI,EAAyC,EAAtCE,KAAKC,IAAIgB,EAASnB,EAAIgB,EAAWhB,GAASkI,EAAUlI,EAAGC,EAAyC,EAAtCC,KAAKC,IAAIgB,EAASlB,EAAIe,EAAWf,GAASiI,EAAUjI,GACpIsD,EAAgBwB,EAAAA,GAAaC,UAAUC,EAAAA,GAAUC,KAAK,CAAClE,EAAWhB,EAAGgB,EAAWf,GAAI,CAACe,EAAWhB,EAAImI,EAAiBnI,EAAGgB,EAAWf,EAAIkI,EAAiBlI,IAC5JgF,EAAAA,GAAUC,KAAK,CAAC/D,EAASnB,EAAGmB,EAASlB,GAAI,CAACkB,EAASnB,EAAIoI,EAAepI,EAAGmB,EAASlB,EAAImI,EAAenI,KACvG,GAAoC,IAAhCsD,EAAcgC,OAAO/D,OAGvBzB,EAAOwB,KAAKD,EAAeiC,EAAcgC,OAAO,GAAGvF,EAAGuD,EAAcgC,OAAO,GAAGtF,EAAGO,EAAMI,GAAI,SACtF,GAAKqH,EAAYjI,IAAMkI,EAAUlI,GAAOiI,EAAYhI,IAAMiI,EAAUjI,EAAI,CAG7E,MAAMoI,EAAa,CAAErI,EAAGgB,EAAWhB,EAAImI,EAAiBnI,EAAI,EAAGC,EAAGe,EAAWf,EAAIkI,EAAiBlI,EAAI,GAChGqI,EAAa,CAAEtI,EAAGmB,EAASnB,EAAIoI,EAAepI,EAAI,EAAGC,EAAGkB,EAASlB,EAAImI,EAAenI,EAAI,GAC9F,IAAIJ,EAAIC,EACc,IAAlBmI,EAAYjI,GAEdH,EAAK,CAAEG,EAAGgB,EAAWhB,EAAGC,EAAGC,KAAK2F,IAAIwC,EAAWpI,EAAIgI,EAAYhI,EAAGqI,EAAWrI,EAAIgI,EAAYhI,GAAKgI,EAAYhI,GAC9GH,EAAK,CAAEE,EAAGmB,EAASnB,EAAGC,EAAGC,KAAK2F,IAAIwC,EAAWpI,EAAIgI,EAAYhI,EAAGqI,EAAWrI,EAAIgI,EAAYhI,GAAKgI,EAAYhI,KAE5GJ,EAAK,CAAEG,EAAGE,KAAK2F,IAAIwC,EAAWrI,EAAIiI,EAAYjI,EAAGsI,EAAWtI,EAAIiI,EAAYjI,GAAKiI,EAAYjI,EAAGC,EAAGe,EAAWf,GAC9GH,EAAK,CAAEE,EAAGE,KAAK2F,IAAIwC,EAAWrI,EAAIiI,EAAYjI,EAAGsI,EAAWtI,EAAIiI,EAAYjI,GAAKiI,EAAYjI,EAAGC,EAAGkB,EAASlB,IAE9GF,EAAOwB,KAAKD,EAAezB,EAAGG,EAAGH,EAAGI,EAAGO,EAAMI,GAAI,IACjDb,EAAOwB,KAAKD,EAAexB,EAAGE,EAAGF,EAAGG,EAAGO,EAAMI,GAAI,GACnD,MAAO,GAAMqH,EAAYjI,KAAQ,EAAKkI,EAAUlI,GAAyB,IAAlBiI,EAAYjI,GAAeiI,EAAYhI,KAAQ,EAAKiI,EAAUjI,GAAyB,IAAlBgI,EAAYhI,EAEtI,GAAIsD,EAAcgC,OAAO/D,OAAS,QAG3B,GAAMtB,KAAKE,KAAKe,EAASnB,EAAIgB,EAAWhB,KAAOE,KAAKE,KAAK8H,EAAUlI,IAA0B,IAAlBiI,EAAYjI,GAAeE,KAAKE,KAAKe,EAASlB,EAAIe,EAAWf,KAAOC,KAAKE,KAAK8H,EAAUjI,IAA0B,IAAlBgI,EAAYhI,EAAW,CAEvM,MAAM6D,EAAO5D,KAAKqI,IAAIrI,KAAK2F,IAAI3F,KAAKC,IAAIa,EAAWhB,EAAImB,EAASnB,GAAIE,KAAKC,IAAIa,EAAWf,EAAIkB,EAASlB,IAAKgG,IACpGpG,EAAK,CAAEG,EAAGgB,EAAWhB,EAAIiI,EAAYjI,EAAI8D,EAAM7D,EAAGe,EAAWf,EAAIgI,EAAYhI,EAAI6D,GACjF9B,EAAK,CAAEhC,EAAGmB,EAASnB,EAAIkI,EAAUlI,EAAI8D,EAAM7D,EAAGe,EAAWf,EAAIgI,EAAYhI,EAAI6D,GACnF,IAAIhE,EAAIiC,EACc,IAAlBkG,EAAYjI,GACdF,EAAK,CAAEE,EAAGH,EAAGG,EAAI8D,EAAM7D,EAAGJ,EAAGI,GAC7B8B,EAAK,CAAE/B,EAAGF,EAAGE,EAAI8D,EAAM7D,EAAG+B,EAAG/B,KAE7BH,EAAK,CAAEE,EAAGH,EAAGG,EAAGC,EAAGJ,EAAGI,EAAI6D,GAC1B/B,EAAK,CAAE/B,EAAGgC,EAAGhC,EAAGC,EAAGH,EAAGG,EAAI6D,IAE5B/D,EAAOwB,KAAKD,EAAezB,EAAGG,EAAGH,EAAGI,EAAGO,EAAMI,GAAI,IACjDb,EAAOwB,KAAKD,EAAexB,EAAGE,EAAGF,EAAGG,EAAGO,EAAMI,GAAI,IACjDb,EAAOwB,KAAKD,EAAeS,EAAG/B,EAAG+B,EAAG9B,EAAGO,EAAMI,GAAI,IACjDb,EAAOwB,KAAKD,EAAeU,EAAGhC,EAAGgC,EAAG/B,EAAGO,EAAMI,GAAI,GACnD,KAAO,CAGL,MAAMf,EAAK,CAAEG,EAAGgB,EAAWhB,EAAImI,EAAiBnI,EAAI,EAAGC,EAAGe,EAAWf,EAAIkI,EAAiBlI,EAAI,GACxFH,EAAK,CAAEE,EAAGH,EAAGG,GAAKmB,EAASnB,EAAIgB,EAAWhB,GAAKE,KAAKC,IAAI8H,EAAYhI,GAAIA,EAAGJ,EAAGI,GAAKkB,EAASlB,EAAIe,EAAWf,GAAKC,KAAKC,IAAI8H,EAAYjI,IAC3ID,EAAOwB,KAAKD,EAAezB,EAAGG,EAAGH,EAAGI,EAAGO,EAAMI,GAAI,IACjDb,EAAOwB,KAAKD,EAAexB,EAAGE,EAAGF,EAAGG,EAAGO,EAAMI,GAAI,GACnD,KACK,CAEL,MAAMkD,EAAO5D,KAAKqI,IAAIrI,KAAK2F,IAAI3F,KAAKC,IAAIa,EAAWhB,EAAImB,EAASnB,GAAIE,KAAKC,IAAIa,EAAWf,EAAIkB,EAASlB,IAAKgG,IACpGpG,EAAK,CAAEG,EAAGgB,EAAWhB,EAAIiI,EAAYjI,EAAI8D,EAAM7D,EAAGe,EAAWf,EAAIgI,EAAYhI,EAAI6D,GACjF/B,EAAK,CAAE/B,EAAGmB,EAASnB,EAAIkI,EAAUlI,EAAI8D,EAAM7D,EAAGe,EAAWf,EAAIgI,EAAYhI,EAAI6D,GAC7EhE,EAAKiF,EAAAA,GAAaC,UAAUC,EAAAA,GAAUC,KAAK,CAACrF,EAAGG,EAAGH,EAAGI,GAAI,CAACJ,EAAGG,EAAIoI,EAAepI,EAAGH,EAAGI,EAAImI,EAAenI,IAC7GgF,EAAAA,GAAUC,KAAK,CAACnD,EAAG/B,EAAG+B,EAAG9B,GAAI,CAAC8B,EAAG/B,EAAImI,EAAiBnI,EAAG+B,EAAG9B,EAAIkI,EAAiBlI,KAAKsF,OAAO,GAC/FxF,EAAOwB,KAAKD,EAAezB,EAAGG,EAAGH,EAAGI,EAAGO,EAAMI,GAAI,IACjDb,EAAOwB,KAAKD,EAAexB,EAAGE,EAAGF,EAAGG,EAAGO,EAAMI,GAAI,IACjDb,EAAOwB,KAAKD,EAAeS,EAAG/B,EAAG+B,EAAG9B,EAAGO,EAAMI,GAAI,GACnD,CACA,OAAOb,CACT,CAGA,SAASyI,EAAgClI,EAASE,EAAOiI,EAAYhI,EAAYK,EAAUP,EAAamI,EAAMC,GAE5G,MAAMC,EAAgB,CAACrI,EAAYkI,GAAalI,EAAYkI,EAAa,IACnEI,EAAc,CAACrI,EAAMU,WAAYV,EAAMY,UACvC0H,EAAgBxH,GAAgBsH,EAAc,GAAG5I,EAAI4I,EAAc,GAAG5I,GAAK,GAAI4I,EAAc,GAAG3I,EAAI2I,EAAc,GAAG3I,GAAK,GAE1H8I,EAAmBnJ,EAA6BgJ,EAAc,GAAIA,EAAc,IAEhFI,EAAmBlC,EAAUgC,GACR,IAAvBC,EAAiB/I,EAASgJ,EAAiBhJ,EAAI0I,EAAWM,EAAiB/I,EAAI0I,EAEnF,MAAMM,EAAW,CAAC,KAAM,MAClBC,EAAW,CAAC,KAAM,MAClBC,EAAa,CAAC,KAAM,MAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMC,EAAeT,EAAcQ,GAE7BE,EAAgB/I,EAAYgJ,WAAU7F,GAASA,EAAM9C,KAAOyI,EAAazI,KAC/E,GAAI0I,EAAgB,GAAMA,EAAgB/I,EAAYiB,OAAS,EAAI,CACjE,IAAIgI,EAAc1C,EAAUuC,GAED,IAAvBN,EAAiB/I,EAASwJ,EAAYxJ,EAAI0I,EAAWc,EAAYvJ,EAAI0I,EACzEM,EAASG,GAAKI,EAEd,MAAMC,EAAkB,EAAJL,EAAQ,EACtBM,EAAyBJ,EAAgBG,EAG3CvJ,KAAKC,KAAKI,EAAYmJ,GAAwB1J,EAAIqJ,EAAarJ,GAAK+I,EAAiB9I,GAAKM,EAAYmJ,GAAwBzJ,EAAIoJ,EAAapJ,GAAK8I,EAAiB/I,GAAK2J,KAE5KH,EAAc1C,EAAUvG,EAAYmJ,IAET,IAAvBX,EAAiB/I,EAASwJ,EAAYxJ,EAAI0I,EAAWc,EAAYvJ,EAAI0I,EACzEM,EAASG,GAAKI,EACdL,EAAWC,GAAKtC,EAAUuC,GAE9B,KAAO,CAEL,IAAIO,EAAe,KACNA,EAAH,IAANR,EAAwB3I,EAAgCK,EAE5D,MAAM+I,EAAY3J,KAAK2F,IAAI+D,EAAa3G,MAAO2G,EAAavG,OAASnD,KAAK2F,IAAI3F,KAAKC,IAAIyI,EAAc,GAAG5I,EAAI4I,EAAc,GAAG5I,GAAIE,KAAKC,IAAIyI,EAAc,GAAG3I,EAAI2I,EAAc,GAAG3I,IAC1K6J,EAAQxI,EAAe0H,EAAiBhJ,EAAI6J,EAAYd,EAAiB/I,EAAGgJ,EAAiB/I,EAAI4J,EAAYd,EAAiB9I,GAC9H8J,EAAQzI,EAAe0H,EAAiBhJ,EAAI6J,EAAYd,EAAiB/I,GAAM,EAAIgJ,EAAiB/I,EAAI4J,EAAYd,EAAiB9I,GAAM,GAE3IsD,EAAgBmB,EAAiBkF,EAAcE,EAAM9J,EAAG8J,EAAM7J,EAAG8J,EAAM/J,EAAG+J,EAAM9J,GAEtF,IAAI+J,EAAe,KACf1E,GAAW,KACX2E,EAA6BlB,EAYjC,GAXU,IAANK,IAASa,EAA6BpI,EAAWkH,IACrDxF,EAAcgC,OAAO1B,SAAQH,IAC3B,GAAKA,EAAM1D,EAAIiK,EAA2BjK,EAAM0D,EAAMzD,EAAIgK,EAA2BhK,EAAKqF,EAAS,CACjG,MAAME,EAAY,IAAIhB,OAAOnF,GAAOuK,EAAavF,MAAMC,QAAQsF,KAC1DtJ,EAAQiE,cAAciB,EAAW9B,EAAM1D,EAAG0D,EAAMzD,IAAQK,EAAQmF,gBAAgBD,EAAW9B,EAAM1D,EAAG0D,EAAMzD,MAC7G+J,EAAe1I,EAAeoC,EAAM1D,EAAG0D,EAAMzD,EAAGoJ,EAAatF,SAC7DuB,EAAW5B,EAAM1D,EAAIiK,EAA2BjK,EAAM0D,EAAMzD,EAAIgK,EAA2BhK,EAE/F,KAGkB,MAAhB+J,EAGFnB,EAAYO,GAAKrC,EAAWiD,EAAcJ,OAErC,CAEL,MAAMM,EAAUN,EAAa5G,QAAU9C,KAAKC,IAAI4I,EAAiB/I,GAAKgJ,EAAiBhJ,EAAIE,KAAKC,IAAI4I,EAAiB9I,GAC/GkK,EAAUP,EAAaxG,QAAUlD,KAAKC,IAAI4I,EAAiB9I,GAAK+I,EAAiB/I,EAAIC,KAAKC,IAAI4I,EAAiB/I,GAC/GoK,EAAkBtD,EAAUuC,GAClCe,EAAgBpK,EAAIkK,EACpBE,EAAgBnK,EAAIkK,EACpBjB,EAASE,GAAKgB,EAGd,MAAMC,EAAczK,EAA6B0B,EAAesI,EAAa5G,QAAS4G,EAAaxG,SAAUgH,GACvF,IAAlBC,EAAYrK,EAAS6I,EAAYO,GAAK,GACnB,IAAnBiB,EAAYrK,EAAU6I,EAAYO,GAAK,KACpB,IAAnBiB,EAAYpK,EAAU4I,EAAYO,IAAM,GAASP,EAAYO,GAAK,EACxE,CACF,CACF,CAEA,MAAMkB,EAAW1D,EAAUpG,GAK3B,OAJA8J,EAASpJ,WAAa2H,EAAY,GAClCyB,EAASlJ,SAAWyH,EAAY,GAGzB,CAAErI,MAAO8J,EAAUC,MAAOtB,EAAUuB,QAASrB,EAAYsB,MAAOvB,EACzE,CAEA,SAASwB,EAAqCC,EAASpK,EAAa0D,EAAQ3D,GA4B1E,OA3BAC,EAAYsD,SAAQH,IACM,MAApBiH,EAAQJ,MAAM,IAAcI,EAAQJ,MAAM,GAAG3J,KAAO8C,EAAM9C,KAC5D8C,EAAM1D,EAAI2K,EAAQJ,MAAM,GAAGvK,EAC3B0D,EAAMzD,EAAI0K,EAAQJ,MAAM,GAAGtK,GAEL,MAApB0K,EAAQJ,MAAM,IAAcI,EAAQJ,MAAM,GAAG3J,KAAO8C,EAAM9C,KAC5D8C,EAAM1D,EAAI2K,EAAQJ,MAAM,GAAGvK,EAC3B0D,EAAMzD,EAAI0K,EAAQJ,MAAM,GAAGtK,GAEH,MAAtB0K,EAAQH,QAAQ,IAClB9G,EAAMmD,QAEgB,MAApB8D,EAAQF,MAAM,IAChB/G,EAAMmD,OACR,IAEwB,MAAtB8D,EAAQH,QAAQ,IAAYjK,EAAYqK,MAClB,MAAtBD,EAAQH,QAAQ,IAAYjK,EAAYsK,QACpB,MAApBF,EAAQF,MAAM,KAChBlK,EAAYc,QAAQsJ,EAAQF,MAAM,IAClClK,EAAY,GAAGsG,MAAQ,GAED,MAApB8D,EAAQF,MAAM,KAChBlK,EAAYgB,KAAKoJ,EAAQF,MAAM,IAC/BlK,EAAYA,EAAYiB,OAAS,GAAGqF,MAAQtG,EAAYiB,OAAS,GAEnEnB,EAAcC,EAASC,EAAaoK,EAAQnK,MAAOyD,GAC5C1D,CACT,CChdA,MAAM+F,GAAcwE,OAAOC,OAAO,CAChCC,gBAAiB,EACjBzE,eAAgB,EAChB0E,WAAY,EACZC,oBAAqB,EACrBC,UAAW,EACXC,+BAAgC,EAChCC,2BAA4B,EAC5BC,eAAgB,EAChBC,mBAAoB,EACpBC,WAAY,EACZC,iBAAkB,EAClBC,cAAe,EACfC,cAAe,GACfC,sBAAuB,GACvBC,uBAAwB,GACxBC,kBAAmB,GACnBC,eAAgB,GAChBC,cAAe,GACfC,kBAAmB,KAGrB,SAASC,GAAmBC,GAE1B,IAAIpM,GAAS,EACb,IAAK,MAAMqM,KAAQ9F,GAAa,CAC9B,MAAM+F,EAAY/F,GAAY8F,GAC1BC,IAAcF,IAChBpM,GAAS,EAEb,CAEA,OAAOA,CACT,CAEA,MAAMV,GAAS,CACb,CAACiH,GAAY2E,YAAa,CACxBqB,IAAK,OACLC,YAAa,SACbjI,OAAAA,CAAS3D,GACP,MAAM6L,EAAe,IACfC,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QAQjB,IAAInB,EAAU,GAOd,OANAA,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKD,EAAeE,GAAK,MAAQrH,EAAMqH,EAAI,GAAM,KAC9EzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKD,EAAeE,GAAK,MAAQrH,EAAMqH,EAAI,GAAM,KAC9EzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,IACJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAMkM,EAAY,IACZJ,EAAI9L,EAAMsC,MAAQ4J,EAAYlM,EAAM0C,MAAQ,EAC5CqJ,EAAI/L,EAAM0C,MACVyJ,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAItC,EAAM0C,MAAQwJ,EAC1D,MAAO,CACLG,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAY4E,qBAAsB,CACjCoB,IAAK,UACLC,YAAa,sBACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACX8J,EAASR,EACTS,EAAyC,EAA9BjN,KAAKkN,KAAMV,EAAI,EAAKQ,GAC/BG,EAAUH,GAAU,EAAIhN,KAAKuH,IAAI0F,EAAW,IAQlD,IAAIlL,EAAU,GAOd,OANAA,GAAW,MAAQmD,EAAMqH,EAAI,EAAKY,GAAW,MAAQhI,EAAMqH,EAAI,GAAM,KACrEzK,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,EAAKY,GAAW,KAAOhI,EAAMqH,EAAI,GAAM,KAChIzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,GAAM,KAAOpH,EAAMqH,EAAI,GAAM,KACtHzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKY,GAAW,MAAQhI,EAAMqH,EAAI,GAAM,KACrEzK,GAAW,IACJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAM2M,EAAY3M,EAAM0C,OAAS,EAAInD,KAAKuH,IAAI,KACxCgF,EAAI9L,EAAMsC,MAAoB,EAAZqK,EAClBZ,EAAI/L,EAAM0C,MACVyJ,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAIqK,EAC5C,MAAO,CACLN,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAY6E,WAAY,CACvBmB,IAAK,MACLC,YAAa,iBACbjI,OAAAA,CAAS3D,GAEP,MAAM+L,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACXmK,EAAS,IAAOb,EACtB,IAAIzK,EAAU,GA8Bd,OA7BAA,GAAW,MAAQmD,EAAMsH,EAAI,GAAM,MAAQrH,EAAMqH,EAAI,GAAM,KAM3DzK,GAAW,MAAQmD,EAAMsH,EAAI,GAAM,MAAQrH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMsH,EAAI,GAAM,MAAQrH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMsH,EAAI,GAAM,MAAQrH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMsH,EAAI,GAAM,MAAQrH,EAAMqH,EAAI,GAAM,KAQ3DzK,GAAW,MAAQmD,EAAMsH,EAAI,EAAKa,GAAU,MAAQlI,EAAMqH,EAAI,GAAM,KACpEzK,GAAW,MAAQmD,EAAMsH,EAAI,EAAKa,GAAU,MAAQlI,EAAMqH,EAAI,GAAM,KACpEzK,GAAW,MAAQmD,EAAMsH,EAAI,GAAM,MAAQrH,EAAMqH,EAAI,EAAKa,GAAU,KACpEtL,GAAW,MAAQmD,EAAMsH,EAAI,GAAM,MAAQrH,EAAMqH,EAAI,EAAKa,GAAU,KACpEtL,GAAW,IAQJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAM4M,EAAuB,IAAd5M,EAAM0C,MACfoJ,EAAI9L,EAAM0C,MAAQkK,EAClBb,EAAI/L,EAAM0C,MAAQkK,EAClBT,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAAIkK,EACtCR,EAAIpM,EAAMqC,QAAUrC,EAAM0C,MAAQ,EAAIkK,EAC5C,MAAO,CACLP,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAY8E,gCAAiC,CAC5CkB,IAAK,SACLC,YAAa,iCACbjI,OAAAA,CAAS3D,GAEP,MAAM+L,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACX8J,EAASR,EAAI,EAQnB,IAAIzK,EAAU,GAMd,OALAA,GAAW,KAAQmD,EAAM,MAAQC,EAAK6H,GAAU,KAChDjL,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,UAAoE9H,EAAM,KAAOC,EAAK6H,GAAU,KAC3GjL,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,UAAoE9H,EAAM,KAAOC,EAAK6H,GAAU,KAC3GjL,GAAW,MAAQmD,EAAK8H,GAAU,MAAQ7H,EAAK6H,GAAU,KACzDjL,GAAW,IACJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAM6M,EAAa7M,EAAM0C,MAAQnD,KAAKuN,MAChChB,EAAIe,EACJd,EAAIc,EACJV,EAAInM,EAAMyC,QAAUoK,EAAa,EACjCT,EAAIpM,EAAMqC,QAAUwK,EAAa,EACvC,MAAO,CACLR,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAY+E,4BAA6B,CACxCiB,IAAK,YACLC,YAAa,uBACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACX8J,EAASR,EACTS,EAAyC,EAA9BjN,KAAKkN,KAAMV,EAAI,EAAKQ,GAC/BG,EAAUH,GAAU,EAAIhN,KAAKuH,IAAI0F,EAAW,IAClD,IAAIlL,EAAU,GA0Bd,OAzBAA,GAAW,MAAQmD,EAAMqH,EAAI,EAAKY,GAAW,MAAQhI,EAAMqH,EAAI,GAAM,KACrEzK,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,EAAKY,GAAW,KAAOhI,EAAMqH,EAAI,GAAM,KAChIzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKY,GAAW,MAAQhI,EAAMqH,EAAI,GAAM,KAQrEzK,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,EAAKY,GAAW,KAAOhI,EAAMqH,EAAI,GAAM,KAChIzK,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,EAAKY,GAAW,KAAOhI,EAAMqH,EAAI,GAAM,KAChIzK,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,EAAKY,GAAW,KAAOhI,EAAMqH,EAAI,GAAM,KAOhIzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKY,GAAW,MAAQhI,EAAMqH,EAAI,GAAM,KACrEzK,GAAW,IAKJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAM2M,EAAY3M,EAAM0C,OAAS,EAAInD,KAAKuH,IAAI,KACxCgF,EAAI9L,EAAMsC,MAAoB,EAAZqK,EAClBZ,EAAI/L,EAAM0C,MACVyJ,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAIqK,EAC5C,MAAO,CACLN,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYgF,gBAAiB,CAC5BgB,IAAK,WACLC,YAAa,WACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACX8J,EAASR,EACTS,EAAyC,EAA9BjN,KAAKkN,KAAMX,EAAI,EAAKS,GAC/BQ,EAAUR,GAAU,EAAIhN,KAAKuH,IAAI0F,EAAW,IAElD,IAAIlL,EAAU,GAkBd,OAjBAA,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,EAAKgB,GAAW,KACrEzL,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,UAAoE9H,EAAM,KAAOC,EAAMqH,EAAI,EAAKgB,GAAW,KACtHzL,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,GAAM,KAAOpH,EAAMqH,EAAI,EAAKgB,GAAW,KAChIzL,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,IAWJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAM2M,EAAY3M,EAAM0C,OAAS,EAAInD,KAAKuH,IAAIvH,KAAKkN,KAAKzM,EAAMsC,MAAQ,EAAItC,EAAM0C,SAC1EoJ,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MAAoB,EAAZiK,EAClBR,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAIqK,EAC5C,MAAO,CACLN,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYiF,oBAAqB,CAChCe,IAAK,cACLC,YAAa,cACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACXuK,EAAkB,IAAOjB,EAC/B,IAAIzK,EAAU,GAcd,OAbAA,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,EAAKiB,GAAmB,KAC7E1L,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,IASJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAMkM,EAAY,IACZJ,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,OAAS,EAAIwJ,GACvBC,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAAIwJ,EAAYlM,EAAM0C,MACxD0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EACxC,MAAO,CACL+J,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYkF,YAAa,CACxBc,IAAK,OACLC,YAAa,QACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACXuK,EAAkB,IAAOjB,EAC/B,IAAIzK,EAAU,GAgBd,OAfAA,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,EAAKiB,GAAmB,KAC7E1L,GAAW,MAAQmD,EAAMqH,EAAI,EAAKkB,GAAmB,MAAQtI,EAAMqH,EAAI,GAAM,KAC7EzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,IAUJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAMkM,EAAY,IACZJ,EAAI9L,EAAMsC,MAAStC,EAAM0C,MAAQwJ,EAAY,EAC7CH,EAAI/L,EAAM0C,OAAS,EAAIwJ,EAAY,GACnCC,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAAIwJ,EAAYlM,EAAM0C,MAAQ,EAChE0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAItC,EAAM0C,MAAQwJ,EAAY,EACtE,MAAO,CACLG,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYmF,kBAAmB,CAC9Ba,IAAK,YACLC,YAAa,iBACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACX8J,EAASR,EACTS,EAAyC,EAA9BjN,KAAKkN,KAAMX,EAAI,EAAKS,GAC/BQ,EAAUR,GAAU,EAAIhN,KAAKuH,IAAI0F,EAAW,IAClD,IAAIlL,EAAU,GA8Bd,OA7BAA,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,EAAKgB,GAAW,KACrEzL,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,EAAKgB,GAAW,KAOrEzL,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,UAAoE9H,EAAM,KAAOC,EAAMqH,EAAI,EAAKgB,GAAW,KACtHzL,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,GAAM,KAAOpH,EAAMqH,EAAI,EAAKgB,GAAW,KAMhIzL,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,EAAKgB,GAAW,KACrEzL,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,UAAoE9H,EAAM,KAAOC,EAAMqH,EAAI,EAAKgB,GAAW,KACtHzL,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,GAAM,KAAOpH,EAAMqH,EAAI,EAAKgB,GAAW,KAMhIzL,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,EAAKgB,GAAW,KACrEzL,GAAW,IAKJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAM2M,EAAY3M,EAAM0C,OAAS,EAAInD,KAAKuH,IAAIvH,KAAKkN,KAAKzM,EAAMsC,MAAQ,EAAItC,EAAM0C,SAC1EoJ,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MAAoB,EAAZiK,EAClBR,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAAgB,EAAZiK,EACtCP,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAIqK,EAC5C,MAAO,CACLN,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYoF,eAAgB,CAC3BY,IAAK,UACLC,YAAa,UACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACX8J,EAASR,EAEf,IAAIzK,EAAU,GACdA,GAAW,MAAQmD,EAAMqH,EAAI,EAAKC,GAAK,MAAQrH,EAAMqH,EAAI,GAAM,KAM/DzK,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,GAAM,IAAOpH,EAAM,KAC5GpD,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,EAAKC,GAAK,KAAOrH,EAAMqH,EAAI,GAAM,KA4B1H,MAAMS,EAAyC,EAA9BjN,KAAKkN,KAAMV,EAAI,EAAKQ,GAC/BG,EAAUH,GAAU,EAAIhN,KAAKuH,IAAI0F,EAAW,IAYlD,OAXAlL,GAAW,MAAQmD,EAAMqH,EAAI,EAAKY,GAAW,MAAQhI,EAAMqH,EAAI,GAAM,KACrEzK,GAAW,KAAOiL,EAAS,IAAMA,EAAtB,WAAoE9H,EAAMqH,EAAI,EAAKY,GAAW,KAAOhI,EAAMqH,EAAI,GAAM,KAChIzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKC,GAAK,MAAQrH,EAAMqH,EAAI,GAAM,KAC/DzK,GAAW,IAQJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAMiN,EAAiBjN,EAAM0C,OAAS,EAAInD,KAAKuH,IAAI,KAC7CoG,EAAiBlN,EAAMsC,MAAQtC,EAAM0C,MACrCoJ,EAAI9L,EAAMsC,MAAQ2K,EAAiBC,EACnCnB,EAAI/L,EAAM0C,MACVyJ,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAI4K,EAC5C,MAAO,CACLb,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYqF,eAAgB,CAC3BW,IAAK,UACLC,YAAa,UACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACjB,IAAInB,EAAU,GAgBd,OAfAA,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,IAUJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACVyJ,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EACxC,MAAO,CACL+J,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYsF,uBAAwB,CACnCU,IAAK,aACLC,YAAa,2BACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACXmK,EAAS,IAAOd,EACtB,IAAIxK,EAAU,GAwBd,OAvBAA,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKc,GAAU,MAAQlI,EAAMqH,EAAI,GAAM,KACpEzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKc,GAAU,MAAQlI,EAAMqH,EAAI,GAAM,KACpEzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKc,GAAU,MAAQlI,EAAMqH,EAAI,GAAM,KACpEzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKc,GAAU,MAAQlI,EAAMqH,EAAI,GAAM,KACpEzK,GAAW,IAcJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAM4M,EAAuB,IAAd5M,EAAMsC,MACfwJ,EAAI9L,EAAMsC,MAAiB,EAATsK,EAClBb,EAAI/L,EAAM0C,MACVyJ,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAIsK,EAC5C,MAAO,CACLP,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYuF,wBAAyB,CACpCS,IAAK,kBACLC,YAAa,kBACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACXuK,GAAmBlB,EAAIC,GAAK,EAClC,IAAIzK,EAAU,GAgBd,OAfAA,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKkB,GAAmB,MAAQtI,EAAMqH,EAAI,GAAM,KAC7EzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKkB,GAAmB,MAAQtI,EAAMqH,EAAI,GAAM,KAC7EzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,MAAQpH,EAAMqH,EAAI,GAAM,KAC3DzK,GAAW,IAUJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAMmN,GAAenN,EAAMsC,MAAQtC,EAAM0C,OAAS,EAC5CoJ,EAAI9L,EAAMsC,MAAsB,EAAd6K,EAClBpB,EAAI/L,EAAM0C,MACVyJ,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAI6K,EAC5C,MAAO,CACLd,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYwF,mBAAoB,CAC/BQ,IAAK,OACLC,YAAa,aACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACXuK,GAAmBlB,EAAIC,GAAK,EAClC,IAAIzK,EAAU,GAoBd,OAnBAA,GAAW,MAAQmD,EAAMqH,EAAI,EAAKkB,GAAmB,MAAQtI,EAAMqH,EAAI,GAAM,KAC7EzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKkB,GAAmB,MAAQtI,EAAMqH,EAAI,GAAM,KAC7EzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,KAAQpH,EAAM,KACjDpD,GAAW,MAAQmD,EAAMqH,EAAI,EAAKkB,GAAmB,MAAQtI,EAAMqH,EAAI,GAAM,KAC7EzK,GAAW,MAAQmD,EAAMqH,EAAI,EAAKkB,GAAmB,MAAQtI,EAAMqH,EAAI,GAAM,KAC7EzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,KAAQpH,EAAM,KACjDpD,GAAW,MAAQmD,EAAMqH,EAAI,EAAKkB,GAAmB,MAAQtI,EAAMqH,EAAI,GAAM,KAC7EzK,GAAW,IAYJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAMmN,GAAenN,EAAMsC,MAAQtC,EAAM0C,OAAS,EAC5CoJ,EAAI9L,EAAMsC,MAAsB,EAAd6K,EAClBpB,EAAI/L,EAAM0C,MACVyJ,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EAAI6K,EAC5C,MAAO,CACLd,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,GAEF,CAACpG,GAAYyF,gBAAiB,CAC5BO,IAAK,WACLC,YAAa,UACbjI,OAAAA,CAAS3D,GACP,MAAM8L,EAAI9L,EAAMsC,MACVyJ,EAAI/L,EAAM0C,MACV+B,EAAKzE,EAAMqC,QACXqC,EAAK1E,EAAMyC,QACjB,IAAInB,EAAU,GAgBd,OAfAA,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,KAAQpH,EAAM,KACjDpD,GAAW,KAAQmD,EAAM,MAAQC,EAAMqH,EAAI,GAAM,KACjDzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,KAAQpH,EAAM,KACjDpD,GAAW,KAAQmD,EAAM,MAAQC,EAAMqH,EAAI,GAAM,KACjDzK,GAAW,MAAQmD,EAAMqH,EAAI,GAAM,KAAQpH,EAAM,KACjDpD,GAAW,IAUJA,CACT,EACA0K,eAAAA,CAAiBhM,EAAOkC,EAAYC,GAClC,OAAOF,EAAuBjC,EAAOkC,EAAYC,EACnD,EACA8J,WAAAA,CAAajM,GACX,MAAM8L,EAAI9L,EAAMsC,MAAQ,EAClByJ,EAAI/L,EAAM0C,MAAQ,EAClByJ,EAAInM,EAAMyC,QAAUzC,EAAM0C,MAAQ,EAClC0J,EAAIpM,EAAMqC,QAAUrC,EAAMsC,MAAQ,EACxC,MAAO,CACL+J,IAAKF,EACLG,KAAMF,EACN/G,MAAOyG,EACPvG,OAAQwG,EAEZ,IAGExN,GAAc,GAEpB,SAASsH,GAAcuH,GAGrB,IAAIhO,GAAS,EACb,IAAK,MAAMY,KAAStB,GACbsB,GAASoN,GAAgBpN,GAASoN,IACrChO,GAAS,GAIb,OAAOA,CACT,CAEA,MAAMiO,GAAgBlD,OAAOC,OAAO,CAClCkD,qBAAsB,EACtBC,sBAAuB,EACvBC,8BAA+B,EAC/BC,0BAA2B,EAC3BC,kCAAmC,EACnCC,gCAAiC,IAG7BrI,GAAuB,IAEvBE,GAAmC,EAAI,EAEvCwD,GAAM,KAGZ,IAAI4E,GAAU,EAEd,SAASC,GAAY9F,GACnB6F,GAAU7F,CACZ,C,eCntBA,IACAnK,KAAAA,KACA,CACAc,OAAA,GACAH,YAAA,GACAJ,gBAAA,EACAU,qBAAA,EACAiH,KAAA,GACA9G,eAAA,GACAD,eAAA,KAGA+O,QAAA,KACAC,EAAAA,GAAAA,IAAA,0EACAC,gBAAAA,CAAAvF,GACA,KAAAwF,WAAAxF,GACA,KAAA5J,qBAAA,CAEA,EACAqP,YAAAA,GACA,KAAAD,WAAAtI,GAAA2F,mBACA,KAAAnN,iBAAA,CACA,EACAgQ,WAAAA,GACA,KAAAF,WAAAtI,GAAA0F,eACA,KAAAlN,iBAAA,CACA,EACAS,YAAAA,GACA,KAAAwP,aACA,EACAC,iBAAAA,GACA,MAAAC,EAAAvI,EAAA,KAAAwI,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA,KAAAuO,sBACAF,EAAAxI,KAAA,KAAAA,KACA,KAAA2I,gBAAAH,EACA,EACAI,YAAAA,GACA,KAAAC,WAAA,KAAA5P,eACA,EACA6P,aAAAA,GACA,KAAAC,WAAA,KAAA7P,eACA,GAEA8P,SAAA,KACAC,EAAAA,GAAAA,IAAA,qCAEAC,OAAAA,GACAC,GAAAC,IAAA,yBACA,WAAAV,qBACA,KAAA1I,KAAA,KAAAyI,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA,KAAAuO,qBAAA1I,KACA,GAEA,GCjJwP,MCQpP,IAAY,OACd,GACA,EACA,GACA,EACA,KACA,WACA,MAIF,GAAe,GAAiB,Q,WCnBYhI,GAAOC,WAAS,MAAU,KAAUoR,EAAAA,EAAAA,MAAY,G,OAAC,OAAW,C,YAAqB,CAAW,oBAAC7Q,QAAM,Y,MAAuB,CAAkB,oBAAgB,gBAAIR,MAAG,W,CAAuB,OAAS,CAAO,aAAGI,QAAaK,S,EAA8C,GAAE,2B,OAAM,EAAC,O,IAAC,E,MAAuE,CAAqB,IAAO,QAAC,QAAsB,6BAAC,KAAS,gBAAyD,6BAAG,mE,IAAgC,cAAW,C,YAAqB,CAAI,oBAACD,UAAM,KAAiB,OAAIJ,GAAM,c,CAAkD,4BAAqB,Y,YAAW,CAAI,oBAACI,UAAM,KAAiB,OAAI,GAAG,gBAErtBb,EAEJ,E,MCaAc,GAAAA,GAAA,GACAyH,IAGA,QACApI,KAAAA,KACA,CACAc,OAAA,GACAH,YAAA,GACA+G,qBAAA,GACAE,iCAAAA,KAGAsI,QAAA,CACAsB,mBAAAA,CAAA/P,EAAAC,EAAAK,EAAA0P,GAAA,GACA,MAAAC,EAAA,EACAC,EAAA,EACA5P,EAAA6P,YAAA,QACA7P,EAAA8P,YAAA,EACAJ,EACA1P,EAAA+P,SAAArQ,EAAAkQ,EAAAjQ,EAAAiQ,EAAAD,EAAAA,GAEA3P,EAAAgQ,WAAAtQ,EAAAkQ,EAAAjQ,EAAAiQ,EAAAD,EAAAA,GAEA3P,EAAA8P,YAAA,EACA,EACAG,gBAAAA,CAAA5P,GACA,KAAA6P,iBAEA,MAAAC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MAEAC,EAAAlQ,EAAAqC,QAAArC,EAAAsC,MAAA,EACA6N,EAAAnQ,EAAAqC,QACA+N,EAAApQ,EAAAqC,QAAArC,EAAAsC,MAAA,EACA+N,EAAArQ,EAAAyC,QAAAzC,EAAA0C,MAAA,EACA4N,EAAAtQ,EAAAyC,QACA8N,EAAAvQ,EAAAyC,QAAAzC,EAAA0C,MAAA,EACA8N,EAAA,CAAAN,EAAAC,EAAAC,EAAAA,EAAAA,EAAAD,EAAAD,EAAAA,GACAO,EAAA,CAAAJ,EAAAA,EAAAA,EAAAC,EAAAC,EAAAA,EAAAA,EAAAD,GACA,QAAA7H,EAAA,EAAAA,EAAA,EAAAA,IACA,KAAA2G,oBAAAoB,EAAA/H,GAAAgI,EAAAhI,GAAA9I,EAEA,EACA+Q,kBAAAA,CAAA7Q,EAAAiI,GACA,KAAA+H,iBAEA,MAAAC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACArQ,EAAA,KAAA+Q,eAAA9Q,GACAH,EAAAC,EAAAC,EAAAC,EAAA,KAAA0O,WACA,QAAA9F,EAAA,EAAAA,EAAA7I,EAAAiB,OAAA4H,IACA,KAAA2G,oBAAAxP,EAAA6I,GAAApJ,EAAAO,EAAA6I,GAAAnJ,EAAAK,GAAA,GACA8I,IAAAX,GACA,KAAAsH,qBAAAxP,EAAA6I,GAAApJ,EAAAO,EAAA6I,EAAA,GAAApJ,GAAA,GAAAO,EAAA6I,GAAAnJ,EAAAM,EAAA6I,EAAA,GAAAnJ,GAAA,EAAAK,GAAA,EAGA,EAEAkQ,cAAAA,GACA,MAAAC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACAW,EAAAb,SAAAc,uBAAA,aACA,QAAApI,EAAA,EAAAA,EAAAmI,EAAA/P,OAAA4H,IACAmI,EAAAnI,GAAAqI,SAEAnR,EAAAoR,UAAA,IAAAjB,EAAAzK,MAAAyK,EAAAvK,OACA,EAGAyL,gBAAAA,CAAAC,GAEA,KAAAC,6BAAAD,GACA,KAAAE,0CAAAF,GACA,KAAAG,yBAAAH,GACA,KAAAI,6BAAAJ,GACA,KAAAK,gCAAAL,EACA,EAEAC,4BAAAA,CAAAD,GAEA,QAAApL,GAAA,KAAA0L,SAAA,CASA,GAPA,UAAAN,EAAAvN,OACA,KAAA8N,cAAAP,EAAAQ,QAAA7D,GAAAqD,EAAAS,QAAA,KAAAH,SACA,KAAA1B,iBACA,KAAA5B,WAAAtI,GAAA0E,iBAIA,eAAA4G,EAAAvN,MAAA,cAAAuN,EAAAvN,KAAA,CACA,KAAAmM,iBACA,MAAAC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACA0B,EAAA7N,EAAAmN,EAAAQ,QAAA7D,GAAAqD,EAAAS,QAAA,KAAAH,SACA,KAAAK,UAAAjS,EAAAgS,EAKA,CAEA,eAAAV,EAAAvN,MACA,KAAAmM,gBAEA,CACA,EAEAsB,yCAAAA,CAAAF,GAEA,QAAAM,UAAA5L,GAAA2F,mBACA,UAAA2F,EAAAvN,KAAA,CACA,MAAAoM,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACA3M,EAAA,KAAAiL,UACAsD,EAAA,CAAAxS,EAAA4R,EAAAQ,QAAA7D,GAAAtO,EAAA2R,EAAAS,SAEAI,EAAAzO,EAAA1D,EAAA2D,EAAAuO,EAAAxS,EAAAwS,EAAAvS,GAEA,MAAAwS,IAIA,KAAAC,YAAAD,EAAA7R,IACA,KAAA2P,iBAAAkC,GACA,KAAA7D,WAAAtI,GAAA0E,iBAMA,IAAA2H,EAAA,KACAC,EAAA,KAEA,MAAAC,EAAA,KAAAC,UACAD,EAAAhP,SAAArD,IACA,MAAAD,EAAA,KAAA+Q,eAAA9Q,GACAH,EAAAC,EAAAC,EAAAC,EAAAyD,GAEA,IAAAmF,EAAA,EACA,MAAAA,EAAA7I,EAAAiB,OAAA,UAAAmR,EAAA,CACA,MAAAxQ,EAAA5B,EAAA6I,GACAhH,EAAA7B,EAAA6I,EAAA,GAEA2J,EAAA7Q,EAAAC,EAAAC,GAIA9B,EAAAiE,cAAA,IAAAC,OAAAuO,GAAAP,EAAAxS,EAAAwS,EAAAvS,KAEA0S,EAAAnS,EACAoS,EAAAxJ,GAEAA,GACA,KAEA,MAAAuJ,IACA,KAAA7D,YAAA,CAAA/K,QAAA4O,EAAA/R,GAAA6H,WAAAmK,IACA,KAAAvB,mBAAAsB,EAAAC,GACA,KAAAhE,WAAAtI,GAAA0E,gBAEA,CAEA,EAEA+G,wBAAAA,CAAAH,GAIA,QAAAM,UAAA5L,GAAA0E,gBAAA,KAAAgI,iBAAAhF,GAAAE,uBAAA,WAAAiB,oBACA,cAAAyC,EAAAvN,KAAA,CACA,KAAA4O,kBAAAjF,GAAAI,2BACA,KAAAoC,iBACA,MAAA0C,EAAA,KAAAhE,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA,KAAAuO,qBACA,KAAAoB,iBAAA2C,GACA,MAAAzC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACA0B,EAAA5L,EAAAwM,GACAZ,EAAAtP,QAAA4O,EAAAQ,QAAA7D,GACA+D,EAAAlP,QAAAwO,EAAAuB,SACA,KAAAZ,UAAAjS,EAAAgS,EACA,CAEA,QAAAJ,UAAA5L,GAAA0E,gBAAA,KAAAgI,iBAAAhF,GAAAI,2BAAA,WAAAe,mBAAA,CACA,iBAAAyC,EAAAvN,KAAA,CACA,KAAAmM,iBACA,MAAA0C,EAAA,KAAAhE,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA,KAAAuO,qBACA,KAAAoB,iBAAA2C,GACA,MAAAzC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACA0B,EAAA5L,EAAAwM,GACAZ,EAAAtP,QAAA4O,EAAAQ,QAAA7D,GACA+D,EAAAlP,QAAAwO,EAAAuB,SACA,KAAAZ,UAAAjS,EAAAgS,EACA,CAMA,GALA,eAAAV,EAAAvN,OACA,KAAA4O,kBAAAjF,GAAAC,sBACA,KAAAuC,iBACA,KAAA4C,YAEA,YAAAxB,EAAAvN,KAAA,CACA,KAAAmM,iBAEA,MAAA6C,EAAA,CACAzS,GAAA,KAAAuO,mBACAmE,EAAA1B,EAAAQ,QAAA7D,GACAgF,EAAA3B,EAAAS,SAGA,KAAAmB,UAAAH,GACA,KAAAD,UACA,CACA,CACA,EAEAnB,+BAAAA,CAAAL,GAGA,QAAAM,UAAA5L,GAAA0E,gBAAA,KAAAgI,iBAAAhF,GAAAG,+BAAA,WAAAsF,mBAAA,CAEA,MAAAhD,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACA,iBAAAgB,EAAAvN,KAAA,CACA,KAAAmM,iBAEA,MAAAkD,EAAA,KAAAZ,UAAApS,MAAAF,GAAAA,EAAAI,KAAA,KAAA6S,qBAEA,IAAAlT,EAAA,KAAA+Q,eAAAoC,GACA,MAAAC,EAAA,KAAArC,eAAAoC,GAGA,GAFArT,EAAAC,EAAAqT,EAAAD,EAAA,KAAAxE,WAEA3O,EAAAiB,OAAA,GACA,MAAAf,EAAA,KAAAyO,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA8S,EAAA7S,UACAC,EAAA,KAAAoO,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA8S,EAAA3S,QACA4J,EAAAnC,EAAAlI,EAAAoT,EAAA,KAAAE,6BAAAnT,EAAAK,EAAA6S,EAAA/B,EAAAQ,QAAA7D,GAAAqD,EAAAS,SAGA9R,EAAAmK,EAAAC,EAAApK,EAAA,KAAA2O,UAAA5O,GAGA,KAAAuT,UAAAvT,EAAAqK,EAAAnK,MAAAD,GACA,KAAA0S,kBAAAjF,GAAAK,kCACA,MAEA,KAAA4E,kBAAAjF,GAAAC,sBACA,KAAAmF,UAEA,CACA,CACA,QAAAlB,UAAA5L,GAAA0E,gBAAA,KAAAgI,iBAAAhF,GAAAK,mCAAA,WAAAoF,mBAAA,CACA,MAAAhD,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACA,iBAAAgB,EAAAvN,KAAA,CAEA,KAAAmM,iBAEA,MAAAkD,EAAA,KAAAZ,UAAApS,MAAAF,GAAAA,EAAAI,KAAA,KAAA6S,qBACA,IAAAlT,EAAA,KAAA+Q,eAAAoC,GACA,MAAAC,EAAA,KAAArC,eAAAoC,GACArT,EAAAC,EAAAqT,EAAAD,EAAA,KAAAxE,WACA,MAAAzO,EAAA,KAAAyO,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA8S,EAAA7S,UACAC,EAAA,KAAAoO,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA8S,EAAA3S,QACA4J,EAAAnC,EAAAlI,EAAAoT,EAAA,KAAAE,6BAAAnT,EAAAK,EAAA6S,EAAA/B,EAAAQ,QAAA7D,GAAAqD,EAAAS,SAEA9R,EAAAmK,EAAAC,EAAApK,EAAA,KAAA2O,UAAA5O,GAIA,KAAAuT,UAAAvT,EAAAqK,EAAAnK,MAAAD,EACA,CAOA,GANA,eAAAqR,EAAAvN,OAEA,KAAA4O,kBAAAjF,GAAAC,sBACA,KAAAuC,iBACA,KAAA4C,YAEA,YAAAxB,EAAAvN,KAAA,CAEA,MAAAqP,EAAA,KAAAZ,UAAApS,MAAAF,GAAAA,EAAAI,KAAA,KAAA6S,qBACAlT,EAAA,KAAA+Q,eAAAoC,GACAC,EAAA,KAAArC,eAAAoC,GAGA,GAFArT,EAAAC,EAAAqT,EAAAD,EAAA,KAAAxE,WAEA3O,EAAAiB,OAAA,GACA,MAAAf,EAAA,KAAAyO,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA8S,EAAA7S,UACAC,EAAA,KAAAoO,UAAAxO,MAAAC,GAAAA,EAAAC,KAAA8S,EAAA3S,QACA4J,EAAAnC,EAAAlI,EAAAoT,EAAA,KAAAE,6BAAAnT,EAAAK,EAAA6S,EAAA/B,EAAAQ,QAAA7D,GAAAqD,EAAAS,SACA,KAAA7B,iBACA,KAAAsD,iBAAAnJ,EACA,CACA,KAAAyI,UACA,CACA,CACA,EACApB,4BAAAA,CAAAJ,GACA,QAAAM,UAAA5L,GAAA0F,eAAA,KAAAgH,iBAAAhF,GAAAC,sBAEA,cAAA2D,EAAAvN,KAAA,CAEA,KAAAmM,iBACA,MAAAC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACA6B,EAAAzO,EAAA1D,EAAA,KAAA4O,UAAA0C,EAAAQ,QAAA7D,GAAAqD,EAAAS,SACA,MAAAI,EACA,KAAAsB,iBAAA,CAAA/T,EAAA4R,EAAAQ,QAAA7D,GAAAtO,EAAA2R,EAAAS,UAEA,KAAAe,UAEA,CAEA,QAAAlB,UAAA5L,GAAA0F,eAAA,KAAAgH,iBAAAhF,GAAAM,gCACA,kBAAAsD,EAAAvN,KACA,KAAAmM,iBACA,KAAA4C,gBACA,iBAAAxB,EAAAvN,KAAA,CAGA,KAAAmM,iBACA,MAAAC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACAnQ,EAAAuD,EAAA1D,EAAA,KAAA4O,UAAA,KAAA8E,mBAAAhU,EAAA,KAAAgU,mBAAA/T,GACA,IAAAkB,EAAA,CAAAnB,EAAA4R,EAAAQ,QAAA7D,GAAAtO,EAAA2R,EAAAS,SACA,MAAAvR,EAAAkD,EAAA1D,EAAA,KAAA4O,UAAA/N,EAAAnB,EAAAmB,EAAAlB,GACAO,EAAAkH,EAAApH,EAAA,KAAA0T,mBAAAvT,EAAAU,EAAAL,GACA,SAAAN,EAAA,CACA,MAAAQ,EAAAC,EAAAX,EAAAG,EAAAD,EAAAU,YACA,MAAAJ,IACAK,EAAAgE,EAAA7E,EAAAQ,EAAA4D,EAAA5D,EAAAE,EAAAhB,EAAAgB,EAAAf,EAAAkB,EAAAnB,EAAAmB,EAAAlB,KAGA,MAAAgU,EAAAvD,SAAAC,eAAA,aACAuD,EAAAD,EAAArD,WAAA,MACA,KAAAuD,iBAAAD,EAAA1T,EAAAQ,EAAAhB,EAAAgB,EAAAf,EAAAkB,EAAAnB,EAAAmB,EAAAlB,EACA,CACA,qBAAA2R,EAAAvN,KAAA,CACA,KAAAmM,iBACA,MAAAC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACA5P,EAAA,CAAAhB,EAAA,KAAAgU,mBAAAhU,EAAAC,EAAA,KAAA+T,mBAAA/T,GACAQ,EAAAuD,EAAA1D,EAAA,KAAA4O,UAAA,KAAA8E,mBAAAhU,EAAA,KAAAgU,mBAAA/T,GACAkB,EAAA,CAAAnB,EAAA4R,EAAAQ,QAAA7D,GAAAtO,EAAA2R,EAAAS,SACAvR,EAAAkD,EAAA1D,EAAA,KAAA4O,UAAA/N,EAAAnB,EAAAmB,EAAAlB,GACAO,EAAAkH,EAAApH,EAAA,KAAA0T,mBAAAvT,EAAAU,EAAAL,GACA,SAAAN,EAAAO,QACA,KAAAqT,SAAA5T,IACAoR,EAAAyC,QAAA,CACA,MAAAC,EAAA,KAAAxB,UAAApS,MAAA6T,GAAA/T,EAAAK,UAAA0T,EAAA1T,SAAAL,EAAAO,QAAAwT,EAAAxT,OAAAP,EAAAU,aAAAqT,EAAArT,YAAAV,EAAAY,WAAAmT,EAAAnT,WACAuG,EAAA1G,EAAAX,EAAAG,EAAAD,EAAAU,YACA2G,EAAA5G,EAAAX,EAAAQ,EAAAN,EAAAY,UACA6G,EAAA5I,GAAAoB,EAAA4D,MAAAsI,gBAAAlM,EAAAO,EAAAG,GACA+G,EAAA7I,GAAAyB,EAAAuD,MAAAsI,gBAAA7L,EAAAK,EAAAH,GAEAuE,EAAAyC,EAAAsM,EAAA3M,EAAAE,EAAAI,EAAAC,GACA3C,EAAA1B,SAAAH,GAAA,KAAA8Q,SAAA9Q,IACA,CAIA,KAAA0P,WACA,KAAAxE,WAAAtI,GAAA0E,eACA,CAEA,MACA0D,EAAAA,GAAAA,IAAA,sJACA,gEACA+F,UAAAA,GACA,KAAAjE,iBACA,MAAAC,EAAAC,SAAAC,eAAA,aACArQ,EAAAmQ,EAAAG,WAAA,MACAW,EAAAb,SAAAc,uBAAA,aACA,QAAApI,EAAA,EAAAA,EAAAmI,EAAA/P,OAAA4H,IACAmI,EAAAnI,GAAAqI,SAEAnR,EAAAoR,UAAA,IAAAjB,EAAAzK,MAAAyK,EAAAvK,QAGA,KAAA4M,UAAAjP,SAAArD,IACA,MAAA+E,EAAA,KAAA+L,eAAA9Q,GACAH,EAAAC,EAAAiF,EAAA/E,EAAA,KAAA0O,WACA,KAAA2E,UAAAvT,EAAAE,EAAA+E,EAAA,IAEA,KAAA2J,UAAArL,SAAAlD,IAEA,KAAA4R,UAAAjS,EAAAK,EAAA,GAEA,EACA4R,SAAAA,CAAAjS,EAAAK,GASAL,EAAAoU,OACApU,EAAAqU,UAAA,QACArU,EAAAsU,UAAA,EAGA,MAAApP,EAAA,IAAAhB,OAAAnF,GAAAsB,EAAA0D,MAAAC,QAAA3D,IACAL,EAAAuU,KAAArP,GACAlF,EAAAwU,OAAAtP,GAGA,MAAAuP,EAAA1V,GAAAsB,EAAA0D,MAAAuI,YAAAjM,GAEAqU,EAAAtE,SAAAuE,cAAA,OACAC,EAAAC,OAAAC,OAAAC,iBAAA3E,SAAA4E,MAAAC,iBAAA,aAAAC,MAAA,WACAR,EAAAS,UAAAnV,EAAAoV,OAAA9U,GACAoU,EAAAW,aAAA,gBAAAZ,EAAA/H,IAAAkI,EAAA,gBAAAH,EAAA9H,KAAAiI,EAAA,GAAA3G,GAAA,cAAAwG,EAAA/O,MAAAkP,EAAA,GAAA3G,GAAA,eAAAwG,EAAA7O,OAAAgP,EAAA,gDAEA,MAAAvU,EAAA8F,OAAA9F,EAAA8F,KAAA,IACA,MAAAmP,EAAAlF,SAAAmF,eAAAlV,EAAA8F,MAEAuO,EAAAc,YAAAF,GAEA,MAAAG,EAAAzV,EAAAoV,OACAK,EAAAC,cAAAF,YAAAd,GACA1U,EAAA2V,SAEA,EAEApC,SAAAA,CAAAvT,EAAAE,EAAA+E,GACA,QAAA6D,EAAA,EAAAA,EAAA7D,EAAA/D,OAAA,EAAA4H,IACA,KAAA+K,iBAAA7T,EAAAE,EAAA+E,EAAA6D,GAAApJ,EAAAuF,EAAA6D,GAAAnJ,EAAAsF,EAAA6D,EAAA,GAAApJ,EAAAuF,EAAA6D,EAAA,GAAAnJ,GAEA,MAAA4E,EAAAU,EAAAA,EAAA/D,OAAA,GAAAxB,EACA8E,EAAAS,EAAAA,EAAA/D,OAAA,GAAAvB,EACA0E,EAAAY,EAAAA,EAAA/D,OAAA,GAAAxB,EACA4E,EAAAW,EAAAA,EAAA/D,OAAA,GAAAvB,EACA,IAAAiW,EAAAhW,KAAAiW,MAAArR,EAAAF,IAAAC,EAAAF,IACAuR,IAAArR,GAAAF,EAAA,QAAAzE,KAAAmH,GAAA,IACA/G,EAAAoU,OACApU,EAAAqU,UAAA,QACArU,EAAA8V,YACA9V,EAAA+V,UAAAxR,EAAAC,GACAxE,EAAAgW,OAAAJ,GACA5V,EAAAiW,OAAA,KACAjW,EAAAkW,OAAA,MACAlW,EAAAkW,QAAA,MACAlW,EAAAmW,YACAnW,EAAA2V,UACA3V,EAAAuU,MACA,EAEAV,gBAAAA,CAAA7T,EAAAE,EAAAkW,EAAAC,EAAAC,EAAAC,GACA,MAAAC,EAAA,IAAAtS,OACAsS,EAAAP,OAAAG,EAAAC,GACAG,EAAAN,OAAAI,EAAAC,GACAC,EAAAL,YACAnW,EAAAwU,OAAAgC,EACA,EAEA3E,aAAAA,CAAAnP,EAAAI,EAAA2T,GACA,MAAA/Q,EAAAC,GACAC,EAAAF,EAAAG,GACA6Q,EAAAvS,EAAAzB,EAAAI,EAAA2T,EAAA/Q,EAAAE,GACA,KAAA+Q,SAAAD,GAAAE,MAAA,KACAtH,GAAAuH,MAAA,gBAEA,GAEA1H,SAAA,KACAC,EAAAA,GAAAA,IAAA,6LAEA0H,OAAAA,GAEA,MAAA3G,EAAAC,SAAAC,eAAA,aACAF,EAAA4G,MAAArR,MAAA,OACAyK,EAAA4G,MAAAnR,OAAA,OACAuK,EAAAzK,MAAAyK,EAAA6G,YACA7G,EAAAvK,OAAAuK,EAAA8G,aAEA,MAAAtD,EAAAvD,SAAAC,eAAA,aACAsD,EAAAoD,MAAArR,MAAA,OACAiO,EAAAoD,MAAAnR,OAAA,OACA+N,EAAAjO,MAAAiO,EAAAqD,YACArD,EAAA/N,OAAA+N,EAAAsD,aACA,MAAAjX,EAAA2T,EAAArD,WAAA,MAEAtQ,EAAA8P,YAAA,GACA,MAAAoH,EAAA9G,SAAAC,eAAA,kBACA6G,EAAAC,iBAAA,aAAA9F,kBACA6F,EAAAC,iBAAA,kBAAA9F,kBACA6F,EAAAC,iBAAA,iBAAA9F,kBACA6F,EAAAC,iBAAA,kBAAA9F,kBACA6F,EAAAC,iBAAA,iBAAA9F,kBACA6F,EAAAC,iBAAA,eAAA9F,kBACAnD,IAAAyF,EAAAjO,MAAA,KAAAiO,EAAAjO,MACA,EACA2J,OAAAA,GACAC,GAAAC,IAAA,mBAEA,WAAA6H,qBAAA,GAGA,KAAAC,2BACA,KAAAlD,aACA,KAAAmD,4BAAA,GAEA,GCtgBqP,MCOjP,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QCNhC,IACAtZ,KAAA,OACAuZ,WAAA,CAEAC,UAAA,GACAC,OAAAA,KCjBuP,MCOnP,IAAY,OACd,GACA,EACA,GACA,EACA,KACA,KACA,MAIF,GAAe,GAAiB,QCdhCC,EAAAA,GAAIC,IAAIC,EAAAA,IAER,MAAMC,GAAS,CACb,CACE/T,KAAM,IACN9F,KAAM,OACNE,UAAW4Z,IAEb,CACEhU,KAAM,SACN9F,KAAM,QAINE,UAAWA,IAAM,gCAIf6Z,GAAS,IAAIH,EAAAA,GAAU,CAC3BC,YAGF,U,sBClBAH,EAAAA,GAAIC,IAAIK,GAAAA,IAER,WAAmBA,GAAAA,GAAAA,MAAW,CAC5BC,MAAO,CACLnM,KAAM,EACNoM,YAAa,EACbC,gBAAiB,KACjBC,gBAAiB,KACjBC,0BAA2B,KAC3BC,gBAAiB,CACf5Y,EAAG,KACHC,EAAG,MAEL4Y,kBAAmB,EACnBC,OAAQ,CACNC,iBAAkB,EAClB9U,OAAQ,GACR4O,OAAQ,GACRtN,OAAQ,KAGZyT,QAAS,CACPhF,kBAAAA,CAAoBuE,GAClB,MAAO,CACLvY,EAAGuY,EAAMK,gBAAgB5Y,EACzBC,EAAGsY,EAAMK,gBAAgB3Y,EAE7B,EACAyX,oBAAAA,CAAsBa,GACpB,OAAOA,EAAMM,iBACf,EACA3G,OAAAA,CAASqG,GACP,OAAOA,EAAMnM,IACf,EACA+C,kBAAAA,CAAoBoJ,GAClB,OAAOA,EAAME,eACf,EACAhF,kBAAAA,CAAoB8E,GAClB,OAAOA,EAAMG,eACf,EACA9E,4BAAAA,CAA8B2E,GAC5B,OAAOA,EAAMI,yBACf,EACA3F,cAAAA,CAAgBuF,GACd,OAAOA,EAAMC,WACf,EACAS,SAAAA,CAAWV,GACT,OAAOA,EAAMO,MACf,EACA5J,SAAAA,CAAWqJ,GAGT,MAAMxY,EAAS,GAKf,OAJAwY,EAAMO,OAAO7U,OAAOJ,SAAQlD,IAC1BZ,EAAOwB,KAAKkD,EAAe9D,EAAMqC,QAASrC,EAAMyC,QAASzC,EAAM0D,KAAM1D,EAAMsC,MAAOtC,EAAM0C,MAAO1C,EAAMC,GAAID,EAAM8F,MAAM,IAGhH1G,CAET,EACA+S,SAAAA,CAAWyF,GACT,MAAMxY,EAAS,GAIf,OAHAwY,EAAMO,OAAOjG,OAAOhP,SAAQrD,IAC1BT,EAAOwB,KAAKoF,EAAenG,EAAMK,QAASL,EAAMO,MAAOP,EAAMU,WAAYV,EAAMY,SAAUZ,EAAMI,IAAI,IAE9Fb,CACT,EACAmZ,SAAAA,CAAWX,GACT,MAAMxY,EAAS,GAIf,OAHAwY,EAAMO,OAAOvT,OAAO1B,SAAQH,IAC1B3D,EAAOwB,KAAKuF,EAAUpD,GAAO,IAExB3D,CACT,EACAuR,eAAiBiH,GAAW/X,IAC1B,IAAIT,EAAS,GAMb,OALAwY,EAAMO,OAAOvT,OAAO1B,SAAQH,IAC1B3D,EAAOwB,KAAKuF,EAAUpD,GAAO,IAE/B3D,EAASA,EAAO0D,QAAOC,GAASA,EAAMK,UAAYvD,EAAMI,KACxDb,EAAOoZ,MAAK,CAACtZ,EAAIC,IAAgBD,EAAGgH,MAAQ/G,EAAG+G,QACxC9G,CAAM,GAGjBqZ,UAAW,CACTC,kBAAAA,CAAoBd,EAAOe,GACzBf,EAAMK,gBAAgB5Y,EAAIsZ,EAAQtZ,EAClCuY,EAAMK,gBAAgB3Y,EAAIqZ,EAAQrZ,CACpC,EACAsZ,oBAAAA,CAAsBhB,EAAOe,GAC3Bf,EAAMM,kBAAoBS,CAC5B,EACAE,OAAAA,CAASjB,EAAOe,GACdf,EAAMnM,KAAOkN,CACf,EACAG,kBAAAA,CAAoBlB,EAAOe,GAEzBf,EAAME,gBAAkBa,CAE1B,EACAI,kBAAAA,CAAoBnB,EAAOe,GACzBf,EAAMG,gBAAkBY,CAC1B,EACAK,4BAAAA,CAA8BpB,EAAOe,GACnCf,EAAMI,0BAA4BW,CACpC,EACAM,cAAAA,CAAgBrB,EAAOe,GACrBf,EAAMC,YAAcc,CACtB,EACAvK,WAAAA,CAAawJ,GACXA,EAAMO,OAAS,CACbC,gBAAiBR,EAAMO,OAAOC,gBAC9B9U,OAAQ,GACR4O,OAAQ,GACRtN,OAAQ,GAEZ,EACA0R,QAAAA,CAAUsB,EAAOe,GACff,EAAMO,OAAOC,kBACb,MAAMc,EAAmBpV,EAAe6U,EAAQtW,QAASsW,EAAQlW,QAASkW,EAAQjV,KAAMiV,EAAQrW,MAAOqW,EAAQjW,MAAOkV,EAAMO,OAAOC,iBACnIR,EAAMO,OAAO7U,OAAO1C,KAAKsY,EAC3B,EACArG,SAAAA,CAAW+E,EAAOe,GAGhBf,EAAMO,OAAO7U,OAAOJ,SAAQlD,IACtBA,EAAMC,KAAO0Y,EAAQ1Y,KAGvBD,EAAMqC,QAAUsW,EAAQhG,EACxB3S,EAAMyC,QAAUkW,EAAQ/F,EAG1B,GAEJ,EACAnE,eAAAA,CAAiBmJ,EAAOe,GACtBf,EAAMO,OAAO7U,OAAOJ,SAAQlD,IACtBA,EAAMC,KAAO0Y,EAAQ1Y,KACvBD,EAAM8F,KAAO6S,EAAQ7S,KACvB,GAEJ,EACAqT,iBAAAA,CAAmBvB,EAAOe,GACxBf,EAAMO,OAAOjG,OAAOhP,SAAQrD,IACtBA,EAAMI,KAAO0Y,EAAQ1Y,KACvBJ,EAAMU,WAAaoY,EAAQpY,WAC3BV,EAAMY,SAAWkY,EAAQlY,SAC3B,GAEJ,EACAgT,QAAAA,CAAUmE,EAAOe,GACff,EAAMO,OAAOC,kBACb,MAAMgB,EAAmBpT,EAAe2S,EAAQzY,QAASyY,EAAQvY,MAAOuY,EAAQpY,WAAYoY,EAAQlY,SAAUmX,EAAMO,OAAOC,iBAC3HR,EAAMO,OAAOjG,OAAOtR,KAAKwY,EAE3B,EACAvF,QAAAA,CAAU+D,EAAOe,GACff,EAAMO,OAAOC,kBACb,MAAMiB,EAAmBlT,EAAUwS,GACnCU,EAAiBpZ,GAAK2X,EAAMO,OAAOC,gBACnCR,EAAMO,OAAOvT,OAAO1B,SAAQH,IACtBA,EAAMK,UAAYiW,EAAiBjW,SAAWL,EAAMmD,OAASmT,EAAiBnT,QAChFnD,EAAMmD,MAAQnD,EAAMmD,MAAQ,EAC9B,IAEF0R,EAAMO,OAAOvT,OAAOhE,KAAKyY,EAC3B,EACAC,WAAAA,CAAa1B,EAAOe,GAClB,MAAMU,EAAmBlT,EAAUwS,GACnCf,EAAMO,OAAOvT,OAAO1B,SAAQH,IACtBA,EAAMK,UAAYiW,EAAiBjW,SAAWL,EAAMmD,OAASmT,EAAiBnT,QAChFnD,EAAMmD,MAAQnD,EAAMmD,MAAQ,EAC9B,IAEF0R,EAAMO,OAAOvT,OAAO2U,OAAO3B,EAAMO,OAAOvT,OAAOgE,WAAU4Q,GAAKA,EAAEvZ,KAAOoZ,EAAiBpZ,KAAK,EAC/F,EACAwZ,SAAAA,CAAW7B,EAAOe,GAChB,MAAMe,EAAc9B,EAAMO,OAAOvT,OAAO7E,MAAKgD,GAAS4V,EAAQ1Y,KAAO8C,EAAM9C,KAC3EyZ,EAAYra,EAAIsZ,EAAQtZ,EACxBqa,EAAYpa,EAAIqZ,EAAQrZ,CAC1B,EACAqa,gBAAAA,CAAkB/B,EAAOe,GACvB,MAAMO,EAAmBpV,EAAe6U,EAAQtW,QAASsW,EAAQlW,QAASkW,EAAQjV,KAAMiV,EAAQrW,MAAOqW,EAAQjW,MAAOiW,EAAQ1Y,GAAI0Y,EAAQ7S,MAC1I8R,EAAMO,OAAO7U,OAAO1C,KAAKsY,EAC3B,EACAU,gBAAAA,CAAkBhC,EAAOe,GACvB,MAAMS,EAAmBpT,EAAe2S,EAAQzY,QAASyY,EAAQvY,MAAOuY,EAAQpY,WAAYoY,EAAQlY,SAAUkY,EAAQ1Y,IACtH2X,EAAMO,OAAOjG,OAAOtR,KAAKwY,EAE3B,EACAS,gBAAAA,CAAkBjC,EAAOe,GACvB,MAAMU,EAAmBlT,EAAUwS,GACnCf,EAAMO,OAAOvT,OAAO1B,SAAQH,IACtBA,EAAMK,UAAYiW,EAAiBjW,SAAWL,EAAMmD,OAASmT,EAAiBnT,QAChFnD,EAAMmD,MAAQnD,EAAMmD,MAAQ,EAC9B,IAEF0R,EAAMO,OAAOvT,OAAOhE,KAAKyY,EAC3B,GAEFS,QAAS,CACP,2BAAMC,CAAuBpa,EAASoD,GACpCpD,EAAQqa,OAAO,qBAAsBjX,EACvC,EACA,uBAAMuP,CAAmB3S,EAASsa,GAChCta,EAAQqa,OAAO,iBAAkBC,EACnC,EACA,8BAAMjD,CAA0BrX,GAC9BA,EAAQqa,OAAO,uBAAwBE,KAAKnD,qBAAuB,EACrE,EACA,gCAAME,CAA4BtX,GAChCA,EAAQqa,OAAO,uBAAwBE,KAAKnD,qBAAuB,EACrE,EACA,gBAAM9I,CAAYtO,EAASwa,IAGQ,IAA7B5O,GAAkB4O,GACpBxa,EAAQqa,OAAO,UAAWG,GAE1Bxa,EAAQqa,OAAO,UAAWrU,GAAY0E,eAE1C,EACA,iBAAM0H,CAAapS,EAASM,GAG1B,MAAMD,EAAQka,KAAK7B,QAAQ9J,UAAUxO,MAAKC,GAASA,EAAMC,KAAOA,IAGlD,OAAVD,EACFka,KAAKE,SAAS,aAEdza,EAAQqa,OAAO,qBAAsBha,EAAMC,IAC3CN,EAAQqa,OAAO,iBAAkB3M,GAAcE,uBAC/C0B,GAASuH,MAAM,oBAEnB,EACA,iBAAMrI,CAAaxO,EAASgZ,GAC1B,MAAM9Y,EAAQqa,KAAK7B,QAAQlG,UAAUpS,MAAK6T,GAAcA,EAAW3T,KAAO0Y,EAAQvV,UACpE,OAAVvD,EACFqa,KAAKE,SAAS,aAEdza,EAAQqa,OAAO,qBAAsBrB,EAAQvV,SAC7CzD,EAAQqa,OAAO,+BAAgCrB,EAAQ7Q,YACvDnI,EAAQqa,OAAO,iBAAkB3M,GAAcG,+BAC/CyB,GAASuH,MAAM,oBAEnB,EACA,sBAAMpD,CAAkBzT,EAASoD,GAC/BpD,EAAQqa,OAAO,qBAAsBjX,GACrCpD,EAAQqa,OAAO,iBAAkB3M,GAAcM,gCACjD,EACA,cAAM8E,CAAU9S,GACdA,EAAQqa,OAAO,qBAAsB,MACrCra,EAAQqa,OAAO,qBAAsB,MACrCra,EAAQqa,OAAO,+BAAgC,MAC/Cra,EAAQqa,OAAO,iBAAkB3M,GAAcC,sBAC/C3N,EAAQqa,OAAO,qBAAsB,CAAE3a,EAAG,KAAMC,EAAG,OACnD2P,GAASuH,MAAM,mBACjB,EACA,eAAM3D,CAAWlT,EAASgZ,GACxB,MAAM0B,EAAcH,KAAK7B,QAAQ9J,UAAUxO,MAAKC,GAASA,EAAMC,KAAO0Y,EAAQ1Y,KAC3D,MAAfoa,GACF1a,EAAQqa,OAAO,YAAa,CAC1B/Z,GAAI0Y,EAAQ1Y,GACZ0S,EAAGgG,EAAQhG,EACXC,EAAG+F,EAAQ/F,IAGf3D,GAASuH,MAAM,aACjB,EACA,iBAAMpI,CAAazO,GACjBA,EAAQqa,OAAO,eACf/K,GAASuH,MAAM,aACjB,EACA,cAAMF,CAAU3W,EAASgZ,GACvBhZ,EAAQqa,OAAO,WAAYrB,GAC3B1J,GAASuH,MAAM,aACjB,EACA,cAAM/C,CAAU9T,EAASgZ,GACvBhZ,EAAQqa,OAAO,WAAYrB,GAC3B1J,GAASuH,MAAM,aACjB,EACA,cAAM3C,CAAUlU,EAASgZ,GACvBhZ,EAAQqa,OAAO,WAAYrB,GAC3B1J,GAASuH,MAAM,aACjB,EACA,iBAAM8C,CAAa3Z,EAASgZ,GAC1BhZ,EAAQqa,OAAO,cAAerB,GAC9B1J,GAASuH,MAAM,aACjB,EACA,eAAMiD,CAAW9Z,EAASgZ,GACpBuB,KAAK7B,QAAQE,UAAU3P,WAAU7F,GAASA,EAAM9C,KAAO0Y,EAAQ1Y,MAAO,IACxEN,EAAQqa,OAAO,YAAarB,GAC5B1J,GAASuH,MAAM,cAEnB,EACA,sBAAMrD,CAAkBxT,EAASgZ,GAM/B,GAJwB,MAApBA,EAAQ/O,MAAM,IAAYjK,EAAQqa,OAAO,YAAarB,EAAQ/O,MAAM,IAChD,MAApB+O,EAAQ/O,MAAM,IAAYjK,EAAQqa,OAAO,YAAarB,EAAQ/O,MAAM,IAC9C,MAAtB+O,EAAQ9O,QAAQ,IAAYlK,EAAQqa,OAAO,cAAerB,EAAQ9O,QAAQ,IACpD,MAAtB8O,EAAQ9O,QAAQ,IAAYlK,EAAQqa,OAAO,cAAerB,EAAQ9O,QAAQ,IACtD,MAApB8O,EAAQ7O,MAAM,GAAY,CAC5B,MAAMwQ,EAAanU,EAAUwS,EAAQ7O,MAAM,IAC3CwQ,EAAWpU,MAAQ,EACnBvG,EAAQqa,OAAO,WAAYM,EAC7B,CACA,MAAMC,EAAYL,KAAK7B,QAAQ1H,eAAegI,EAAQ9Y,OAAOgB,OAC7D,GAAwB,MAApB8X,EAAQ7O,MAAM,GAAY,CAC5B,MAAM0Q,EAAYrU,EAAUwS,EAAQ7O,MAAM,IAC1C0Q,EAAUtU,MAAQqU,EAClB5a,EAAQqa,OAAO,WAAYQ,EAC7B,CACA7a,EAAQqa,OAAO,oBAAqBrB,EAAQ9Y,OAC5CoP,GAASuH,MAAM,aACjB,EACA,qBAAM/H,CAAiB9O,EAASgZ,GAC1BuB,KAAK7B,QAAQ9J,UAAU3F,WAAU5I,GAASA,EAAMC,KAAO0Y,EAAQ1Y,MAAO,IACxEia,KAAKE,SAAS,YACdza,EAAQqa,OAAO,kBAAmBrB,GAClC1J,GAASuH,MAAM,cAEnB,EACA,gBAAM3H,CAAYlP,EAASgZ,GACzB,GAAgB,MAAXA,GAAqBA,EAAQ9X,OAAS,EAAI,CAC7C,MAAM4Z,EAAa,CACjBnX,OAAQ4W,KAAK7B,QAAQ9J,UACrB2D,OAAQgI,KAAK7B,QAAQlG,UACrBvN,OAAQsV,KAAK7B,QAAQE,WAEvBmC,KAAAA,KAAO,CACLC,IAAK,oCAAsChC,EAC3CiC,OAAQ,OACRC,aAAa,EACbC,YAAa,mBACbC,SAAU,OACVnd,KAAMod,KAAKC,UAAU,CACnB3X,OAAQmX,EAAWnX,OACnB4O,OAAQgI,KAAK7B,QAAQlG,UACrBvN,OAAQsV,KAAK7B,QAAQE,YAEvB2C,QAAS,SAAUC,GACjB,EAEFC,MAAO,SAAUC,GACfC,QAAQC,IAAIF,EACd,GAeJ,CACF,EACA,gBAAM1M,CAAYhP,EAASgZ,GACT,MAAXA,GAAqBA,EAAQ9X,OAAS,UACnC6Z,KAAAA,KAAO,CACXC,IAAK,mCAAqChC,EAC1CiC,OAAQ,MACRC,aAAa,EACbC,YAAa,mBACbC,SAAU,OACVnd,KAAM,KACNsd,QAAS,SAAUM,GACjB7b,EAAQqa,OAAO,eACfwB,EAASlY,OAAOJ,SAASlD,IACvBL,EAAQqa,OAAO,mBAAoBha,EAAM,IAE3Cwb,EAAStJ,OAAOhP,SAASrD,IACvBF,EAAQqa,OAAO,mBAAoBna,EAAM,IAE3C2b,EAAS5W,OAAO1B,SAASH,IACvBpD,EAAQqa,OAAO,mBAAoBjX,EAAM,GAE7C,EACAqY,MAAO,SAAUC,GACfC,QAAQC,IAAIF,EACd,EACAI,SAAU,SAAU9b,GACpB,IAEFsP,GAASuH,MAAM,cAmBnB,GAEF1I,QAAS,CACT,EACA4N,QAAS,CACT,I,UCpaFrE,EAAAA,GAAIC,IAAIqE,GAAAA,GAER,WAAmBA,GAAAA,EAAQ,CAC3B,GCIAtE,EAAAA,GAAIuE,OAAOC,eAAgB,EAEpB,MAAM5M,GAAW,IAAIoI,EAAAA,GAE5B,IAAIA,EAAAA,GAAI,CACNK,OAAM,GACNoE,MAAK,GACLC,QAAO,GACPre,OAAQqO,GAAKA,EAAEiQ,KACdC,OAAO,O,uBCnBV,IAAIC,EAAM,CACT,mBAAoB,KACpB,mBAAoB,KACpB,uBAAwB,KACxB,yBAA0B,KAC1B,wBAAyB,KACzB,sBAAuB,KACvB,uBAAwB,KACxB,0BAA2B,KAC3B,8BAA+B,KAC/B,wBAAyB,KACzB,mBAAoB,IACpB,sBAAuB,KACvB,kBAAmB,KACnB,sBAAuB,KACvB,qBAAsB,MAIvB,SAASC,EAAeC,GACvB,IAAInc,EAAKoc,EAAsBD,GAC/B,OAAOE,EAAoBrc,EAC5B,CACA,SAASoc,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEL,EAAKE,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,CACP,CACA,OAAON,EAAIE,EACZ,CACAD,EAAeQ,KAAO,WACrB,OAAOxS,OAAOwS,KAAKT,EACpB,EACAC,EAAeS,QAAUP,EACzBQ,EAAOC,QAAUX,EACjBA,EAAelc,GAAK,I,uBCpCpB,IAAIic,EAAM,CACT,qBAAsB,KACtB,qBAAsB,GACtB,yBAA0B,KAC1B,2BAA4B,KAC5B,0BAA2B,KAC3B,wBAAyB,KACzB,yBAA0B,KAC1B,4BAA6B,KAC7B,gCAAiC,KACjC,0BAA2B,KAC3B,qBAAsB,KACtB,wBAAyB,KACzB,oBAAqB,KACrB,wBAAyB,KACzB,uBAAwB,MAIzB,SAASC,EAAeC,GACvB,IAAInc,EAAKoc,EAAsBD,GAC/B,OAAOE,EAAoBrc,EAC5B,CACA,SAASoc,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEL,EAAKE,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEE,KAAO,mBACHF,CACP,CACA,OAAON,EAAIE,EACZ,CACAD,EAAeQ,KAAO,WACrB,OAAOxS,OAAOwS,KAAKT,EACpB,EACAC,EAAeS,QAAUP,EACzBQ,EAAOC,QAAUX,EACjBA,EAAelc,GAAK,I,w8ECnChB8c,EAA2B,CAAC,EAGhC,SAAST,EAAoBU,GAE5B,IAAIC,EAAeF,EAAyBC,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaH,QAGrB,IAAID,EAASE,EAAyBC,GAAY,CAGjDF,QAAS,CAAC,GAOX,OAHAK,EAAoBH,GAAUI,KAAKP,EAAOC,QAASD,EAAQA,EAAOC,QAASR,GAGpEO,EAAOC,OACf,CAGAR,EAAoBe,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfhB,EAAoBiB,EAAI,SAASC,EAAQC,EAAU9e,EAAI+e,GACtD,IAAGD,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAASnV,EAAI,EAAGA,EAAI6U,EAASzc,OAAQ4H,IAAK,CACrCgV,EAAWH,EAAS7U,GAAG,GACvB9J,EAAK2e,EAAS7U,GAAG,GACjBiV,EAAWJ,EAAS7U,GAAG,GAE3B,IAJA,IAGIoV,GAAY,EACPC,EAAI,EAAGA,EAAIL,EAAS5c,OAAQid,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAavT,OAAOwS,KAAKL,EAAoBiB,GAAGQ,OAAM,SAASvf,GAAO,OAAO8d,EAAoBiB,EAAE/e,GAAKif,EAASK,GAAK,IAChKL,EAASlE,OAAOuE,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbP,EAAS/D,OAAO9Q,IAAK,GACrB,IAAIuV,EAAIrf,SACEue,IAANc,IAAiBR,EAASQ,EAC/B,CACD,CACA,OAAOR,CArBP,CAJCE,EAAWA,GAAY,EACvB,IAAI,IAAIjV,EAAI6U,EAASzc,OAAQ4H,EAAI,GAAK6U,EAAS7U,EAAI,GAAG,GAAKiV,EAAUjV,IAAK6U,EAAS7U,GAAK6U,EAAS7U,EAAI,GACrG6U,EAAS7U,GAAK,CAACgV,EAAU9e,EAAI+e,EAwB/B,C,eC5BApB,EAAoB2B,EAAI,SAASpB,GAChC,IAAIqB,EAASrB,GAAUA,EAAOsB,WAC7B,WAAa,OAAOtB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAP,EAAoB8B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,C,eCNA5B,EAAoB8B,EAAI,SAAStB,EAASwB,GACzC,IAAI,IAAI9f,KAAO8f,EACXhC,EAAoBC,EAAE+B,EAAY9f,KAAS8d,EAAoBC,EAAEO,EAASte,IAC5E2L,OAAOoU,eAAezB,EAASte,EAAK,CAAEggB,YAAY,EAAMC,IAAKH,EAAW9f,IAG3E,C,eCPA8d,EAAoBoC,EAAI,CAAC,EAGzBpC,EAAoBE,EAAI,SAASmC,GAChC,OAAOC,QAAQC,IAAI1U,OAAOwS,KAAKL,EAAoBoC,GAAGI,QAAO,SAASC,EAAUvgB,GAE/E,OADA8d,EAAoBoC,EAAElgB,GAAKmgB,EAASI,GAC7BA,CACR,GAAG,IACJ,C,eCPAzC,EAAoB0C,EAAI,SAASL,GAEhC,MAAO,sBACR,C,eCHArC,EAAoB2C,SAAW,SAASN,GAGxC,C,eCJArC,EAAoB4C,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOjF,MAAQ,IAAIkF,SAAS,cAAb,EAChB,CAAE,MAAO5C,GACR,GAAsB,kBAAX/H,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxB6H,EAAoBC,EAAI,SAAS8C,EAAKC,GAAQ,OAAOnV,OAAOoV,UAAUC,eAAepC,KAAKiC,EAAKC,EAAO,C,eCAtG,IAAIG,EAAa,CAAC,EACdC,EAAoB,aAExBpD,EAAoBlQ,EAAI,SAASuO,EAAKgF,EAAMnhB,EAAKmgB,GAChD,GAAGc,EAAW9E,GAAQ8E,EAAW9E,GAAK/Z,KAAK+e,OAA3C,CACA,IAAIC,EAAQC,EACZ,QAAW3C,IAAR1e,EAEF,IADA,IAAIshB,EAAU/P,SAASgQ,qBAAqB,UACpCtX,EAAI,EAAGA,EAAIqX,EAAQjf,OAAQ4H,IAAK,CACvC,IAAIuX,EAAIF,EAAQrX,GAChB,GAAGuX,EAAEC,aAAa,QAAUtF,GAAOqF,EAAEC,aAAa,iBAAmBP,EAAoBlhB,EAAK,CAAEohB,EAASI,EAAG,KAAO,CACpH,CAEGJ,IACHC,GAAa,EACbD,EAAS7P,SAASuE,cAAc,UAEhCsL,EAAOM,QAAU,QACjBN,EAAOO,QAAU,IACb7D,EAAoB8D,IACvBR,EAAO5K,aAAa,QAASsH,EAAoB8D,IAElDR,EAAO5K,aAAa,eAAgB0K,EAAoBlhB,GAExDohB,EAAOS,IAAM1F,GAEd8E,EAAW9E,GAAO,CAACgF,GACnB,IAAIW,EAAmB,SAASC,EAAMtP,GAErC2O,EAAOY,QAAUZ,EAAOa,OAAS,KACjCC,aAAaP,GACb,IAAIQ,EAAUlB,EAAW9E,GAIzB,UAHO8E,EAAW9E,GAClBiF,EAAOgB,YAAchB,EAAOgB,WAAWC,YAAYjB,GACnDe,GAAWA,EAAQzd,SAAQ,SAASvE,GAAM,OAAOA,EAAGsS,EAAQ,IACzDsP,EAAM,OAAOA,EAAKtP,EACtB,EACIkP,EAAUW,WAAWR,EAAiBS,KAAK,UAAM7D,EAAW,CAAExZ,KAAM,UAAWsd,OAAQpB,IAAW,MACtGA,EAAOY,QAAUF,EAAiBS,KAAK,KAAMnB,EAAOY,SACpDZ,EAAOa,OAASH,EAAiBS,KAAK,KAAMnB,EAAOa,QACnDZ,GAAc9P,SAASkR,KAAK9L,YAAYyK,EApCkB,CAqC3D,C,eCxCAtD,EAAoB0B,EAAI,SAASlB,GACX,qBAAXoE,QAA0BA,OAAOC,aAC1ChX,OAAOoU,eAAezB,EAASoE,OAAOC,YAAa,CAAEljB,MAAO,WAE7DkM,OAAOoU,eAAezB,EAAS,aAAc,CAAE7e,OAAO,GACvD,C,eCNAqe,EAAoB9C,EAAI,G,eCKxB,IAAI4H,EAAkB,CACrB,IAAK,GAGN9E,EAAoBoC,EAAEZ,EAAI,SAASa,EAASI,GAE1C,IAAIsC,EAAqB/E,EAAoBC,EAAE6E,EAAiBzC,GAAWyC,EAAgBzC,QAAWzB,EACtG,GAA0B,IAAvBmE,EAGF,GAAGA,EACFtC,EAASne,KAAKygB,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAI1C,SAAQ,SAAShC,EAAS2E,GAAUF,EAAqBD,EAAgBzC,GAAW,CAAC/B,EAAS2E,EAAS,IACzHxC,EAASne,KAAKygB,EAAmB,GAAKC,GAGtC,IAAI3G,EAAM2B,EAAoB9C,EAAI8C,EAAoB0C,EAAEL,GAEpDvD,EAAQ,IAAIqB,MACZ+E,EAAe,SAASvQ,GAC3B,GAAGqL,EAAoBC,EAAE6E,EAAiBzC,KACzC0C,EAAqBD,EAAgBzC,GACX,IAAvB0C,IAA0BD,EAAgBzC,QAAWzB,GACrDmE,GAAoB,CACtB,IAAII,EAAYxQ,IAAyB,SAAfA,EAAMvN,KAAkB,UAAYuN,EAAMvN,MAChEge,EAAUzQ,GAASA,EAAM+P,QAAU/P,EAAM+P,OAAOX,IACpDjF,EAAMuG,QAAU,iBAAmBhD,EAAU,cAAgB8C,EAAY,KAAOC,EAAU,IAC1FtG,EAAMzd,KAAO,iBACbyd,EAAM1X,KAAO+d,EACbrG,EAAMwG,QAAUF,EAChBL,EAAmB,GAAGjG,EACvB,CAEF,EACAkB,EAAoBlQ,EAAEuO,EAAK6G,EAAc,SAAW7C,EAASA,EAE/D,CAEH,EAUArC,EAAoBiB,EAAEO,EAAI,SAASa,GAAW,OAAoC,IAA7ByC,EAAgBzC,EAAgB,EAGrF,IAAIkD,EAAuB,SAASC,EAA4BlkB,GAC/D,IAKIof,EAAU2B,EALVlB,EAAW7f,EAAK,GAChBmkB,EAAcnkB,EAAK,GACnBokB,EAAUpkB,EAAK,GAGI6K,EAAI,EAC3B,GAAGgV,EAASwE,MAAK,SAAShiB,GAAM,OAA+B,IAAxBmhB,EAAgBnhB,EAAW,IAAI,CACrE,IAAI+c,KAAY+E,EACZzF,EAAoBC,EAAEwF,EAAa/E,KACrCV,EAAoBe,EAAEL,GAAY+E,EAAY/E,IAGhD,GAAGgF,EAAS,IAAIxE,EAASwE,EAAQ1F,EAClC,CAEA,IADGwF,GAA4BA,EAA2BlkB,GACrD6K,EAAIgV,EAAS5c,OAAQ4H,IACzBkW,EAAUlB,EAAShV,GAChB6T,EAAoBC,EAAE6E,EAAiBzC,IAAYyC,EAAgBzC,IACrEyC,EAAgBzC,GAAS,KAE1ByC,EAAgBzC,GAAW,EAE5B,OAAOrC,EAAoBiB,EAAEC,EAC9B,EAEI0E,EAAqBC,KAAK,yBAA2BA,KAAK,0BAA4B,GAC1FD,EAAmBhf,QAAQ2e,EAAqBd,KAAK,KAAM,IAC3DmB,EAAmBthB,KAAOihB,EAAqBd,KAAK,KAAMmB,EAAmBthB,KAAKmgB,KAAKmB,G,ICpFvF,IAAIE,EAAsB9F,EAAoBiB,OAAEL,EAAW,CAAC,MAAM,WAAa,OAAOZ,EAAoB,KAAO,IACjH8F,EAAsB9F,EAAoBiB,EAAE6E,E","sources":["webpack://flowchart/./src/App.vue","webpack://flowchart/src/App.vue","webpack://flowchart/./src/App.vue?b495","webpack://flowchart/./src/App.vue?0e40","webpack://flowchart/./src/views/HomeView.vue","webpack://flowchart/./src/components/ToolPanel.vue","webpack://flowchart/./src/plugins/functions.js","webpack://flowchart/./src/plugins/constants.js","webpack://flowchart/src/components/ToolPanel.vue","webpack://flowchart/./src/components/ToolPanel.vue?9160","webpack://flowchart/./src/components/ToolPanel.vue?552a","webpack://flowchart/./src/components/Canvas.vue","webpack://flowchart/src/components/Canvas.vue","webpack://flowchart/./src/components/Canvas.vue?f5e4","webpack://flowchart/./src/components/Canvas.vue?f270","webpack://flowchart/src/views/HomeView.vue","webpack://flowchart/./src/views/HomeView.vue?a73d","webpack://flowchart/./src/views/HomeView.vue?aae2","webpack://flowchart/./src/router/index.js","webpack://flowchart/./src/store/index.js","webpack://flowchart/./src/plugins/vuetify.js","webpack://flowchart/./src/main.js","webpack://flowchart/./src/assets/ sync ^\\.\\/img.*Big\\.svg$","webpack://flowchart/./src/assets/ sync ^\\.\\/img.*Small\\.svg$","webpack://flowchart/webpack/bootstrap","webpack://flowchart/webpack/runtime/chunk loaded","webpack://flowchart/webpack/runtime/compat get default export","webpack://flowchart/webpack/runtime/define property getters","webpack://flowchart/webpack/runtime/ensure chunk","webpack://flowchart/webpack/runtime/get javascript chunk filename","webpack://flowchart/webpack/runtime/get mini-css chunk filename","webpack://flowchart/webpack/runtime/global","webpack://flowchart/webpack/runtime/hasOwnProperty shorthand","webpack://flowchart/webpack/runtime/load script","webpack://flowchart/webpack/runtime/make namespace object","webpack://flowchart/webpack/runtime/publicPath","webpack://flowchart/webpack/runtime/jsonp chunk loading","webpack://flowchart/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',[_c('v-main',[_c('router-view')],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-app>\n\n    <v-main>\n      <router-view/>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\n\nexport default {\n  name: 'App',\n\n  data: () => ({\n    //\n  })\n}\n\n</script>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3184c66c\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-app',[_c('tool-panel'),_c('Canvas')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-navigation-drawer',{attrs:{\"app\":\"\",\"location\":\"bottom\"}},[_c('v-list',[_c('v-list-item',[_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\"Блоки\")]),_c('v-btn-toggle',{attrs:{\"exclusive\":\"\"},model:{value:(_vm.blocksSelection),callback:function ($$v) {_vm.blocksSelection=$$v},expression:\"blocksSelection\"}},[_c('div',{attrs:{\"id\":\"wrapper_basic\",\"width\":\"100%\"}},_vm._l((((_vm.BlocksCount))),function(i){return _c('v-tooltip',{key:i,scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({on:{\"click\":function($event){return _vm.selectionChanged(i - 1)}}},'v-btn',attrs,false),on),[_c('img',{attrs:{\"src\":require('../assets/img' + _vm.Blocks[i - 1].img + 'Small.svg'),\"width\":\"30px\"}})])]}}],null,true)},[_c('span',[_vm._v(\" \"+_vm._s(_vm.Blocks[i - 1].description)+\" \")])])}),1)])],1)],1),_c('v-list-item',[_c('v-list-item-title',[_vm._v(\"Инструменты\")]),_c('v-tooltip',{scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({on:{\"click\":function($event){return _vm.properDelete()}}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-trash-can\")])],1)]}}])},[_c('span',[_vm._v(\" Очистить схему \")])]),_c('v-btn-toggle',{attrs:{\"exclusive\":\"\"},model:{value:(_vm.parametersSelection),callback:function ($$v) {_vm.parametersSelection=$$v},expression:\"parametersSelection\"}},[_c('v-tooltip',{scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({on:{\"click\":function($event){return _vm.selectSelect()}}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-select\")])],1)]}}])},[_c('span',[_vm._v(\" Выбор элемента \")])]),_c('v-tooltip',{scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({on:{\"click\":function($event){return _vm.selectArrow()}}},'v-btn',attrs,false),on),[_c('v-icon',[_vm._v(\"mdi-ray-start-arrow\")])],1)]}}])},[_c('span',[_vm._v(\" Стрелка между блоками \")])])],1)],1),_c('v-list-item',[_c('v-text-field',{attrs:{\"label\":\"Текст элемента\"},model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}}),_c('v-tooltip',{scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({on:{\"click\":function($event){return _vm.confirmTextChange()}}},'v-btn',attrs,false),on),[_vm._v(\"Подтвердить\")])]}}])})],1),_c('v-list-item',[_c('v-text-field',{attrs:{\"label\":\"имя загружаемой схемы\"},model:{value:(_vm.loadSchemaName),callback:function ($$v) {_vm.loadSchemaName=$$v},expression:\"loadSchemaName\"}})],1),_c('v-list-item',[_c('v-tooltip',{scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({on:{\"click\":function($event){return _vm.getTheSchema()}}},'v-btn',attrs,false),on),[_vm._v(\"Загрузить\")])]}}])})],1),_c('v-list-item',[_c('v-text-field',{attrs:{\"label\":\"Название сохранемой схемы\"},model:{value:(_vm.saveSchemaName),callback:function ($$v) {_vm.saveSchemaName=$$v},expression:\"saveSchemaName\"}})],1),_c('v-list-item',[_c('v-tooltip',{scopedSlots:_vm._u([{key:\"activator\",fn:function({ on, attrs }){return [_c('v-btn',_vm._g(_vm._b({on:{\"click\":function($event){return _vm.loadTheSchema()}}},'v-btn',attrs,false),on),[_vm._v(\"Сохранить\")])]}}])})],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { Blocks, Instruments, STANDARD_BLOCK_WIDTH, STANDARD_BLOCK_HEIGHT_MULTIPLYER, EPS, isValidBlock } from '../plugins/constants'\nimport { ShapeInfo, Intersection } from 'kld-intersections'\n\n// для тех случаев, когда из-за точности хранения слегка неровный сегмент выходит\n// возвращает единичный вектор в направлении от p1 к p2 но только по одной оси\nfunction getDirectionVectorForSegment (p1, p2) {\n  const retVal = { x: p2.x - p1.x, y: p2.y - p1.y }\n  if (Math.abs(retVal.x) > Math.abs(retVal.y)) {\n    retVal.x = Math.sign(retVal.x)\n    retVal.y = 0\n  } else {\n    retVal.x = 0\n    retVal.y = Math.sign(retVal.y)\n  }\n  return retVal\n}\n\n// добавляет к массиву arrowPoints в еачало и конец начальную и конечную краевые точки\nfunction addEdgePoints (context, arrowPoints, arrow, Blocks) {\n  const startBlock = Blocks.find(block => block.id === arrow.idStart)\n  const endBlock = Blocks.find(block => block.id === arrow.idEnd)\n  const startPoint = getEdgePointCoords(context, startBlock, arrow.angleStart)\n  const endPoint = getEdgePointCoords(context, endBlock, arrow.angleEnd)\n  arrowPoints.unshift(constructPoint(startPoint.x, startPoint.y, arrow.id, -1))\n  arrowPoints.push(constructPoint(endPoint.x, endPoint.y, arrow.id, arrowPoints.length - 1))\n}\n\nfunction getNormalised (vector) {\n  const length = Math.sqrt(vector.x * vector.x + vector.y * vector.y)\n  return {\n    x: vector.x / length,\n    y: vector.y / length\n  }\n}\n\nfunction getPerpendicular (vector) {\n  return {\n    x: (-1) * vector.y,\n    y: vector.x\n  }\n}\n\nfunction getReverse (vector) {\n  return {\n    x: (-1) * vector.x,\n    y: (-1) * vector.y\n  }\n}\n\nfunction getQuadranglePath (p1, p2, p3, p4) {\n  let retPath = ''\n  retPath += 'M ' + (p1.x) + ', ' + (p1.y) + '\\n'\n  retPath += 'L ' + (p2.x) + ', ' + (p2.y) + '\\n'\n  retPath += 'L ' + (p3.x) + ', ' + (p3.y) + '\\n'\n  retPath += 'L ' + (p4.x) + ', ' + (p4.y) + '\\n'\n  retPath += 'L ' + (p1.x) + ', ' + (p1.y) + '\\n'\n  retPath += 'Z'\n  return retPath\n}\n\n// конструирует четырехугольник для выбора сегемнта стрелки\nfunction getSegmemtSelectPath (segmentStart, segmentEnd) {\n  const arrowSelectionWidth = 8\n  const segmentVector = { x: segmentEnd.x - segmentStart.x, y: segmentEnd.y - segmentStart.y }\n  // console.log('segmentVector - x: ' + segmentVector.x + ', y: ' + segmentVector.y)\n  const normalisedSegmentVector = getNormalised(segmentVector)\n  // console.log('normalisedSegmentVector - x: ' + normalisedSegmentVector.x + ', y: ' + normalisedSegmentVector.y)\n  const direction1 = getPerpendicular(normalisedSegmentVector)\n  direction1.x = direction1.x * (arrowSelectionWidth / 2)\n  direction1.y = direction1.y * (arrowSelectionWidth / 2)\n  // console.log('direction1 - x: ' + direction1.x + ', y: ' + direction1.y)\n  const direction2 = getReverse(direction1)\n  // console.log('direction2 - x: ' + direction2.x + ', y: ' + direction2.y)\n  const p1 = { x: segmentStart.x + direction1.x, y: segmentStart.y + direction1.y }\n  const p2 = { x: segmentStart.x + direction2.x, y: segmentStart.y + direction2.y }\n  const p3 = { x: segmentEnd.x + direction2.x, y: segmentEnd.y + direction2.y }\n  const p4 = { x: segmentEnd.x + direction1.x, y: segmentEnd.y + direction1.y }\n  return getQuadranglePath(p1, p2, p3, p4)\n}\nfunction getLineXFromY (y, p1, p2) {\n  return (y - p1.y) * (p2.x - p1.x) / (p2.y - p1.y) + p1.x\n}\nfunction getLineYFromX (x, p1, p2) {\n  return (x - p1.x) * (p2.y - p1.y) / (p2.x - p1.x) + p1.y\n}\n\nfunction getVectorByBoundingBox (block, closePoint, farPoint) {\n  const leftSide = block.centerX - block.sizeX / 2\n  const rightSide = leftSide + block.sizeX\n  const topSide = block.centerY - block.sizeY / 2\n  const bottomSide = topSide + block.sizeY\n  // console.log('Left: x=' + leftSide + ', Right: x=' + rightSide + ', Top: y=' + topSide + ', Bottom: y=' + bottomSide)\n  // пересекаем прямую, образуемую 2 точками с прямыми, на которых расположены стороны ограничивающего прямоугольника\n  const intersections = [constructPoint(leftSide, getLineYFromX(leftSide, closePoint, farPoint), 0),\n    constructPoint(rightSide, getLineYFromX(rightSide, closePoint, farPoint), 1),\n    constructPoint(getLineXFromY(topSide, closePoint, farPoint), topSide, 2),\n    constructPoint(getLineXFromY(bottomSide, closePoint, farPoint), bottomSide, 3)]\n  // console.log(intersections)\n  // отсекаем те точки, которые не лежат на сторонах ограничивающегопрямоугольника\n  let pointsToConsider = intersections.filter(point => (point.x >= leftSide) && (point.x <= rightSide) && (point.y >= topSide) && (point.y <= bottomSide))\n  // console.log(pointsToConsider)\n  // если обе передаваемые в функции точки находятся ВНЕ блока, то возможен сценарий, при котором будут отсечены все точки, в таком случае просто добавляем их все обратно\n  if (pointsToConsider.length < 1) pointsToConsider = intersections\n  // для нахождения вектора надо определить дальнюю по вектору, задаваемому входными точками\n  let pointVector = null\n  let minDist = 100000000\n  pointsToConsider.forEach(point => {\n    const dist = (point.x - farPoint.x) * (point.x - farPoint.x) + (point.y - farPoint.y) * (point.y - farPoint.y)\n    if (minDist > dist) {\n      minDist = dist\n      pointVector = point\n    }\n  })\n  // console.log(pointVector)\n  // найденной точке будет соответствовать какая-либо сторона, а ей - свой вектор направления\n  const retVal = { x: -1, y: 0 }\n  switch (pointVector.arrowId) {\n    case 1: {\n      retVal.x = 1\n      break\n    }\n    case 2: {\n      retVal.x = 0\n      retVal.y = -1\n      break\n    }\n    case 3: {\n      retVal.x = 0\n      retVal.y = 1\n      break\n    }\n  }\n  return retVal\n}\nfunction blockAt (context, blocks, x, y) {\n  // console.log(blocks)\n  let resultingBlock = {\n    id: -1\n  }\n  const blocksLocal = [...blocks]\n  // console.log(blocksLocal)\n  blocksLocal.forEach((block) => {\n    if (resultingBlock.id === -1) {\n      // if ((Math.abs(X - block.centerX) < (block.sizeX / 2)) && (Math.abs(Y - block.centerY) < (block.sizeY / 2))) {\n      const path = Blocks[block.type].getPath(block)\n      if (context.isPointInPath(new Path2D(path), x, y)) {\n        // resultingBlock = block\n        resultingBlock = constructBlock(block.centerX, block.centerY, block.type, block.sizeX, block.sizeY, block.id)\n        // console.log(resultingBlock)\n      }\n    }\n  })\n  if (resultingBlock.id === -1) resultingBlock = null\n  return resultingBlock\n}\nfunction getIntersections (block, x1, y1, x2, y2) {\n  return Intersection.intersect(ShapeInfo.path(Blocks[block.type].getPath(block)), ShapeInfo.line([x1, y1], [x2, y2]))\n}\nfunction actualIntersection (context, block, intersections) {\n  let retVal = null\n  const cX = block.centerX\n  const cY = block.centerY\n  let maxdist = 0\n  // console.log(intersections)\n  intersections.points.forEach(point => {\n    if ((point.x - cX) * (point.x - cX) + (point.y - cY) * (point.y - cY) > maxdist) {\n      const blockPath = new Path2D(Blocks[block.type].getPath(block))\n      if ((context.isPointInPath(blockPath, point.x, point.y)) || (context.isPointInStroke(blockPath, point.x, point.y))) {\n        maxdist = (point.x - cX) * (point.x - cX) + (point.y - cY) * (point.y - cY)\n        retVal = point\n      }\n    }\n  })\n  return retVal\n}\nfunction getEdgePointCoords (context, block, angle) {\n  const vector = vectorFromAngle(angle)\n  const blockSize = Math.max(block.sizeX, block.sizeY)\n  const intersections = getIntersections(block, block.centerX, block.centerY, block.centerX + vector.x * blockSize, block.centerY + vector.y * blockSize)\n  // console.log('edgecase')\n  // console.log(vector)\n  return actualIntersection(context, block, intersections)\n}\nfunction constructBlock (XCentral, YCentral, type, width = STANDARD_BLOCK_WIDTH, height = STANDARD_BLOCK_WIDTH * STANDARD_BLOCK_HEIGHT_MULTIPLYER, id = null, mainText = null) {\n  let finaltype = Instruments.BLOCK_DEFALULT\n  // console.log(type + ' ' + isValidBlock(type))\n  if (isValidBlock(type) === true) {\n    finaltype = type\n  }\n  return {\n    // id - пока что только так, временный\n    id: id,\n    // координаты центра\n    centerX: XCentral,\n    centerY: YCentral,\n    // размеры\n    sizeX: width,\n    sizeY: height,\n    // тип в виде номера\n    type: finaltype,\n    // текст внутри блока\n    text: mainText\n  }\n}\nfunction copyBlock (block) {\n  return constructBlock(block.centerX, block.centerY, block.type, block.sizeX, block.sizeY, block.id, block.text)\n}\nfunction constructArrow (idStart, idEnd = null, angleStart = 90, angleEnd = 270, id = null, mainText = null) {\n  return {\n    id: id,\n    idStart: idStart,\n    idEnd: idEnd,\n    // в градусах угол от строго восточного направления\n    angleStart: angleStart,\n    angleEnd: angleEnd\n    // подпись связи\n    // text: mainText\n  }\n}\nfunction copyArrow (arrow) {\n  return constructArrow(arrow.idStart, arrow.idEnd, arrow.angleStart, arrow.angleEnd, arrow.id, arrow.text)\n}\nfunction constructPoint (x, y, arrowId = null, order = null, id = null) {\n  return {\n    id: id,\n    x: x,\n    y: y,\n    arrowId: arrowId,\n    order: order\n  }\n}\n\nfunction copyPoint (point) {\n  return constructPoint(point.x, point.y, point.arrowId, point.order, point.id)\n}\nfunction arrowAngle (edgePoint, block) {\n  const cX = block.centerX\n  const cY = block.centerY\n  const pX = edgePoint.x\n  const pY = edgePoint.y\n  let retAngle = Math.atan2(pY - cY, pX - cX)\n  // retAngle = Math.round(retAngle * 180 / Math.PI)\n  retAngle = retAngle * 180 / Math.PI\n  if (retAngle === -180) retAngle = 180\n  return retAngle\n}\n\nfunction vectorFromAngle (angle) {\n  const vector = { x: 2, y: 2 }\n  const radAngle = angle * Math.PI / 180\n  const retVector = { x: 0, y: 0 }\n  retVector.y = (Math.sin(radAngle) * 1000) * vector.y\n  retVector.x = (Math.cos(radAngle) * 1000) * vector.x\n  return retVector\n}\n\nfunction constructStraightArrow (context, startPoint, startBlock, endPoint, endBlock = null) {\n  if (getIntersections(startBlock, startPoint.x, startPoint.y, endPoint.x, endPoint.y).points.length > 0) {\n    const startEdgePoint = actualIntersection(context, startBlock, getIntersections(startBlock, startPoint.x, startPoint.y, endPoint.x, endPoint.y))\n    const startEdgeAngle = arrowAngle(startEdgePoint, startBlock)\n    let endEdgePoint = endPoint\n    let endEdgeAngle = null\n    let endId = null\n    if (endBlock != null) {\n      endEdgePoint = actualIntersection(context, endBlock, getIntersections(endBlock, startPoint.x, startPoint.y, endPoint.x, endPoint.y))\n      endEdgeAngle = arrowAngle(endEdgePoint, endBlock)\n      endId = endBlock.id\n    }\n    const retVal = constructArrow(startBlock.id, endId, startEdgeAngle, endEdgeAngle)\n    return retVal\n  } else return null\n}\n// конструирование прямоугольных стрелок должно возвращать и массив точек, который только не имеет айдишников, так что тут да, возвращаемый объект состоит из 2 частей\nfunction constructRectangularArrow (arrow, startPoint, endPoint, startVector, endVector) {\n  const retVal = []\n  const startPointVector = { x: Math.abs(endPoint.x - startPoint.x) * 2 * startVector.x, y: Math.abs(endPoint.y - startPoint.y) * 2 * startVector.y }\n  const endPointVector = { x: Math.abs(endPoint.x - startPoint.x) * 2 * endVector.x, y: Math.abs(endPoint.y - startPoint.y) * 2 * endVector.y }\n  const intersections = Intersection.intersect(ShapeInfo.line([startPoint.x, startPoint.y], [startPoint.x + startPointVector.x, startPoint.y + startPointVector.y]),\n    ShapeInfo.line([endPoint.x, endPoint.y], [endPoint.x + endPointVector.x, endPoint.y + endPointVector.y]))\n  if (intersections.points.length === 1) {\n    // случай с перпендикулярными и пересекающимися векторами (1 точка)\n    // console.log('arrow with 1 point')\n    retVal.push(constructPoint(intersections.points[0].x, intersections.points[0].y, arrow.id, 0))\n  } else if ((startVector.x === endVector.x) && (startVector.y === endVector.y)) {\n    // случай с параллельными векторами, совпадающими по направлению (2 точки) (случай должен возникать обычно только при реконструкции стрелки при перемещении блока)\n    // console.log('arrow with 2 points, made by connecting 2 sides looking in the same direction')\n    const candidate1 = { x: startPoint.x + startPointVector.x / 4, y: startPoint.y + startPointVector.y / 4 }\n    const candidate2 = { x: endPoint.x + endPointVector.x / 4, y: endPoint.y + endPointVector.y / 4 }\n    let p1, p2\n    if (startVector.x === 0) {\n      // вычисли координаты\n      p1 = { x: startPoint.x, y: Math.max(candidate1.y * startVector.y, candidate2.y * startVector.y) * startVector.y }\n      p2 = { x: endPoint.x, y: Math.max(candidate1.y * startVector.y, candidate2.y * startVector.y) * startVector.y }\n    } else {\n      p1 = { x: Math.max(candidate1.x * startVector.x, candidate2.x * startVector.x) * startVector.x, y: startPoint.y }\n      p2 = { x: Math.max(candidate1.x * startVector.x, candidate2.x * startVector.x) * startVector.x, y: endPoint.y }\n    }\n    retVal.push(constructPoint(p1.x, p1.y, arrow.id, 0))\n    retVal.push(constructPoint(p2.x, p2.y, arrow.id, 1))\n  } else if (((startVector.x === (-1) * endVector.x) && (startVector.x !== 0)) || ((startVector.y === (-1) * endVector.y) && (startVector.y !== 0))) {\n    // случай с параллельными векторами, различающимися по направлению\n    if (intersections.points.length > 1) {\n      // точки друг напротив друга, промежуточных точек нет\n      // console.log('arrow with 2 points, made by connecting 2 sides looking at the same direction, connection is parallel to one of coordinate lines')\n    } else if (((Math.sign(endPoint.x - startPoint.x) === Math.sign(endVector.x)) && (startVector.x !== 0)) || ((Math.sign(endPoint.y - startPoint.y) === Math.sign(endVector.y)) && (startVector.y !== 0))) {\n      // в данном случае первые 2 точки ставятся по вектору на неоторый отступ, затем идет ортогональный векторам отступ до одного значения и происходит соединение\n      const dist = Math.min(Math.max(Math.abs(startPoint.x - endPoint.x), Math.abs(startPoint.y - endPoint.y)), STANDARD_BLOCK_WIDTH)\n      const p1 = { x: startPoint.x + startVector.x * dist, y: startPoint.y + startVector.y * dist }\n      const p4 = { x: endPoint.x + endVector.x * dist, y: startPoint.y + startVector.y * dist }\n      let p2, p3\n      if (startVector.x === 0) {\n        p2 = { x: p1.x + dist, y: p1.y }\n        p3 = { x: p2.x + dist, y: p4.y }\n      } else {\n        p2 = { x: p1.x, y: p1.y + dist }\n        p3 = { x: p4.x, y: p2.y + dist }\n      }\n      retVal.push(constructPoint(p1.x, p1.y, arrow.id, 0))\n      retVal.push(constructPoint(p2.x, p2.y, arrow.id, 1))\n      retVal.push(constructPoint(p3.x, p3.y, arrow.id, 2))\n      retVal.push(constructPoint(p4.x, p4.y, arrow.id, 3))\n    } else {\n      // случай разнонаправленных векторов, смотрящих по направлению к противоположной точке (2 точки)\n      // console.log('arrow with 2 points, made by connecting 2 sides looking at the same direction, but not connected by straight line allighning with coordinates line')\n      const p1 = { x: startPoint.x + startPointVector.x / 4, y: startPoint.y + startPointVector.y / 4 }\n      const p2 = { x: p1.x + (endPoint.x - startPoint.x) * Math.abs(startVector.y), y: p1.y + (endPoint.y - startPoint.y) * Math.abs(startVector.x) }\n      retVal.push(constructPoint(p1.x, p1.y, arrow.id, 0))\n      retVal.push(constructPoint(p2.x, p2.y, arrow.id, 1))\n    }\n  } else {\n    // здесь нужно просто сделать отступы по векторам и проделать пересечение в обратном и прямом направлениях из обратных точек\n    const dist = Math.min(Math.max(Math.abs(startPoint.x - endPoint.x), Math.abs(startPoint.y - endPoint.y)), STANDARD_BLOCK_WIDTH)\n    const p1 = { x: startPoint.x + startVector.x * dist, y: startPoint.y + startVector.y * dist }\n    const p3 = { x: endPoint.x + endVector.x * dist, y: startPoint.y + startVector.y * dist }\n    const p2 = Intersection.intersect(ShapeInfo.line([p1.x, p1.y], [p1.x + endPointVector.x, p1.y + endPointVector.y]),\n      ShapeInfo.line([p3.x, p3.y], [p3.x - startPointVector.x, p3.y - startPointVector.y])).points[0]\n    retVal.push(constructPoint(p1.x, p1.y, arrow.id, 0))\n    retVal.push(constructPoint(p2.x, p2.y, arrow.id, 1))\n    retVal.push(constructPoint(p3.x, p3.y, arrow.id, 2))\n  }\n  return retVal\n}\n\n// возвращает изменные стрелку и массивы перемещенных, удаленных и добавленных точек с учетом перемещения выбранного сегмента соответственно указанным координатам\nfunction adjustArrowSegmentForNewCoords (context, arrow, pointIndex, startBlock, endBlock, arrowPoints, newX, newY) {\n  // определяем начальные координаты целевого сегмента\n  const segmentPoints = [arrowPoints[pointIndex], arrowPoints[pointIndex + 1]]\n  const arrowAngles = [arrow.angleStart, arrow.angleEnd]\n  const segmentCenter = constructPoint((segmentPoints[0].x + segmentPoints[1].x) / 2, (segmentPoints[0].y + segmentPoints[1].y) / 2)\n  // получаем вектор направления сегмента - так как двигаются только прямоугольные сегменты, а в некоторых случаях координаты могут не идеально совпадать, то требуется такая коррекция\n  const segmentDirection = getDirectionVectorForSegment(segmentPoints[0], segmentPoints[1])\n  // получаем координаты смещенного на новое место центра(при этом он не обязательно будет центром)\n  const segmentNewCenter = copyPoint(segmentCenter)\n  if (segmentDirection.x === 0) segmentNewCenter.x = newX; else segmentNewCenter.y = newY\n  // информация о точках будет сгруппирована в 3 массива с исчерпывающими наименованиями\n  const retMoved = [null, null]\n  const retAdded = [null, null]\n  const retDeleted = [null, null]\n  // большинство действий для обоих краев сегмента будет повторяться, потому их обработка организована в виде цикла с 2 итерациями\n  for (let i = 0; i < 2; i++) {\n    const currentPoint = segmentPoints[i]\n    // если точка не краевая, то она переезжает в новый массив с изменением координат по тому же приципу, что и центр сегмента\n    const retPointIndex = arrowPoints.findIndex(point => point.id === currentPoint.id)\n    if (retPointIndex > 0 && (retPointIndex < arrowPoints.length - 1)) {\n      let moveCurrent = copyPoint(currentPoint)\n      // console.log(segmentDirection)\n      if (segmentDirection.x === 0) moveCurrent.x = newX; else moveCurrent.y = newY\n      retMoved[i] = moveCurrent\n      // удаление предыдущей/последующей точки при попадании на одну линию после перемещения\n      const whereToLook = i * 2 - 1\n      const indexOfPointInQuestion = retPointIndex + whereToLook\n      // проверяем что эта точка лежит на одной прямой с новым положением отрезка\n      // console.log(Math.abs((arrowPoints[indexOfPointInQuestion].x - currentPoint.x) * segmentDirection.y + (arrowPoints[indexOfPointInQuestion].y - currentPoint.y) * segmentDirection.x))\n      if (Math.abs((arrowPoints[indexOfPointInQuestion].x - currentPoint.x) * segmentDirection.y + (arrowPoints[indexOfPointInQuestion].y - currentPoint.y) * segmentDirection.x) < EPS) {\n        // если при перемещении сегмента один из его краев лежит на одной прямой этого и следующего сегмента, то его надо убрать\n        moveCurrent = copyPoint(arrowPoints[indexOfPointInQuestion])\n        // при проверке маленькая разница считается погрешностью, в новом сегменте она поправляется сдвигом для соблюдения прямоугольности результирующего сегмента\n        if (segmentDirection.x === 0) moveCurrent.x = newX; else moveCurrent.y = newY\n        retMoved[i] = moveCurrent\n        retDeleted[i] = copyPoint(currentPoint)\n      }\n    } else {\n      // мы на одной из краевых точек, определим какого блока краевая точка\n      let currentBlock = null\n      if (i === 0) currentBlock = startBlock; else currentBlock = endBlock\n      // проведем из нового центра длинный отрезок в обе стороны для пересечения с нашим блоком\n      const bigLength = Math.max(currentBlock.sizeX, currentBlock.sizeY) + Math.max(Math.abs(segmentPoints[1].x - segmentPoints[0].x), Math.abs(segmentPoints[1].y - segmentPoints[0].y))\n      const bigP1 = constructPoint(segmentNewCenter.x + bigLength * segmentDirection.x, segmentNewCenter.y + bigLength * segmentDirection.y)\n      const bigP2 = constructPoint(segmentNewCenter.x + bigLength * segmentDirection.x * (-1), segmentNewCenter.y + bigLength * segmentDirection.y * (-1))\n      // получаем пересечения\n      const intersections = getIntersections(currentBlock, bigP1.x, bigP1.y, bigP2.x, bigP2.y)\n      // console.log(intersections)\n      let intersection = null\n      let maxdist = -1000000000000\n      let directionForBlockCollision = segmentDirection\n      if (i === 1) directionForBlockCollision = getReverse(segmentDirection)\n      intersections.points.forEach(point => {\n        if ((point.x * directionForBlockCollision.x) + (point.y * directionForBlockCollision.y) > maxdist) {\n          const blockPath = new Path2D(Blocks[currentBlock.type].getPath(currentBlock))\n          if ((context.isPointInPath(blockPath, point.x, point.y)) || (context.isPointInStroke(blockPath, point.x, point.y))) {\n            intersection = constructPoint(point.x, point.y, currentPoint.arrowId)\n            maxdist = (point.x * directionForBlockCollision.x) + (point.y * directionForBlockCollision.y)\n          }\n        }\n      })\n      // если пересечение есть, оно будет найдено к этому моменту\n      if (intersection != null) {\n        // необходимо пересчитать угол у стрелки\n        // console.log('old angle:' + arrowAngles[i])\n        arrowAngles[i] = arrowAngle(intersection, currentBlock)\n        // console.log('new angle:' + arrowAngles[i])\n      } else {\n        // пересечения с блоком нет, это значит что потребуется добавить новую точку\n        const intermX = currentBlock.centerX * Math.abs(segmentDirection.x) + segmentNewCenter.x * Math.abs(segmentDirection.y)\n        const intermY = currentBlock.centerY * Math.abs(segmentDirection.y) + segmentNewCenter.y * Math.abs(segmentDirection.x)\n        const newIntermidiate = copyPoint(currentPoint)\n        newIntermidiate.x = intermX\n        newIntermidiate.y = intermY\n        retAdded[i] = newIntermidiate\n        // надо подправить саму стрелку, для этого посмотрим пересечение блока с отрезком, соединяющим новую промежуточную точку\n        // (воспользуемся ограниченностью вариантов изза способа построения промежуточной точки)\n        const angleVector = getDirectionVectorForSegment(constructPoint(currentBlock.centerX, currentBlock.centerY), newIntermidiate)\n        if (angleVector.x === 1) arrowAngles[i] = 0; else\n        if (angleVector.x === -1) arrowAngles[i] = 180; else\n        if (angleVector.y === -1) arrowAngles[i] = -90; else arrowAngles[i] = 90\n      }\n    }\n  }\n  // теперь надо вернуть измененный массив и стрелку\n  const retArrow = copyArrow(arrow)\n  retArrow.angleStart = arrowAngles[0]\n  retArrow.angleEnd = arrowAngles[1]\n  // console.log(arrow)\n  // console.log(retArrow)\n  return { arrow: retArrow, moved: retMoved, deleted: retDeleted, added: retAdded }\n}\n// собирает последовательный массив точек из информации о последствиях перемещения сегмента(используется для отображения промежуточного результата)\nfunction assembleArrowPointsForMovingSegment (moveRes, arrowPoints, blocks, context) {\n  arrowPoints.forEach(point => {\n    if (moveRes.moved[0] != null && moveRes.moved[0].id === point.id) {\n      point.x = moveRes.moved[0].x\n      point.y = moveRes.moved[0].y\n    }\n    if (moveRes.moved[1] != null && moveRes.moved[1].id === point.id) {\n      point.x = moveRes.moved[1].x\n      point.y = moveRes.moved[1].y\n    }\n    if (moveRes.deleted[0] != null) {\n      point.order--\n    }\n    if (moveRes.added[0] != null) {\n      point.order++\n    }\n  })\n  if (moveRes.deleted[1] != null) arrowPoints.pop()\n  if (moveRes.deleted[0] != null) arrowPoints.shift()\n  if (moveRes.added[0] != null) {\n    arrowPoints.unshift(moveRes.added[0])\n    arrowPoints[0].order = 0\n  }\n  if (moveRes.added[1] != null) {\n    arrowPoints.push(moveRes.added[1])\n    arrowPoints[arrowPoints.length - 1].order = arrowPoints.length - 1\n  }\n  addEdgePoints(context, arrowPoints, moveRes.arrow, blocks)\n  return arrowPoints\n}\n\nexport { constructBlock, copyBlock, constructArrow, copyArrow, constructPoint, copyPoint, blockAt, actualIntersection, constructStraightArrow, constructRectangularArrow, getIntersections, getEdgePointCoords, getVectorByBoundingBox, getNormalised, getPerpendicular, getReverse, getQuadranglePath, getSegmemtSelectPath, addEdgePoints, adjustArrowSegmentForNewCoords, assembleArrowPointsForMovingSegment }\n","import { getVectorByBoundingBox } from '../plugins/functions'\r\n\r\nconst Instruments = Object.freeze({\r\n  UNSELECT_TOOLS: -1,\r\n  BLOCK_DEFALULT: 0,\r\n  BLOCK_DATA: 0,\r\n  BLOCK_RECORDED_DATA: 1,\r\n  BLOCK_RAM: 2,\r\n  BLOCK_SEQUENTIAL_ACCESS_MEMORY: 3,\r\n  BLOCK_DIRECT_ACCESS_MEMORY: 4,\r\n  BLOCK_DOCUMENT: 5,\r\n  BLOCK_MANUAL_INPUT: 6,\r\n  BLOCK_CARD: 7,\r\n  BLOCK_PAPER_TAPE: 8,\r\n  BLOCK_DISPLAY: 9,\r\n  BLOCK_PROCESS: 10,\r\n  BLOCK_DEFINED_PROCESS: 11,\r\n  BLOCK_MANUAL_OPERATION: 12,\r\n  BLOCK_PREPARATION: 13,\r\n  BLOCK_DECISION: 14,\r\n  ARROW_DEFAULT: 15,\r\n  PARAMETERS_SELECT: 16\r\n})\r\n\r\nfunction isValidInstrument (toolIndex) {\r\n  // console.log(toolIndex)\r\n  let retVal = false\r\n  for (const tool in Instruments) {\r\n    const toolValue = Instruments[tool]\r\n    if (toolValue === toolIndex) {\r\n      retVal = true\r\n    }\r\n  }\r\n  // console.log(retVal)\r\n  return retVal\r\n}\r\n\r\nconst Blocks = {\r\n  [Instruments.BLOCK_DATA]: {\r\n    img: 'Data',\r\n    description: 'Данные',\r\n    getPath (block) {\r\n      const angleCoeffic = 0.25\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2), cY + (h / 2))\r\n      retPath.lineTo(cX - (w / 2) + angleCoeffic * h, cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2), cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2) - angleCoeffic * h, cY + (h / 2))\r\n      retPath.closePath() */\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2) + angleCoeffic * h) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2) - angleCoeffic * h) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const slopeCoef = 0.25\r\n      const w = block.sizeX - slopeCoef * block.sizeY * 2\r\n      const h = block.sizeY\r\n      const t = block.centerY - block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2 + block.sizeY * slopeCoef\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_RECORDED_DATA]: {\r\n    img: 'RecData',\r\n    description: 'Запоминаемые данные',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const radius = h\r\n      const arcAngle = Math.asin((h / 2) / radius) * 2\r\n      const xOffset = radius * (1 - Math.cos(arcAngle / 2))\r\n      /* const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2) + xOffset, cY + (h / 2))\r\n      retPath.arc(cX - (w / 2) + radius, cY, radius, Math.PI - (arcAngle / 2), Math.PI + (arcAngle / 2))\r\n      retPath.lineTo(cX + (w / 2), cY - (h / 2))\r\n      retPath.arc(cX + (w / 2) + radius - xOffset, cY, radius, Math.PI + (arcAngle / 2), Math.PI - (arcAngle / 2), true)\r\n      retPath.lineTo(cX - (w / 2) + xOffset, cY + (h / 2))\r\n      retPath.closePath() */\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2) + xOffset) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 1 + ' ' + (cX - (w / 2) + xOffset) + ' ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + (cX + (w / 2)) + ' ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2) + xOffset) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const arcOffset = block.sizeY * (1 - Math.cos(1 / 2))\r\n      const w = block.sizeX - arcOffset * 2\r\n      const h = block.sizeY\r\n      const t = block.centerY - block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2 + arcOffset\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_RAM]: {\r\n    img: 'RAM',\r\n    description: 'Оперативное ЗУ',\r\n    getPath (block) {\r\n      // const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const offset = 0.15 * h\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (h / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (h / 2), cY - (h / 2))\r\n      */\r\n      // outline\r\n      retPath += 'L ' + (cX - (h / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (h / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (h / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (h / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      /*\r\n      retPath.lineTo(cX - (h / 2), cY + (h / 2))\r\n      retPath.lineTo(cX + (h / 2), cY + (h / 2))\r\n      retPath.lineTo(cX + (h / 2), cY - (h / 2))\r\n      retPath.lineTo(cX - (h / 2), cY - (h / 2))\r\n      */\r\n      // offset lines\r\n      retPath += 'M ' + (cX - (h / 2) + offset) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (h / 2) + offset) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'M ' + (cX - (h / 2)) + ', ' + (cY - (h / 2) + offset) + '\\n'\r\n      retPath += 'L ' + (cX + (h / 2)) + ', ' + (cY - (h / 2) + offset) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      retPath.moveTo(cX - (h / 2) + offset, cY - (h / 2))\r\n      retPath.lineTo(cX - (h / 2) + offset, cY + (h / 2))\r\n      retPath.moveTo(cX - (h / 2), cY - (h / 2) + offset)\r\n      retPath.lineTo(cX + (h / 2), cY - (h / 2) + offset)\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const offset = block.sizeY * 0.15\r\n      const w = block.sizeY - offset\r\n      const h = block.sizeY - offset\r\n      const t = block.centerY - block.sizeY / 2 + offset\r\n      const l = block.centerX - block.sizeY / 2 + offset\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_SEQUENTIAL_ACCESS_MEMORY]: {\r\n    img: 'SeqMem',\r\n    description: 'ЗУ с последовательным доступом',\r\n    getPath (block) {\r\n      // const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const radius = h / 2\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX, cY + radius)\r\n      retPath.arc(cX, cY, radius, Math.PI / 2, Math.PI * 5 / 2)\r\n      retPath.lineTo(cX + radius, cY + radius)\r\n      retPath.closePath()\r\n      */\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX) + ', ' + (cY + radius) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 1 + ' ' + 1 + ' ' + (cX) + ' ' + (cY - radius) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 1 + ' ' + 1 + ' ' + (cX) + ' ' + (cY + radius) + '\\n'\r\n      retPath += 'L ' + (cX + radius) + ', ' + (cY + radius) + '\\n'\r\n      retPath += 'Z'\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const insideSize = block.sizeY / Math.SQRT2\r\n      const w = insideSize\r\n      const h = insideSize\r\n      const t = block.centerY - insideSize / 2\r\n      const l = block.centerX - insideSize / 2\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_DIRECT_ACCESS_MEMORY]: {\r\n    img: 'DirectMem',\r\n    description: 'ЗУ с прямым доступом',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const radius = h\r\n      const arcAngle = Math.asin((h / 2) / radius) * 2\r\n      const xOffset = radius * (1 - Math.cos(arcAngle / 2))\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2) + xOffset) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 1 + ' ' + (cX - (w / 2) + xOffset) + ' ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2) - xOffset) + ', ' + (cY - (h / 2)) + '\\n'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2) + xOffset, cY + (h / 2))\r\n      retPath.arc(cX - (w / 2) + radius, cY, radius, Math.PI - (arcAngle / 2), Math.PI + (arcAngle / 2))\r\n      retPath.lineTo(cX + (w / 2) - xOffset, cY - (h / 2))\r\n      */\r\n      // right arcs (have to end at lower point)\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + (cX + (w / 2) - xOffset) + ' ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + (cX + (w / 2) - xOffset) + ' ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + (cX + (w / 2) - xOffset) + ' ' + (cY + (h / 2)) + '\\n'\r\n      /*\r\n      retPath.arc(cX + (w / 2) + radius - (xOffset * 2), cY, radius, Math.PI + (arcAngle / 2), Math.PI - (arcAngle / 2), true)\r\n      retPath.arc(cX + (w / 2) + radius - (xOffset * 2), cY, radius, Math.PI - (arcAngle / 2), Math.PI + (arcAngle / 2), false)\r\n      retPath.arc(cX + (w / 2) - radius, cY, radius, 0 - (arcAngle / 2), 0 + (arcAngle / 2), false)\r\n      */\r\n      // ending block\r\n      retPath += 'L ' + (cX - (w / 2) + xOffset) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      retPath.lineTo(cX - (w / 2) + xOffset, cY + (h / 2))\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const arcOffset = block.sizeY * (1 - Math.cos(1 / 2))\r\n      const w = block.sizeX - arcOffset * 3\r\n      const h = block.sizeY\r\n      const t = block.centerY - block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2 + arcOffset\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_DOCUMENT]: {\r\n    img: 'Document',\r\n    description: 'Документ',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const radius = h\r\n      const arcAngle = Math.asin((w / 4) / radius) * 2\r\n      const yOffset = radius * (1 - Math.cos(arcAngle / 2))\r\n      // uses looks similar to modern standard\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY + (h / 2) - yOffset) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + (cX) + ' ' + (cY + (h / 2) - yOffset) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 1 + ' ' + (cX + (w / 2)) + ' ' + (cY + (h / 2) - yOffset) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2), cY - (h / 2))\r\n      retPath.lineTo(cX - (w / 2), cY + (h / 2) - yOffset)\r\n      retPath.arc(cX - (w / 4), cY - (h / 2), radius, Math.PI / 2 + (arcAngle / 2), Math.PI / 2 - (arcAngle / 2), true)\r\n      retPath.arc(cX + (w / 4), cY + (h / 2) - yOffset * 2 + radius, radius, Math.PI * 3 / 2 - (arcAngle / 2), Math.PI * 3 / 2 + (arcAngle / 2), false)\r\n      retPath.lineTo(cX + (w / 2), cY - (h / 2))\r\n      retPath.lineTo(cX - (w / 2), cY - (h / 2))\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const arcOffset = block.sizeY * (1 - Math.cos(Math.asin(block.sizeX / 4 / block.sizeY)))\r\n      const w = block.sizeX\r\n      const h = block.sizeY - arcOffset * 2\r\n      const t = block.centerY - block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2 + arcOffset\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_MANUAL_INPUT]: {\r\n    img: 'ManualInput',\r\n    description: 'Ручной ввод',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const slopeSideOffest = 0.25 * h\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY - (h / 2) + slopeSideOffest) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2), cY + (h / 2))\r\n      retPath.lineTo(cX - (w / 2), cY - (h / 2) + slopeSideOffest)\r\n      retPath.lineTo(cX + (w / 2), cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2), cY + (h / 2))\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const slopeCoef = 0.25\r\n      const w = block.sizeX\r\n      const h = block.sizeY * (1 - slopeCoef)\r\n      const t = block.centerY - block.sizeY / 2 + slopeCoef * block.sizeY\r\n      const l = block.centerX - block.sizeX / 2\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_CARD]: {\r\n    img: 'Card',\r\n    description: 'Карта',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const slopeSideOffest = 0.25 * h\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY - (h / 2) + slopeSideOffest) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2) + slopeSideOffest) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2), cY + (h / 2))\r\n      retPath.lineTo(cX - (w / 2), cY - (h / 2) + slopeSideOffest)\r\n      retPath.lineTo(cX - (w / 2) + slopeSideOffest, cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2), cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2), cY + (h / 2))\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const slopeCoef = 0.25\r\n      const w = block.sizeX - (block.sizeY * slopeCoef / 2)\r\n      const h = block.sizeY * (1 - slopeCoef / 2)\r\n      const t = block.centerY - block.sizeY / 2 + slopeCoef * block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2 + block.sizeY * slopeCoef / 2\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_PAPER_TAPE]: {\r\n    img: 'PaperTape',\r\n    description: 'Бумажная лента',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const radius = h\r\n      const arcAngle = Math.asin((w / 4) / radius) * 2\r\n      const yOffset = radius * (1 - Math.cos(arcAngle / 2))\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2)) + ', ' + (cY - (h / 2) + yOffset) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY + (h / 2) - yOffset) + '\\n'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2), cY - (h / 2) + yOffset)\r\n      retPath.lineTo(cX - (w / 2), cY + (h / 2) - yOffset)\r\n      */\r\n      // lower side\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + (cX) + ' ' + (cY + (h / 2) - yOffset) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 1 + ' ' + (cX + (w / 2)) + ' ' + (cY + (h / 2) - yOffset) + '\\n'\r\n      /*\r\n      retPath.arc(cX - (w / 4), cY - (h / 2), radius, Math.PI / 2 + (arcAngle / 2), Math.PI / 2 - (arcAngle / 2), true)\r\n      retPath.arc(cX + (w / 4), cY + (h / 2) - yOffset * 2 + radius, radius, Math.PI * 3 / 2 - (arcAngle / 2), Math.PI * 3 / 2 + (arcAngle / 2), false)\r\n      */\r\n      // upper side\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY - (h / 2) + yOffset) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 0 + ' ' + (cX) + ' ' + (cY - (h / 2) + yOffset) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 1 + ' ' + (cX - (w / 2)) + ' ' + (cY - (h / 2) + yOffset) + '\\n'\r\n      /*\r\n      retPath.arc(cX + (w / 4), cY + (h / 2) - yOffset * 2 + radius - (h - yOffset), radius, Math.PI * 3 / 2 + (arcAngle / 2), Math.PI * 3 / 2 - (arcAngle / 2), true)\r\n      retPath.arc(cX - (w / 4), cY - (h / 2) - (h - yOffset), radius, Math.PI / 2 - (arcAngle / 2), Math.PI / 2 + (arcAngle / 2), false)\r\n      */\r\n      // ending block\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY - (h / 2) + yOffset) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      retPath.lineTo(cX - (w / 2), cY - (h / 2) + yOffset)\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const arcOffset = block.sizeY * (1 - Math.cos(Math.asin(block.sizeX / 4 / block.sizeY)))\r\n      const w = block.sizeX\r\n      const h = block.sizeY - arcOffset * 4\r\n      const t = block.centerY - block.sizeY / 2 + arcOffset * 2\r\n      const l = block.centerX - block.sizeX / 2 + arcOffset\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_DISPLAY]: {\r\n    img: 'Display',\r\n    description: 'Дисплей',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const radius = h\r\n      // right end of lower arc (also start point)\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX + (w / 2) - h) + ', ' + (cY + (h / 2)) + '\\n'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX + (w / 2) - h, cY + (h / 2))\r\n      */\r\n      // drawing left side arcs\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 1 + ' ' + (cX - (w / 2)) + ' ' + (cY) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 1 + ' ' + (cX + (w / 2) - h) + ' ' + (cY - (h / 2)) + '\\n'\r\n      /*\r\n      // coords of chorde to a center of left side (intersection of arcs)\r\n      const sideChordeX = h - w\r\n      const sideChordeY = (-1) * (h / 2)\r\n      const sideChordeLength = Math.sqrt(sideChordeX * sideChordeX + sideChordeY * sideChordeY)\r\n      // angle of sideArc\r\n      const sideArcAngle = Math.asin((sideChordeLength / 2) / radius) * 2\r\n      // distance from chorde to center of arc\r\n      const chordeToCenter = radius * Math.cos(sideArcAngle / 2)\r\n      // coords to center of chorde\r\n      const chordeCenterX = sideChordeX / 2\r\n      const chordeCenterY = sideChordeY / 2\r\n      // coords from center of chorde to\r\n      const toCenterX = sideChordeY * (-1) / sideChordeLength * chordeToCenter\r\n      const toCenter1Y = sideChordeX * (1) / sideChordeLength * chordeToCenter\r\n      // coords of centers of 2 side arcs\r\n      const centerX = cX - (w / 2) - chordeCenterX + toCenterX\r\n      const center1Y = cY + (h / 2) + chordeCenterY + toCenter1Y\r\n      const center2Y = 2 * cY - center1Y\r\n      // determining an angle to draw arcs\r\n      const angleToCenterOfArc = Math.atan(sideChordeY / sideChordeX)\r\n      // for lower arc(arc1): go clockwise from PI / 2\r\n      // for arc2: go counter-clockwise from PI * 3 / 2\r\n      retPath.arc(centerX, center1Y, radius, Math.PI * 1 / 2 + angleToCenterOfArc - (sideArcAngle / 2), Math.PI * 1 / 2 + angleToCenterOfArc + (sideArcAngle / 2))\r\n      retPath.arc(centerX, center2Y, radius, Math.PI * 3 / 2 - angleToCenterOfArc - (sideArcAngle / 2), Math.PI * 3 / 2 - angleToCenterOfArc + (sideArcAngle / 2))\r\n      */\r\n      // rightside arc and the rest of the block\r\n      const arcAngle = Math.asin((h / 2) / radius) * 2\r\n      const xOffset = radius * (1 - Math.cos(arcAngle / 2))\r\n      retPath += 'L ' + (cX + (w / 2) - xOffset) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'A ' + radius + ' ' + radius + ' ' + 0 + ' ' + 0 + ' ' + 1 + ' ' + (cX + (w / 2) - xOffset) + ' ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2) - h) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      retPath.lineTo(cX + (w / 2) - xOffset, cY - (h / 2))\r\n      retPath.arc(cX + (w / 2) - radius, cY, radius, 0 - (arcAngle / 2), 0 + (arcAngle / 2))\r\n      retPath.moveTo(cX + (w / 2) - xOffset, cY + (h / 2))\r\n      retPath.lineTo(cX + (w / 2) - h, cY + (h / 2))\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const rightArcOffset = block.sizeY * (1 - Math.cos(1 / 2))\r\n      const leftArcsOffset = block.sizeX - block.sizeY\r\n      const w = block.sizeX - rightArcOffset - leftArcsOffset\r\n      const h = block.sizeY\r\n      const t = block.centerY - block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2 + leftArcsOffset\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_PROCESS]: {\r\n    img: 'Process',\r\n    description: 'Процесс',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - w / 2, cY - h / 2)\r\n      retPath.lineTo(cX - w / 2, cY + h / 2)\r\n      retPath.lineTo(cX + w / 2, cY + h / 2)\r\n      retPath.lineTo(cX + w / 2, cY - h / 2)\r\n      retPath.lineTo(cX - w / 2, cY - h / 2)\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const t = block.centerY - block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_DEFINED_PROCESS]: {\r\n    img: 'DefProcess',\r\n    description: 'Предопределенный процесс',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const offset = 0.15 * w\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'M ' + (cX - (w / 2) + offset) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2) + offset) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'M ' + (cX + (w / 2) - offset) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2) - offset) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - w / 2, cY - h / 2)\r\n      retPath.lineTo(cX - w / 2, cY + h / 2)\r\n      retPath.lineTo(cX + w / 2, cY + h / 2)\r\n      retPath.lineTo(cX + w / 2, cY - h / 2)\r\n      retPath.lineTo(cX - w / 2, cY - h / 2)\r\n      retPath.moveTo(cX - w / 2 + offset, cY - h / 2)\r\n      retPath.lineTo(cX - w / 2 + offset, cY + h / 2)\r\n      retPath.moveTo(cX + w / 2 - offset, cY - h / 2)\r\n      retPath.lineTo(cX + w / 2 - offset, cY + h / 2)\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const offset = block.sizeX * 0.15\r\n      const w = block.sizeX - offset * 2\r\n      const h = block.sizeY\r\n      const t = block.centerY - block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2 + offset\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_MANUAL_OPERATION]: {\r\n    img: 'ManualOperation',\r\n    description: 'Ручная операция',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const slopeSideOffest = (w - h) / 2\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2) - slopeSideOffest) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2) + slopeSideOffest) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2), cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2), cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2) - slopeSideOffest, cY + (h / 2))\r\n      retPath.lineTo(cX - (w / 2) + slopeSideOffest, cY + (h / 2))\r\n      retPath.lineTo(cX - (w / 2), cY - (h / 2))\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const slopeOffset = (block.sizeX - block.sizeY) / 2\r\n      const w = block.sizeX - slopeOffset * 2\r\n      const h = block.sizeY\r\n      const t = block.centerY - block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2 + slopeOffset\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_PREPARATION]: {\r\n    img: 'Prep',\r\n    description: 'Подготовка',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      const slopeSideOffest = (w - h) / 2\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2) + slopeSideOffest) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2) - slopeSideOffest) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2) - slopeSideOffest) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2) + slopeSideOffest) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2) + slopeSideOffest) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2) + slopeSideOffest, cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2) - slopeSideOffest, cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2), cY)\r\n      retPath.lineTo(cX + (w / 2) - slopeSideOffest, cY + (h / 2))\r\n      retPath.lineTo(cX - (w / 2) + slopeSideOffest, cY + (h / 2))\r\n      retPath.lineTo(cX - (w / 2), cY)\r\n      retPath.lineTo(cX - (w / 2) + slopeSideOffest, cY - (h / 2))\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const slopeOffset = (block.sizeX - block.sizeY) / 2\r\n      const w = block.sizeX - slopeOffset * 2\r\n      const h = block.sizeY\r\n      const t = block.centerY - block.sizeY / 2\r\n      const l = block.centerX - block.sizeX / 2 + slopeOffset\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  },\r\n  [Instruments.BLOCK_DECISION]: {\r\n    img: 'Decision',\r\n    description: 'Решение',\r\n    getPath (block) {\r\n      const w = block.sizeX\r\n      const h = block.sizeY\r\n      const cX = block.centerX\r\n      const cY = block.centerY\r\n      let retPath = ''\r\n      retPath += 'M ' + (cX - (w / 2)) + ', ' + (cY) + '\\n'\r\n      retPath += 'L ' + (cX) + ', ' + (cY - (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX + (w / 2)) + ', ' + (cY) + '\\n'\r\n      retPath += 'L ' + (cX) + ', ' + (cY + (h / 2)) + '\\n'\r\n      retPath += 'L ' + (cX - (w / 2)) + ', ' + (cY) + '\\n'\r\n      retPath += 'Z'\r\n      /*\r\n      const retPath = new Path2D()\r\n      retPath.moveTo(cX - (w / 2), cY)\r\n      retPath.lineTo(cX, cY - (h / 2))\r\n      retPath.lineTo(cX + (w / 2), cY)\r\n      retPath.lineTo(cX, cY + (h / 2))\r\n      retPath.lineTo(cX - (w / 2), cY)\r\n      retPath.closePath()\r\n      */\r\n      return retPath\r\n    },\r\n    getSectorVector (block, closePoint, farPoint) {\r\n      return getVectorByBoundingBox(block, closePoint, farPoint)\r\n    },\r\n    getTextArea (block) {\r\n      const w = block.sizeX / 2\r\n      const h = block.sizeY / 2\r\n      const t = block.centerY - block.sizeY / 4\r\n      const l = block.centerX - block.sizeX / 4\r\n      return {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h\r\n      }\r\n    }\r\n  }\r\n}\r\nconst BlocksCount = 15\r\n\r\nfunction isValidBlock (blockIndex) {\r\n  // console.log(blockIndex)\r\n  // console.log(Blocks[0])\r\n  let retVal = false\r\n  for (const block in Blocks) {\r\n    if ((block <= blockIndex) && (block >= blockIndex)) {\r\n      retVal = true\r\n    }\r\n  }\r\n  // console.log(retVal)\r\n  return retVal\r\n}\r\n\r\nconst OperationStep = Object.freeze({\r\n  SELECT_NONE_SELECTED: 0,\r\n  SELECT_BLOCK_SELECTED: 1,\r\n  SELECT_ARROW_SEGMENT_SELECTED: 2,\r\n  MOVE_BLOCK_IS_BEING_MOVED: 3,\r\n  MOVE_ARROW_SEGMENT_IS_BEING_MOVED: 4,\r\n  ARROWPLACING_STARTPOINT_DEFINED: 5\r\n})\r\n\r\nconst STANDARD_BLOCK_WIDTH = 180\r\n\r\nconst STANDARD_BLOCK_HEIGHT_MULTIPLYER = 2 / 3\r\n\r\nconst EPS = 1E-06\r\n\r\n// const XOFFSET = 1.2\r\nlet XOFFSET = 1\r\n\r\nfunction setXOFFSET (newX) {\r\n  XOFFSET = newX\r\n}\r\n\r\nexport { Instruments, Blocks, BlocksCount, OperationStep, STANDARD_BLOCK_WIDTH, STANDARD_BLOCK_HEIGHT_MULTIPLYER, EPS, XOFFSET, isValidInstrument, isValidBlock, setXOFFSET }\r\n","<style scoped>\r\n  v-btn img {\r\n    width: 30px;\r\n  }\r\n</style>\r\n\r\n<template>\r\n  <v-navigation-drawer\r\n  app\r\n  location=\"bottom\"\r\n  >\r\n    <v-list>\r\n      <v-list-item>\r\n        <v-list-item-content>\r\n          <v-list-item-title>Блоки</v-list-item-title>\r\n          <v-btn-toggle v-model=\"blocksSelection\" exclusive>\r\n            <div id = \"wrapper_basic\" width='100%'>\r\n              <v-tooltip  v-for = \"i in ((BlocksCount))\" :key=\"i\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                  <v-btn v-bind=\"attrs\" v-on=\"on\" v-on:click=\"selectionChanged(i - 1)\">\r\n                    <img :src=\"require('../assets/img' + Blocks[i - 1].img + 'Small.svg')\" width=\"30px\">\r\n                  </v-btn>\r\n                </template>\r\n                <span> {{Blocks[i - 1].description}} </span>\r\n              </v-tooltip>\r\n            </div>\r\n          </v-btn-toggle>\r\n        </v-list-item-content>\r\n      </v-list-item>\r\n      <v-list-item>\r\n        <v-list-item-title>Инструменты</v-list-item-title>\r\n        <v-tooltip>\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-btn v-bind=\"attrs\" v-on=\"on\" v-on:click=\" properDelete()\">\r\n              <v-icon>mdi-trash-can</v-icon>\r\n            </v-btn>\r\n          </template>\r\n          <span> Очистить схему </span>\r\n        </v-tooltip>\r\n        <v-btn-toggle v-model=\"parametersSelection\" exclusive>\r\n          <v-tooltip>\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-btn v-bind=\"attrs\" v-on=\"on\" v-on:click=\"selectSelect()\">\r\n                <v-icon>mdi-select</v-icon>\r\n              </v-btn>\r\n            </template>\r\n            <span> Выбор элемента </span>\r\n          </v-tooltip>\r\n          <v-tooltip>\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-btn v-bind=\"attrs\" v-on=\"on\" v-on:click=\"selectArrow()\">\r\n                <v-icon>mdi-ray-start-arrow</v-icon>\r\n              </v-btn>\r\n            </template>\r\n            <span> Стрелка между блоками </span>\r\n          </v-tooltip>\r\n        </v-btn-toggle>\r\n      </v-list-item>\r\n      <v-list-item>\r\n        <v-text-field label=\"Текст элемента\" v-model=\"text\"></v-text-field>\r\n        <v-tooltip>\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-btn v-bind=\"attrs\" v-on=\"on\" v-on:click=\"confirmTextChange()\">Подтвердить</v-btn>\r\n          </template>\r\n        </v-tooltip>\r\n      </v-list-item>\r\n      <v-list-item>\r\n        <v-text-field label=\"имя загружаемой схемы\" v-model=\"loadSchemaName\"></v-text-field>\r\n      </v-list-item>\r\n      <v-list-item>\r\n        <v-tooltip>\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-btn v-bind=\"attrs\" v-on=\"on\" v-on:click=\"getTheSchema()\">Загрузить</v-btn>\r\n          </template>\r\n        </v-tooltip>\r\n      </v-list-item>\r\n      <v-list-item>\r\n        <v-text-field label=\"Название сохранемой схемы\" v-model=\"saveSchemaName\"></v-text-field>\r\n      </v-list-item>\r\n      <v-list-item>\r\n        <v-tooltip>\r\n          <template v-slot:activator=\"{ on, attrs }\">\r\n            <v-btn v-bind=\"attrs\" v-on=\"on\" v-on:click=\"loadTheSchema()\">Сохранить</v-btn>\r\n          </template>\r\n        </v-tooltip>\r\n      </v-list-item>\r\n    </v-list>\r\n  </v-navigation-drawer>\r\n</template>\r\n<script>\r\nimport { Blocks, BlocksCount, Instruments } from '../plugins/constants'\r\nimport { copyBlock } from '../plugins/functions'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport { eventBus } from '../main.js'\r\nexport default {\r\n  data: () => {\r\n    return {\r\n      Blocks,\r\n      BlocksCount,\r\n      blocksSelection: 0,\r\n      parametersSelection: -1,\r\n      text: '',\r\n      saveSchemaName: '',\r\n      loadSchemaName: ''\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['changeTool', 'clearSchema', 'changeBlockText', 'saveSchema', 'loadSchema']),\r\n    selectionChanged (i) {\r\n      this.changeTool(i)\r\n      this.parametersSelection = -1\r\n      // console.log(this.$store.getters.getTool)\r\n    },\r\n    selectSelect () {\r\n      this.changeTool(Instruments.PARAMETERS_SELECT)\r\n      this.blocksSelection = -1\r\n    },\r\n    selectArrow () {\r\n      this.changeTool(Instruments.ARROW_DEFAULT)\r\n      this.blocksSelection = -1\r\n    },\r\n    properDelete () {\r\n      this.clearSchema()\r\n    },\r\n    confirmTextChange () {\r\n      const blockToSend = copyBlock(this.getBlocks.find(block => block.id === this.getSelectedBlockID))\r\n      blockToSend.text = this.text\r\n      this.changeBlockText(blockToSend)\r\n    },\r\n    getTheSchema () {\r\n      this.loadSchema(this.loadSchemaName)\r\n    },\r\n    loadTheSchema () {\r\n      this.saveSchema(this.saveSchemaName)\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['getBlocks', 'getSelectedBlockID'])\r\n  },\r\n  created () {\r\n    eventBus.$on('selectionChanged', () => {\r\n      if (this.getSelectedBlockID != null) {\r\n        this.text = this.getBlocks.find(block => block.id === this.getSelectedBlockID).text\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ToolPanel.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ToolPanel.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ToolPanel.vue?vue&type=template&id=5221d9cc&scoped=true\"\nimport script from \"./ToolPanel.vue?vue&type=script&lang=js\"\nexport * from \"./ToolPanel.vue?vue&type=script&lang=js\"\nimport style0 from \"./ToolPanel.vue?vue&type=style&index=0&id=5221d9cc&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5221d9cc\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-card',{staticStyle:{\"position\":\"absolute\",\"display\":\"absolute\"},attrs:{\"id\":\"canvasContiner\",\"height\":\"6000px\",\"width\":\"6000px\"}},[_c('v-card',{staticStyle:{\"display\":\"none\"}},_vm._l(((_vm.BlocksCount)),function(i){return _c('img',{key:i,attrs:{\"src\":require('../assets/img' + _vm.Blocks[i - 1].img + 'Big.svg'),\"id\":_vm.Blocks[i-1].img,\"width\":\"STANDARD_BLOCK_WIDTH\",\"height\":\"STANDARD_BLOCK_WIDTH * STANDARD_BLOCK_HEIGHT_MULTIPLYER\"}})}),0),_c('canvas',{staticStyle:{\"position\":\"absolute\",\"z-index\":\"0\"},attrs:{\"id\":\"flowchart\"}},[_vm._v(\"Обновите браузер \")]),_c('canvas',{staticStyle:{\"position\":\"absolute\",\"z-index\":\"1\"},attrs:{\"id\":\"toolLayer\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-card id = 'canvasContiner' height='6000px' width='6000px' style ='position: absolute; display: absolute;'>\n    <v-card style = 'display: none'>\n      <img v-for = \"i in (BlocksCount)\" :key=\"i\" :src = \"require('../assets/img' + Blocks[i - 1].img + 'Big.svg')\" :id = \"Blocks[i-1].img\" width = \"STANDARD_BLOCK_WIDTH\"\n      height = \"STANDARD_BLOCK_WIDTH * STANDARD_BLOCK_HEIGHT_MULTIPLYER\">\n    </v-card>\n    <canvas id='flowchart' style='position: absolute; z-index: 0'>Обновите браузер\n    </canvas>\n    <canvas id='toolLayer' style='position: absolute; z-index: 1'>\n    </canvas>\n  </v-card>\n</template>\n<script>\nimport { Instruments, Blocks, BlocksCount, OperationStep, STANDARD_BLOCK_WIDTH, STANDARD_BLOCK_HEIGHT_MULTIPLYER, XOFFSET, isValidBlock, setXOFFSET } from '../plugins/constants'\nimport { constructBlock, copyBlock, constructArrow, blockAt, constructStraightArrow, constructRectangularArrow, getIntersections, actualIntersection, getEdgePointCoords, addEdgePoints, adjustArrowSegmentForNewCoords, assembleArrowPointsForMovingSegment, getSegmemtSelectPath } from '../plugins/functions'\nimport { mapGetters, mapActions } from 'vuex'\nimport { eventBus } from '../main.js'\nif (BlocksCount > BlocksCount + 1) {\n  constructArrow()\n}\n// import { ShapeInfo, Intersection } from 'kld-intersections'\nexport default {\n  data: () => {\n    return {\n      Blocks,\n      BlocksCount,\n      STANDARD_BLOCK_WIDTH,\n      STANDARD_BLOCK_HEIGHT_MULTIPLYER\n    }\n  },\n  methods: {\n    drawSelectionFigure (x, y, context, doFill = false) {\n      const sSize = 5\n      const sOffset = 2\n      context.strokestyle = 'black'\n      context.globalAlpha = 1\n      if (doFill) {\n        context.fillRect(x - sOffset, y - sOffset, sSize, sSize)\n      } else {\n        context.strokeRect(x - sOffset, y - sOffset, sSize, sSize)\n      }\n      context.globalAlpha = 0.5\n    },\n    drawBoxSelection (block) {\n      this.clearToolLayer()\n      // данный тип отображения происходит только в верхнем слое\n      const elem = document.getElementById('toolLayer')\n      const context = elem.getContext('2d')\n      // порядок обхода - с СЗ угла по часовой\n      const leftCoord = block.centerX - block.sizeX / 2\n      const centerXCoord = block.centerX\n      const rightCoord = block.centerX + block.sizeX / 2\n      const upperCoord = block.centerY - block.sizeY / 2\n      const centerYCoord = block.centerY\n      const lowerCoord = block.centerY + block.sizeY / 2\n      const selectionCoordsX = [leftCoord, centerXCoord, rightCoord, rightCoord, rightCoord, centerXCoord, leftCoord, leftCoord]\n      const selectionCoordsY = [upperCoord, upperCoord, upperCoord, centerYCoord, lowerCoord, lowerCoord, lowerCoord, centerYCoord]\n      for (let i = 0; i < 8; i++) {\n        this.drawSelectionFigure(selectionCoordsX[i], selectionCoordsY[i], context)\n      }\n    },\n    drawArrowSelection (arrow, pointIndex) {\n      this.clearToolLayer()\n      // console.log('drawing selection of arrow')\n      const elem = document.getElementById('toolLayer')\n      const context = elem.getContext('2d')\n      const arrowPoints = this.getArrowPoints(arrow)\n      addEdgePoints(context, arrowPoints, arrow, this.getBlocks)\n      for (let i = 0; i < arrowPoints.length; i++) {\n        this.drawSelectionFigure(arrowPoints[i].x, arrowPoints[i].y, context, false)\n        if (i === pointIndex) {\n          this.drawSelectionFigure((arrowPoints[i].x + arrowPoints[i + 1].x) / 2, (arrowPoints[i].y + arrowPoints[i + 1].y) / 2, context, true)\n        }\n      }\n    },\n    // убирает все с верхнего слоя, служит для очистки временной графической информации\n    clearToolLayer () {\n      const elem = document.getElementById('toolLayer')\n      const context = elem.getContext('2d')\n      const elems = document.getElementsByClassName('toolLayer')\n      for (let i = 0; i < elems.length; i++) {\n        elems[i].remove()\n      }\n      context.clearRect(0, 0, elem.width, elem.height)\n    },\n    // единый обработчик действий пользователя, надеюсь с ним не будет проблем\n    // служит контейнером для выполнения операций и общей логики\n    userInputHandler (event) {\n      // в данный момент просто является контейнером для запуска обработчиков операций\n      this.userOperationPlacingNewBlock(event)\n      this.userOperationSelectingBlockOrArrowSegment(event)\n      this.userOperationMovingBlock(event)\n      this.userOperationPlacingNewArrow(event)\n      this.userOperationMovingArrowSegment(event)\n    },\n    // функция обработки действий выполняемых при вставке нового блока\n    userOperationPlacingNewBlock (event) {\n      // проверка на то, что выбранный инструмент - блок (создание блока)\n      if (isValidBlock(this.getTool) === true) {\n        // при нажатии требуется добавить блок, убрать тени(если они имеются) и закончить операцию\n        if (event.type === 'click') {\n          this.placeNewBlock(event.offsetX * XOFFSET, event.offsetY, this.getTool)\n          this.clearToolLayer()\n          this.changeTool(Instruments.UNSELECT_TOOLS)\n          // console.log('placed block at:x=' + event.offsetX * XOFFSET + ', y=' + event.offsetY)\n        }\n        // при перемещении мыши по холсту надо отображать тень\n        if (event.type === 'mouseenter' || event.type === 'mousemove') {\n          this.clearToolLayer()\n          const elem = document.getElementById('toolLayer')\n          const context = elem.getContext('2d')\n          const shadeBlock = constructBlock(event.offsetX * XOFFSET, event.offsetY, this.getTool)\n          this.drawBlock(context, shadeBlock)\n          // const rect = event.currentTarget.getBoundingClientRect()\n          // const oX = event.clientX - rect.left\n          // const oY = event.clientY - rect.top\n          // context.strokeRect(event.offsetX * XOFFSET - shadeBlock.sizeX / 2, event.offsetY - shadeBlock.sizeY / 2, shadeBlock.sizeX, shadeBlock.sizeY)\n        }\n        // при выходе мыши с холста надо только убрать тень блока\n        if (event.type === 'mouseleave') {\n          this.clearToolLayer()\n        }\n      }\n    },\n    // обработка действий при выборе блока или сегмента стрелки\n    userOperationSelectingBlockOrArrowSegment (event) {\n      // проверка на то, что инструмент - выбор\n      if (this.getTool === Instruments.PARAMETERS_SELECT) {\n        if (event.type === 'click') {\n          const elem = document.getElementById('flowchart')\n          const context = elem.getContext('2d')\n          const blocks = this.getBlocks\n          const mousePoint = { x: event.offsetX * XOFFSET, y: event.offsetY }\n          // сначала проверяем, не выбирается ли какой-либо блок\n          const blockToSelect = blockAt(context, blocks, mousePoint.x, mousePoint.y)\n          // если блок успешно выбран, то надо указать в хранилище выбранный блок, затем сразу отрисовывать выбор блока\n          if (blockToSelect != null) {\n            // this.changeCurrentStep (OperationStep.SELECT_BLOCK_SELECTED)\n            // this.changeSelectedBlockID (blockToSelect.id)\n            // console.log('PREselected block' + blockToSelect)\n            this.selectBlock(blockToSelect.id)\n            this.drawBoxSelection(blockToSelect)\n            this.changeTool(Instruments.UNSELECT_TOOLS)\n            // console.log(blockToSelect)\n            // console.log('selected block ' + this.getSelectedBlockID)\n          }\n          // теперь пробуем вариант с выбором сегмента стрелки\n          // console.log('failed to select any block. Selecting an arrow')\n          let arrowToSelect = null\n          let arrowPointIndex = null\n          // для просмотра сегментов нужно пройтись по всем стрелкам\n          const arrows = this.getArrows\n          arrows.forEach(arrow => {\n            const arrowPoints = this.getArrowPoints(arrow)\n            addEdgePoints(context, arrowPoints, arrow, blocks)\n            // итерируем по всем сегментам, индекс - индекс начала сегмента в расширенном масииве точек стрелки\n            let i = 0\n            while ((i < arrowPoints.length - 1) && arrowToSelect === null) {\n              const segmentStart = arrowPoints[i]\n              const segmentEnd = arrowPoints[i + 1]\n              // выбор производится проверкой попадания курсора мыши в прределах определенного расстояния до сегмента стрелки\n              const svgPath = getSegmemtSelectPath(segmentStart, segmentEnd)\n              // console.log('considering arrow with id:' + arrow.id + ' and points of coords x: ' + segmentStart.x + ', y: ' + segmentStart.y + '; x: ' + segmentEnd.x + ', y: ' + segmentEnd.y)\n              // console.log('mousecoords x: ' + mousePoint.x + ', y: ' + mousePoint.y)\n              // context.stroke(new Path2D(svgPath))\n              if (context.isPointInPath(new Path2D(svgPath), mousePoint.x, mousePoint.y)) {\n                // надо запомнить ИД стрелки и индекс итератора (т.е. порядок точки в расширенном массиве)\n                arrowToSelect = arrow\n                arrowPointIndex = i\n              }\n              i++\n            }\n          })\n          if (arrowToSelect != null) {\n            this.selectArrow({ arrowId: arrowToSelect.id, pointIndex: arrowPointIndex })\n            this.drawArrowSelection(arrowToSelect, arrowPointIndex)\n            this.changeTool(Instruments.UNSELECT_TOOLS)\n          }\n        }\n      }\n    },\n    // обработка перемещения блока мышью\n    userOperationMovingBlock (event) {\n      // console.log(this.getTool)\n      // console.log(this.getCurrentStep)\n      // console.log(this.getSelectedBlockID)\n      if (this.getTool === Instruments.UNSELECT_TOOLS && this.getCurrentStep === OperationStep.SELECT_BLOCK_SELECTED && this.getSelectedBlockID != null) {\n        if (event.type === 'mousedown') {\n          this.changeCurrentStep(OperationStep.MOVE_BLOCK_IS_BEING_MOVED)\n          this.clearToolLayer()\n          const selectedBlock = this.getBlocks.find(block => block.id === this.getSelectedBlockID)\n          this.drawBoxSelection(selectedBlock)\n          const elem = document.getElementById('toolLayer')\n          const context = elem.getContext('2d')\n          const shadeBlock = copyBlock(selectedBlock)\n          shadeBlock.centerX = event.offsetX * XOFFSET\n          shadeBlock.centerY = event.offsetYT\n          this.drawBlock(context, shadeBlock)\n        }\n      }\n      if (this.getTool === Instruments.UNSELECT_TOOLS && this.getCurrentStep === OperationStep.MOVE_BLOCK_IS_BEING_MOVED && this.getSelectedBlockID != null) {\n        if (event.type === 'mousemove') {\n          this.clearToolLayer()\n          const selectedBlock = this.getBlocks.find(block => block.id === this.getSelectedBlockID)\n          this.drawBoxSelection(selectedBlock)\n          const elem = document.getElementById('toolLayer')\n          const context = elem.getContext('2d')\n          const shadeBlock = copyBlock(selectedBlock)\n          shadeBlock.centerX = event.offsetX * XOFFSET\n          shadeBlock.centerY = event.offsetYT\n          this.drawBlock(context, shadeBlock)\n        }\n        if (event.type === 'mouseleave') {\n          this.changeCurrentStep(OperationStep.SELECT_NONE_SELECTED)\n          this.clearToolLayer()\n          this.unselect()\n        }\n        if (event.type === 'mouseup') {\n          this.clearToolLayer()\n          // console.log('going up')\n          const moveInfo = {\n            id: this.getSelectedBlockID,\n            X: event.offsetX * XOFFSET,\n            Y: event.offsetY\n          }\n          // console.log(moveInfo)\n          this.moveBlock(moveInfo)\n          this.unselect()\n        }\n      }\n    },\n    // перемещение сегмента стрелки\n    userOperationMovingArrowSegment (event) {\n      // expect (-1, 2, NOT NULL)\n      // console.log('' + this.getTool + ', ' + this.getCurrentStep + ', ' + this.getSelectedArrowID)\n      if (this.getTool === Instruments.UNSELECT_TOOLS && this.getCurrentStep === OperationStep.SELECT_ARROW_SEGMENT_SELECTED && this.getSelectedArrowID != null) {\n        // console.log('we\\'re moving segment!')\n        const elem = document.getElementById('toolLayer')\n        const context = elem.getContext('2d')\n        if (event.type === 'mousedown') {\n          this.clearToolLayer()\n          // TODO: перевести состояние в перемещение сегмента, сконструировать НОВУЮ стрелку с учетом сдвига координат мыши и отобразить её\n          const movingArrow = this.getArrows.find(arrow => arrow.id === this.getSelectedArrowID)\n          // console.log(movingArrow)\n          let arrowPoints = this.getArrowPoints(movingArrow)\n          const extendedArrowPoints = this.getArrowPoints(movingArrow)\n          addEdgePoints(context, extendedArrowPoints, movingArrow, this.getBlocks)\n          // надо проверить что промежуточные точки вообще есть\n          if (arrowPoints.length > 0) {\n            const startBlock = this.getBlocks.find(block => block.id === movingArrow.idStart)\n            const endBlock = this.getBlocks.find(block => block.id === movingArrow.idEnd)\n            const moveRes = adjustArrowSegmentForNewCoords(context, movingArrow, this.getSelectedSegmentPointIndex, startBlock, endBlock, extendedArrowPoints, event.offsetX * XOFFSET, event.offsetY)\n            // разбор результатов, в частоности их отображение на экране\n            // console.log(moveRes)\n            arrowPoints = assembleArrowPointsForMovingSegment(moveRes, arrowPoints, this.getBlocks, context)\n            // console.log(movingArrow)\n            // console.log(moveRes.arrow)\n            this.drawArrow(context, moveRes.arrow, arrowPoints)\n            this.changeCurrentStep(OperationStep.MOVE_ARROW_SEGMENT_IS_BEING_MOVED)\n          } else {\n            // сегменты прямых стрелок не перемещаются\n            this.changeCurrentStep(OperationStep.SELECT_NONE_SELECTED)\n            this.unselect()\n          }\n        }\n      }\n      if (this.getTool === Instruments.UNSELECT_TOOLS && this.getCurrentStep === OperationStep.MOVE_ARROW_SEGMENT_IS_BEING_MOVED && this.getSelectedArrowID != null) {\n        const elem = document.getElementById('toolLayer')\n        const context = elem.getContext('2d')\n        if (event.type === 'mousemove') {\n          // TODO: перемести сегмент по координатам мыши и отобрази(снеси предварительно слой\n          this.clearToolLayer()\n          // TODO: перевести состояние в перемещение сегмента, сконструировать НОВУЮ стрелку с учетом сдвига координат мыши и отобразить её\n          const movingArrow = this.getArrows.find(arrow => arrow.id === this.getSelectedArrowID)\n          let arrowPoints = this.getArrowPoints(movingArrow)\n          const extendedArrowPoints = this.getArrowPoints(movingArrow)\n          addEdgePoints(context, extendedArrowPoints, movingArrow, this.getBlocks)\n          const startBlock = this.getBlocks.find(block => block.id === movingArrow.idStart)\n          const endBlock = this.getBlocks.find(block => block.id === movingArrow.idEnd)\n          const moveRes = adjustArrowSegmentForNewCoords(context, movingArrow, this.getSelectedSegmentPointIndex, startBlock, endBlock, extendedArrowPoints, event.offsetX * XOFFSET, event.offsetY)\n          // разбор результатов, в частоности их отображение на экране\n          arrowPoints = assembleArrowPointsForMovingSegment(moveRes, arrowPoints, this.getBlocks, context)\n          // console.log(arrowPoints)\n          // console.log(movingArrow)\n          // console.log(moveRes.arrow)\n          this.drawArrow(context, moveRes.arrow, arrowPoints)\n        }\n        if (event.type === 'mouseleave') {\n          // здесь все как надо, по сути это отмена операции\n          this.changeCurrentStep(OperationStep.SELECT_NONE_SELECTED)\n          this.clearToolLayer()\n          this.unselect()\n        }\n        if (event.type === 'mouseup') {\n          // TODO: так, тут надо отобразить изменения в стрелке - они будут заключаться в собственно изменении стрелки и мб иассива точек\n          const movingArrow = this.getArrows.find(arrow => arrow.id === this.getSelectedArrowID)\n          const arrowPoints = this.getArrowPoints(movingArrow)\n          const extendedArrowPoints = this.getArrowPoints(movingArrow)\n          addEdgePoints(context, extendedArrowPoints, movingArrow, this.getBlocks)\n          // надо проверить что промежуточные точки вообще есть\n          if (arrowPoints.length > 0) {\n            const startBlock = this.getBlocks.find(block => block.id === movingArrow.idStart)\n            const endBlock = this.getBlocks.find(block => block.id === movingArrow.idEnd)\n            const moveRes = adjustArrowSegmentForNewCoords(context, movingArrow, this.getSelectedSegmentPointIndex, startBlock, endBlock, extendedArrowPoints, event.offsetX * XOFFSET, event.offsetY)\n            this.clearToolLayer()\n            this.moveArrowSegment(moveRes)\n          }\n          this.unselect()\n        }\n      }\n    },\n    userOperationPlacingNewArrow (event) {\n      if (this.getTool === Instruments.ARROW_DEFAULT && this.getCurrentStep === OperationStep.SELECT_NONE_SELECTED) {\n        // console.log('catched event')\n        if (event.type === 'mousedown') {\n          // console.log('startedarrow')\n          this.clearToolLayer()\n          const elem = document.getElementById('flowchart')\n          const context = elem.getContext('2d')\n          const blockToSelect = blockAt(context, this.getBlocks, event.offsetX * XOFFSET, event.offsetY)\n          if (blockToSelect != null) {\n            this.defineStartPoint({ x: event.offsetX * XOFFSET, y: event.offsetY })\n          } else {\n            this.unselect()\n          }\n        }\n      }\n      if (this.getTool === Instruments.ARROW_DEFAULT && this.getCurrentStep === OperationStep.ARROWPLACING_STARTPOINT_DEFINED) {\n        if (event.type === 'mouseleave') {\n          this.clearToolLayer()\n          this.unselect()\n        } else if (event.type === 'mousemove') {\n          // console.log('moving endpoint of arrow')\n          // console.log('coords - start:x=' + this.getArrowStartPoint.x + ', y=' + this.getArrowStartPoint.y + '; end:x=' + event.offsetX * XOFFSET + ', y=' + event.offsetY)\n          this.clearToolLayer()\n          const elem = document.getElementById('flowchart')\n          const context = elem.getContext('2d')\n          const startBlock = blockAt(context, this.getBlocks, this.getArrowStartPoint.x, this.getArrowStartPoint.y)\n          let endPoint = { x: event.offsetX * XOFFSET, y: event.offsetY }\n          const endBlock = blockAt(context, this.getBlocks, endPoint.x, endPoint.y)\n          const arrow = constructStraightArrow(context, this.getArrowStartPoint, startBlock, endPoint, endBlock)\n          if (arrow != null) {\n            const startPoint = getEdgePointCoords(context, startBlock, arrow.angleStart)\n            if (endBlock != null) {\n              endPoint = actualIntersection(context, endBlock, getIntersections(endBlock, startPoint.x, startPoint.y, endPoint.x, endPoint.y))\n            }\n            // console.log(arrow.angleStart)\n            const elem2 = document.getElementById('toolLayer')\n            const context2 = elem2.getContext('2d')\n            this.drawArrowSegment(context2, arrow, startPoint.x, startPoint.y, endPoint.x, endPoint.y)\n          }\n        } else if (event.type === 'mouseup') {\n          this.clearToolLayer()\n          const elem = document.getElementById('flowchart')\n          const context = elem.getContext('2d')\n          const startPoint = { x: this.getArrowStartPoint.x, y: this.getArrowStartPoint.y }\n          const startBlock = blockAt(context, this.getBlocks, this.getArrowStartPoint.x, this.getArrowStartPoint.y)\n          const endPoint = { x: event.offsetX * XOFFSET, y: event.offsetY }\n          const endBlock = blockAt(context, this.getBlocks, endPoint.x, endPoint.y)\n          const arrow = constructStraightArrow(context, this.getArrowStartPoint, startBlock, endPoint, endBlock)\n          if (arrow.idEnd != null) {\n            this.addArrow(arrow)\n            if (!event.altKey) {\n              const reference = this.getArrows.find(storeArrow => ((arrow.idStart === storeArrow.idStart) && (arrow.idEnd === storeArrow.idEnd) && (arrow.angleStart === storeArrow.angleStart) && (arrow.angleEnd === storeArrow.angleEnd)))\n              const startEdgePoint = getEdgePointCoords(context, startBlock, arrow.angleStart)\n              const endEdgePoint = getEdgePointCoords(context, endBlock, arrow.angleEnd)\n              const startVector = Blocks[startBlock.type].getSectorVector(startBlock, startPoint, endPoint)\n              const endVector = Blocks[endBlock.type].getSectorVector(endBlock, endPoint, startPoint)\n              // console.log(startVector)\n              const points = constructRectangularArrow(reference, startEdgePoint, endEdgePoint, startVector, endVector)\n              points.forEach(point => this.addPoint(point))\n            }\n            // console.log('result:')\n            // console.log(arrow)\n          }\n          this.unselect()\n          this.changeTool(Instruments.UNSELECT_TOOLS)\n        }\n      }\n    },\n    ...mapActions(['addBlock', 'addArrow', 'addPoint', 'changeTool', 'selectBlock', 'selectArrow', 'defineStartPoint', 'countUpGraphicsSemaphore', 'countDownGraphicsSemaphore',\n      'unselect', 'moveBlock', 'changeCurrentStep', 'moveArrowSegment']),\n    drawSchema () {\n      this.clearToolLayer()\n      const elem = document.getElementById('flowchart')\n      const context = elem.getContext('2d')\n      const elems = document.getElementsByClassName('flowchart')\n      for (let i = 0; i < elems.length; i++) {\n        elems[i].remove()\n      }\n      context.clearRect(0, 0, elem.width, elem.height)\n      // отрисовка блоков схемы\n      // console.log(this.getBlocks)\n      this.getArrows.forEach(arrow => {\n        const points = this.getArrowPoints(arrow)\n        addEdgePoints(context, points, arrow, this.getBlocks)\n        this.drawArrow(context, arrow, points)\n      })\n      this.getBlocks.forEach(block => {\n        // console.log(block)\n        this.drawBlock(context, block)\n      })\n    },\n    drawBlock (context, block) {\n      // const pic = new Image()\n      // console.log(Blocks[block.type].img)\n      /*\n      const pic = document.getElementById('' + Blocks[block.type].img)\n      const x = block.centerX - block.sizeX / 2\n      const y = block.centerY - block.sizeY / 2\n      context.drawImage(pic, x, y, block.sizeX, block.sizeY)\n      */\n      context.save()\n      context.fillStyle = 'white'\n      context.lineWidth = 3\n      // context.fill(Blocks[block.type].getPath(block))\n      // context.stroke(Blocks[block.type].getPath(block))\n      const blockPath = new Path2D(Blocks[block.type].getPath(block))\n      context.fill(blockPath)\n      context.stroke(blockPath)\n      // const intersections = Intersection.intersect(ShapeInfo.path(Blocks[block.type].getPath(block)), ShapeInfo.line([0, 0], [1000, 1000]))\n      // console.log('11111')\n      const cssInfo = Blocks[block.type].getTextArea(block)\n      // create a new div element\n      const newDiv = document.createElement('div')\n      const fontSize = Number(window.getComputedStyle(document.body).getPropertyValue('font-size').match(/\\d+/)[0])\n      newDiv.className = context.canvas.id\n      newDiv.setAttribute('style', 'top:' + (cssInfo.top + fontSize / 2) + 'px; left:' + ((cssInfo.left + fontSize / 2) / XOFFSET) + 'px; width:' + ((cssInfo.width - fontSize / 2) / XOFFSET) + 'px; height:' + (cssInfo.height - fontSize / 2) + 'px; overflow: hidden; position: absolute;')\n      // and give it some content\n      if (block.text == null) block.text = ''\n      const newContent = document.createTextNode(block.text)\n      // add the text node to the newly created div\n      newDiv.appendChild(newContent)\n      // add the newly created element and its content into the DOM\n      const currentDiv = context.canvas\n      currentDiv.parentElement.appendChild(newDiv)\n      context.restore()\n      // console.log('drawn at:' + x + ' :' + y)\n    },\n    // рисует стрелку\n    drawArrow (context, arrow, points) {\n      for (let i = 0; i < points.length - 1; i++) {\n        this.drawArrowSegment(context, arrow, points[i].x, points[i].y, points[i + 1].x, points[i + 1].y)\n      }\n      const x2 = points[points.length - 1].x\n      const y2 = points[points.length - 1].y\n      const x1 = points[points.length - 2].x\n      const y1 = points[points.length - 2].y\n      let endRadians = Math.atan((y2 - y1) / (x2 - x1))\n      endRadians += ((x2 >= x1) ? 90 : -90) * Math.PI / 180\n      context.save()\n      context.fillStyle = 'black'\n      context.beginPath()\n      context.translate(x2, y2)\n      context.rotate(endRadians)\n      context.moveTo(0, 0)\n      context.lineTo(5, 20)\n      context.lineTo(-5, 20)\n      context.closePath()\n      context.restore()\n      context.fill()\n    },\n    // рисует сегмент указанной стрелки\n    drawArrowSegment (context, arrow, startX, startY, endX, endY) {\n      const linePath = new Path2D()\n      linePath.moveTo(startX, startY)\n      linePath.lineTo(endX, endY)\n      linePath.closePath()\n      context.stroke(linePath)\n    },\n    // добавляет новый блок в схему\n    placeNewBlock (centerX, centerY, blockType) {\n      const width = STANDARD_BLOCK_WIDTH\n      const height = width * STANDARD_BLOCK_HEIGHT_MULTIPLYER\n      const constructionPayload = constructBlock(centerX, centerY, blockType, width, height)\n      this.addBlock(constructionPayload).then(() => {\n        eventBus.$emit('timetoDraw')\n      })\n    }\n  },\n  computed: {\n    ...mapGetters(['getTool', 'getBlocks', 'getArrows', 'getCurrentStep', 'getGraphicsSemaphore', 'getSelectedBlockID', 'getSelectedArrowID', 'getArrowStartPoint', 'getArrowPoints', 'getSelectedSegmentPointIndex'])\n  },\n  mounted () {\n    // слой схемы\n    const elem = document.getElementById('flowchart')\n    elem.style.width = '100%'\n    elem.style.height = '100%'\n    elem.width = elem.offsetWidth\n    elem.height = elem.offsetHeight\n    // слой отрисовки посередине действия\n    const elem2 = document.getElementById('toolLayer')\n    elem2.style.width = '100%'\n    elem2.style.height = '100%'\n    elem2.width = elem2.offsetWidth\n    elem2.height = elem2.offsetHeight\n    const context = elem2.getContext('2d')\n    // на этом слой отображаются полупрозрачные элементы\n    context.globalAlpha = 0.5\n    const elem3 = document.getElementById('canvasContiner')\n    elem3.addEventListener('click', this.userInputHandler)\n    elem3.addEventListener('mouseenter', this.userInputHandler)\n    elem3.addEventListener('mousemove', this.userInputHandler)\n    elem3.addEventListener('mouseleave', this.userInputHandler)\n    elem3.addEventListener('mousedown', this.userInputHandler)\n    elem3.addEventListener('mouseup', this.userInputHandler)\n    setXOFFSET((elem2.width + 300) / elem2.width)\n  },\n  created () {\n    eventBus.$on('timeToDraw', () => {\n      // if (BlocksCount > BlocksCount + 1) console.log('overflow?')\n      while (this.getGraphicsSemaphore > 0) {\n        ;\n      }\n      this.countUpGraphicsSemaphore()\n      this.drawSchema()\n      this.countDownGraphicsSemaphore()\n    })\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Canvas.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Canvas.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Canvas.vue?vue&type=template&id=521d15eb\"\nimport script from \"./Canvas.vue?vue&type=script&lang=js\"\nexport * from \"./Canvas.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <v-app>\n    <tool-panel>\n      <!-- <hello-world /> -->\n    </tool-panel>\n    <Canvas/>\n  </v-app>\n</template>\n<script>\n// import HelloWorld from '../components/HelloWorld'\nimport ToolPanel from '../components/ToolPanel'\nimport Canvas from '../components/Canvas'\nexport default {\n  name: 'Home',\n  components: {\n    // HelloWorld,\n    ToolPanel,\n    Canvas\n  }\n}\n// const example = document.getElementById('example')\n// const ctx = example.getContext('2d')\n// ctx.fillRect(0, 0, example.width, example.height)\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./HomeView.vue?vue&type=template&id=29c04841\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport { OperationStep, Instruments, isValidInstrument } from '../plugins/constants'\nimport { constructBlock, constructArrow, copyPoint } from '../plugins/functions'\nimport { eventBus } from '../main.js'\nimport $ from 'jquery'\n// import axios from 'axios'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    tool: 1,\n    currentStep: 0,\n    selectedBlockID: null,\n    selectedArrowID: null,\n    selectedSegmentPointIndex: null,\n    arrowStartPoint: {\n      x: null,\n      y: null\n    },\n    graphicsSemaphore: 0,\n    schema: {\n      internalCounter: -1,\n      blocks: [],\n      arrows: [],\n      points: []\n    }\n  },\n  getters: {\n    getArrowStartPoint (state) {\n      return {\n        x: state.arrowStartPoint.x,\n        y: state.arrowStartPoint.y\n      }\n    },\n    getGraphicsSemaphore (state) {\n      return state.graphicsSemaphore\n    },\n    getTool (state) {\n      return state.tool\n    },\n    getSelectedBlockID (state) {\n      return state.selectedBlockID\n    },\n    getSelectedArrowID (state) {\n      return state.selectedArrowID\n    },\n    getSelectedSegmentPointIndex (state) {\n      return state.selectedSegmentPointIndex\n    },\n    getCurrentStep (state) {\n      return state.currentStep\n    },\n    getSchema (state) {\n      return state.schema\n    },\n    getBlocks (state) {\n      // console.log('inside of a getter')\n      // console.log(state.schema.blocks)\n      const retVal = []\n      state.schema.blocks.forEach(block => {\n        retVal.push(constructBlock(block.centerX, block.centerY, block.type, block.sizeX, block.sizeY, block.id, block.text))\n      })\n      // console.log(retVal)\n      return retVal\n      // return state.schema.blocks\n    },\n    getArrows (state) {\n      const retVal = []\n      state.schema.arrows.forEach(arrow => {\n        retVal.push(constructArrow(arrow.idStart, arrow.idEnd, arrow.angleStart, arrow.angleEnd, arrow.id))\n      })\n      return retVal\n    },\n    getPoints (state) {\n      const retVal = []\n      state.schema.points.forEach(point => {\n        retVal.push(copyPoint(point))\n      })\n      return retVal\n    },\n    getArrowPoints: (state) => (arrow) => {\n      let retVal = []\n      state.schema.points.forEach(point => {\n        retVal.push(copyPoint(point))\n      })\n      retVal = retVal.filter(point => point.arrowId === arrow.id)\n      retVal.sort((p1, p2) => { return p1.order - p2.order })\n      return retVal\n    }\n  },\n  mutations: {\n    setArrowStartPoint (state, payload) {\n      state.arrowStartPoint.x = payload.x\n      state.arrowStartPoint.y = payload.y\n    },\n    setGraphicsSemaphore (state, payload) {\n      state.graphicsSemaphore = payload\n    },\n    setTool (state, payload) {\n      state.tool = payload\n    },\n    setSelectedBlockID (state, payload) {\n      // console.log('before: ' + state.selectedBlockID)\n      state.selectedBlockID = payload\n      // console.log('after: ' + state.selectedBlockID)\n    },\n    setSelectedArrowID (state, payload) {\n      state.selectedArrowID = payload\n    },\n    setSelectedSegmentPointIndex (state, payload) {\n      state.selectedSegmentPointIndex = payload\n    },\n    setCurrentStep (state, payload) {\n      state.currentStep = payload\n    },\n    clearSchema (state) {\n      state.schema = {\n        internalCounter: state.schema.internalCounter,\n        blocks: [],\n        arrows: [],\n        points: []\n      }\n    },\n    addBlock (state, payload) {\n      state.schema.internalCounter--\n      const constructedBlock = constructBlock(payload.centerX, payload.centerY, payload.type, payload.sizeX, payload.sizeY, state.schema.internalCounter)\n      state.schema.blocks.push(constructedBlock)\n    },\n    moveBlock (state, payload) {\n      // console.log('actually moving as')\n      // console.log(payload)\n      state.schema.blocks.forEach(block => {\n        if (block.id === payload.id) {\n          // console.log('block before')\n          // console.log(block)\n          block.centerX = payload.X\n          block.centerY = payload.Y\n          // console.log('block after')\n          // console.log(block)\n        }\n      })\n    },\n    changeBlockText (state, payload) {\n      state.schema.blocks.forEach(block => {\n        if (block.id === payload.id) {\n          block.text = payload.text\n        }\n      })\n    },\n    changeArrowAngles (state, payload) {\n      state.schema.arrows.forEach(arrow => {\n        if (arrow.id === payload.id) {\n          arrow.angleStart = payload.angleStart\n          arrow.angleEnd = payload.angleEnd\n        }\n      })\n    },\n    addArrow (state, payload) {\n      state.schema.internalCounter--\n      const constructedArrow = constructArrow(payload.idStart, payload.idEnd, payload.angleStart, payload.angleEnd, state.schema.internalCounter)\n      state.schema.arrows.push(constructedArrow)\n      // console.log(this.getters.getArrows)\n    },\n    addPoint (state, payload) {\n      state.schema.internalCounter--\n      const constructedPoint = copyPoint(payload)\n      constructedPoint.id = state.schema.internalCounter\n      state.schema.points.forEach(point => {\n        if (point.arrowId === constructedPoint.arrowId && point.order >= constructedPoint.order) {\n          point.order = point.order + 1\n        }\n      })\n      state.schema.points.push(constructedPoint)\n    },\n    removePoint (state, payload) {\n      const constructedPoint = copyPoint(payload)\n      state.schema.points.forEach(point => {\n        if (point.arrowId === constructedPoint.arrowId && point.order >= constructedPoint.order) {\n          point.order = point.order - 1\n        }\n      })\n      state.schema.points.splice(state.schema.points.findIndex(p => p.id === constructedPoint.id), 1)\n    },\n    movePoint (state, payload) {\n      const pointToMove = state.schema.points.find(point => payload.id === point.id)\n      pointToMove.x = payload.x\n      pointToMove.y = payload.y\n    },\n    addFromLoadBlock (state, payload) {\n      const constructedBlock = constructBlock(payload.centerX, payload.centerY, payload.type, payload.sizeX, payload.sizeY, payload.id, payload.text)\n      state.schema.blocks.push(constructedBlock)\n    },\n    addFromLoadArrow (state, payload) {\n      const constructedArrow = constructArrow(payload.idStart, payload.idEnd, payload.angleStart, payload.angleEnd, payload.id)\n      state.schema.arrows.push(constructedArrow)\n      // console.log(this.getters.getArrows)\n    },\n    addFromLoadPoint (state, payload) {\n      const constructedPoint = copyPoint(payload)\n      state.schema.points.forEach(point => {\n        if (point.arrowId === constructedPoint.arrowId && point.order >= constructedPoint.order) {\n          point.order = point.order + 1\n        }\n      })\n      state.schema.points.push(constructedPoint)\n    }\n  },\n  actions: {\n    async changeArrowStartPoint (context, point) {\n      context.commit('setArrowStartPoint', point)\n    },\n    async changeCurrentStep (context, step) {\n      context.commit('setCurrentStep', step)\n    },\n    async countUpGraphicsSemaphore (context) {\n      context.commit('setGraphicsSemaphore', this.getGraphicsSemaphore + 1)\n    },\n    async countDownGraphicsSemaphore (context) {\n      context.commit('setGraphicsSemaphore', this.getGraphicsSemaphore - 1)\n    },\n    async changeTool (context, index) {\n      // console.log(index)\n      // TODO: check for parameters tools\n      if (isValidInstrument(index) === true) {\n        context.commit('setTool', index)\n      } else {\n        context.commit('setTool', Instruments.UNSELECT_TOOLS)\n      }\n    },\n    async selectBlock (context, id) {\n      // console.log('sending to search in id of ' + id)\n      // console.log(this.getters.getBlocks)\n      const block = this.getters.getBlocks.find(block => block.id === id)\n      // console.log('found block:')\n      // console.log(block)\n      if (block === null) {\n        this.dispatch('unselect')\n      } else {\n        context.commit('setSelectedBlockID', block.id)\n        context.commit('setCurrentStep', OperationStep.SELECT_BLOCK_SELECTED)\n        eventBus.$emit('selectionChanged')\n      }\n    },\n    async selectArrow (context, payload) {\n      const arrow = this.getters.getArrows.find(storeArrow => storeArrow.id === payload.arrowId)\n      if (arrow === null) {\n        this.dispatch('unselect')\n      } else {\n        context.commit('setSelectedArrowID', payload.arrowId)\n        context.commit('setSelectedSegmentPointIndex', payload.pointIndex)\n        context.commit('setCurrentStep', OperationStep.SELECT_ARROW_SEGMENT_SELECTED)\n        eventBus.$emit('selectionChanged')\n      }\n    },\n    async defineStartPoint (context, point) {\n      context.commit('setArrowStartPoint', point)\n      context.commit('setCurrentStep', OperationStep.ARROWPLACING_STARTPOINT_DEFINED)\n    },\n    async unselect (context) {\n      context.commit('setSelectedBlockID', null)\n      context.commit('setSelectedArrowID', null)\n      context.commit('setSelectedSegmentPointIndex', null)\n      context.commit('setCurrentStep', OperationStep.SELECT_NONE_SELECTED)\n      context.commit('setArrowStartPoint', { x: null, y: null })\n      eventBus.$emit('selectionChanged')\n    },\n    async moveBlock (context, payload) {\n      const blockToMove = this.getters.getBlocks.find(block => block.id === payload.id)\n      if (blockToMove != null) {\n        context.commit('moveBlock', {\n          id: payload.id,\n          X: payload.X,\n          Y: payload.Y\n        })\n      }\n      eventBus.$emit('timeToDraw')\n    },\n    async clearSchema (context) {\n      context.commit('clearSchema')\n      eventBus.$emit('timeToDraw')\n    },\n    async addBlock (context, payload) {\n      context.commit('addBlock', payload)\n      eventBus.$emit('timeToDraw')\n    },\n    async addArrow (context, payload) {\n      context.commit('addArrow', payload)\n      eventBus.$emit('timeToDraw')\n    },\n    async addPoint (context, payload) {\n      context.commit('addPoint', payload)\n      eventBus.$emit('timeToDraw')\n    },\n    async removePoint (context, payload) {\n      context.commit('removePoint', payload)\n      eventBus.$emit('timeToDraw')\n    },\n    async movePoint (context, payload) {\n      if (this.getters.getPoints.findIndex(point => point.id === payload.id) > -1) {\n        context.commit('movePoint', payload)\n        eventBus.$emit('timeToDraw')\n      }\n    },\n    async moveArrowSegment (context, payload) {\n      // перемещаем, затем удаляем, затем добавляем, затем меняем углы у стрелки\n      if (payload.moved[0] != null) context.commit('movePoint', payload.moved[0])\n      if (payload.moved[1] != null) context.commit('movePoint', payload.moved[1])\n      if (payload.deleted[0] != null) context.commit('removePoint', payload.deleted[0])\n      if (payload.deleted[1] != null) context.commit('removePoint', payload.deleted[1])\n      if (payload.added[0] != null) {\n        const firstPoint = copyPoint(payload.added[0])\n        firstPoint.order = 0\n        context.commit('addPoint', firstPoint)\n      }\n      const lastOrder = this.getters.getArrowPoints(payload.arrow).length\n      if (payload.added[1] != null) {\n        const lastPoint = copyPoint(payload.added[1])\n        lastPoint.order = lastOrder\n        context.commit('addPoint', lastPoint)\n      }\n      context.commit('changeArrowAngles', payload.arrow)\n      eventBus.$emit('timeToDraw')\n    },\n    async changeBlockText (context, payload) {\n      if (this.getters.getBlocks.findIndex(block => block.id === payload.id) > -1) {\n        this.dispatch('unselect')\n        context.commit('changeBlockText', payload)\n        eventBus.$emit('timeToDraw')\n      }\n    },\n    async saveSchema (context, payload) {\n      if ((payload != null) && (payload.length > 0)) {\n        const sendObject = {\n          blocks: this.getters.getBlocks,\n          arrows: this.getters.getArrows,\n          points: this.getters.getPoints\n        }\n        $.ajax({\n          url: 'http://localhost:8081/saveSchema/' + payload,\n          method: 'POST',\n          processData: false,\n          contentType: 'application/json',\n          dataType: 'json',\n          data: JSON.stringify({\n            blocks: sendObject.blocks,\n            arrows: this.getters.getArrows,\n            points: this.getters.getPoints\n          }),\n          success: function (res) {\n            // console.log(res)\n          },\n          error: function (err) {\n            console.log(err)\n          }\n        })\n        /*\n        await axios.post('http://localhost:8081/saveSchema/' + payload, {\n          data: {\n            blocks: sendObject.blocks,\n            arrows: this.getters.getArrows,\n            points: this.getters.getPoints\n          }\n        })\n          .then(response => {\n            if (response !== 1) console.log('error saving schema'); else console.log('success')\n          }).catch(e => {\n            console.log(e)\n          }) */\n      }\n    },\n    async loadSchema (context, payload) {\n      if ((payload != null) && (payload.length > 0)) {\n        await $.ajax({\n          url: 'http://localhost:8081/getSchema/' + payload,\n          method: 'Get',\n          processData: false,\n          contentType: 'application/json',\n          dataType: 'json',\n          data: null,\n          success: function (response) {\n            context.commit('clearSchema')\n            response.blocks.forEach((block) => {\n              context.commit('addFromLoadBlock', block)\n            })\n            response.arrows.forEach((arrow) => {\n              context.commit('addFromLoadArrow', arrow)\n            })\n            response.points.forEach((point) => {\n              context.commit('addFromLoadPoint', point)\n            })\n          },\n          error: function (err) {\n            console.log(err)\n          },\n          complete: function (context) {\n          }\n        })\n        eventBus.$emit('timeToDraw')\n        /* await axios.get('http://localhost:8081/getSchema/' + payload)\n          .then(response => {\n            // JSON responses are automatically parsed.\n            context.commit('clearSchema')\n            response.blocks.forEach((block) => {\n              context.commit('addBlock', block)\n            })\n            response.arrows.forEach((arrow) => {\n              context.commit('addArrow', arrow)\n            })\n            response.points.forEach((point) => {\n              context.commit('addPoint', point)\n            })\n          })\n          .catch(e => {\n            console.log(e)\n          }) */\n      }\n    }\n  },\n  methods: {\n  },\n  modules: {\n  }\n})\n","import Vue from 'vue'\nimport Vuetify from 'vuetify/lib/framework'\n\nVue.use(Vuetify)\n\nexport default new Vuetify({\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport vuetify from './plugins/vuetify'\r\n// import axios from 'axios'\r\n// import VueAxios from 'vue-axios'\r\n\r\n// Vue.use(VueAxios, axios)\r\n\r\nVue.config.productionTip = false\r\n\r\nexport const eventBus = new Vue()\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  vuetify,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","var map = {\n\t\"./imgCardBig.svg\": 6401,\n\t\"./imgDataBig.svg\": 3815,\n\t\"./imgDecisionBig.svg\": 5149,\n\t\"./imgDefProcessBig.svg\": 6459,\n\t\"./imgDirectMemBig.svg\": 8407,\n\t\"./imgDisplayBig.svg\": 4911,\n\t\"./imgDocumentBig.svg\": 6618,\n\t\"./imgManualInputBig.svg\": 6035,\n\t\"./imgManualOperationBig.svg\": 6734,\n\t\"./imgPaperTapeBig.svg\": 8776,\n\t\"./imgPrepBig.svg\": 944,\n\t\"./imgProcessBig.svg\": 8312,\n\t\"./imgRAMBig.svg\": 6413,\n\t\"./imgRecDataBig.svg\": 7995,\n\t\"./imgSeqMemBig.svg\": 3103\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3215;","var map = {\n\t\"./imgCardSmall.svg\": 4774,\n\t\"./imgDataSmall.svg\": 32,\n\t\"./imgDecisionSmall.svg\": 6386,\n\t\"./imgDefProcessSmall.svg\": 9652,\n\t\"./imgDirectMemSmall.svg\": 1264,\n\t\"./imgDisplaySmall.svg\": 8600,\n\t\"./imgDocumentSmall.svg\": 3045,\n\t\"./imgManualInputSmall.svg\": 8716,\n\t\"./imgManualOperationSmall.svg\": 8969,\n\t\"./imgPaperTapeSmall.svg\": 1044,\n\t\"./imgPrepSmall.svg\": 1431,\n\t\"./imgProcessSmall.svg\": 3919,\n\t\"./imgRAMSmall.svg\": 4002,\n\t\"./imgRecDataSmall.svg\": 1860,\n\t\"./imgSeqMemSmall.svg\": 2232\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 6834;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + \"about\" + \".\" + \"612d7a74\" + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"flowchart:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkflowchart\"] = self[\"webpackChunkflowchart\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9260); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["staticRenderFns","render","name","data","component","_c","_self","model","value","_vm","blocksSelection","callback","expression","attrs","BlocksCount","key","scopedSlots","Blocks","fn","properDelete","parametersSelection","on","loadSchemaName","saveSchemaName","getDirectionVectorForSegment","p1","p2","retVal","x","y","Math","abs","sign","addEdgePoints","context","arrowPoints","arrow","startBlock","find","block","id","idStart","endBlock","idEnd","startPoint","getEdgePointCoords","angleStart","endPoint","angleEnd","unshift","constructPoint","push","length","getNormalised","vector","sqrt","getPerpendicular","getReverse","getQuadranglePath","p3","p4","retPath","getSegmemtSelectPath","segmentStart","segmentEnd","arrowSelectionWidth","segmentVector","normalisedSegmentVector","direction1","direction2","getLineXFromY","getLineYFromX","getVectorByBoundingBox","closePoint","farPoint","leftSide","centerX","sizeX","rightSide","topSide","centerY","sizeY","bottomSide","intersections","pointsToConsider","filter","point","pointVector","minDist","forEach","dist","arrowId","blockAt","blocks","resultingBlock","blocksLocal","path","type","getPath","isPointInPath","Path2D","constructBlock","getIntersections","x1","y1","x2","y2","Intersection","intersect","ShapeInfo","line","actualIntersection","cX","cY","maxdist","points","blockPath","isPointInStroke","angle","vectorFromAngle","blockSize","max","XCentral","YCentral","width","STANDARD_BLOCK_WIDTH","height","STANDARD_BLOCK_HEIGHT_MULTIPLYER","mainText","finaltype","Instruments","BLOCK_DEFALULT","isValidBlock","text","copyBlock","constructArrow","copyArrow","order","copyPoint","arrowAngle","edgePoint","pX","pY","retAngle","atan2","PI","radAngle","retVector","sin","cos","constructStraightArrow","startEdgePoint","startEdgeAngle","endEdgePoint","endEdgeAngle","endId","constructRectangularArrow","startVector","endVector","startPointVector","endPointVector","candidate1","candidate2","min","adjustArrowSegmentForNewCoords","pointIndex","newX","newY","segmentPoints","arrowAngles","segmentCenter","segmentDirection","segmentNewCenter","retMoved","retAdded","retDeleted","i","currentPoint","retPointIndex","findIndex","moveCurrent","whereToLook","indexOfPointInQuestion","EPS","currentBlock","bigLength","bigP1","bigP2","intersection","directionForBlockCollision","intermX","intermY","newIntermidiate","angleVector","retArrow","moved","deleted","added","assembleArrowPointsForMovingSegment","moveRes","pop","shift","Object","freeze","UNSELECT_TOOLS","BLOCK_DATA","BLOCK_RECORDED_DATA","BLOCK_RAM","BLOCK_SEQUENTIAL_ACCESS_MEMORY","BLOCK_DIRECT_ACCESS_MEMORY","BLOCK_DOCUMENT","BLOCK_MANUAL_INPUT","BLOCK_CARD","BLOCK_PAPER_TAPE","BLOCK_DISPLAY","BLOCK_PROCESS","BLOCK_DEFINED_PROCESS","BLOCK_MANUAL_OPERATION","BLOCK_PREPARATION","BLOCK_DECISION","ARROW_DEFAULT","PARAMETERS_SELECT","isValidInstrument","toolIndex","tool","toolValue","img","description","angleCoeffic","w","h","getSectorVector","getTextArea","slopeCoef","t","l","top","left","radius","arcAngle","asin","xOffset","arcOffset","offset","insideSize","SQRT2","yOffset","slopeSideOffest","rightArcOffset","leftArcsOffset","slopeOffset","blockIndex","OperationStep","SELECT_NONE_SELECTED","SELECT_BLOCK_SELECTED","SELECT_ARROW_SEGMENT_SELECTED","MOVE_BLOCK_IS_BEING_MOVED","MOVE_ARROW_SEGMENT_IS_BEING_MOVED","ARROWPLACING_STARTPOINT_DEFINED","XOFFSET","setXOFFSET","methods","mapActions","selectionChanged","changeTool","selectSelect","selectArrow","clearSchema","confirmTextChange","blockToSend","getBlocks","getSelectedBlockID","changeBlockText","getTheSchema","loadSchema","loadTheSchema","saveSchema","computed","mapGetters","created","eventBus","$on","staticStyle","drawSelectionFigure","doFill","sSize","sOffset","strokestyle","globalAlpha","fillRect","strokeRect","drawBoxSelection","clearToolLayer","elem","document","getElementById","getContext","leftCoord","centerXCoord","rightCoord","upperCoord","centerYCoord","lowerCoord","selectionCoordsX","selectionCoordsY","drawArrowSelection","getArrowPoints","elems","getElementsByClassName","remove","clearRect","userInputHandler","event","userOperationPlacingNewBlock","userOperationSelectingBlockOrArrowSegment","userOperationMovingBlock","userOperationPlacingNewArrow","userOperationMovingArrowSegment","getTool","placeNewBlock","offsetX","offsetY","shadeBlock","drawBlock","mousePoint","blockToSelect","selectBlock","arrowToSelect","arrowPointIndex","arrows","getArrows","svgPath","getCurrentStep","changeCurrentStep","selectedBlock","offsetYT","unselect","moveInfo","X","Y","moveBlock","getSelectedArrowID","movingArrow","extendedArrowPoints","getSelectedSegmentPointIndex","drawArrow","moveArrowSegment","defineStartPoint","getArrowStartPoint","elem2","context2","drawArrowSegment","addArrow","altKey","reference","storeArrow","addPoint","drawSchema","save","fillStyle","lineWidth","fill","stroke","cssInfo","newDiv","createElement","fontSize","Number","window","getComputedStyle","body","getPropertyValue","match","className","canvas","setAttribute","newContent","createTextNode","appendChild","currentDiv","parentElement","restore","endRadians","atan","beginPath","translate","rotate","moveTo","lineTo","closePath","startX","startY","endX","endY","linePath","blockType","constructionPayload","addBlock","then","$emit","mounted","style","offsetWidth","offsetHeight","elem3","addEventListener","getGraphicsSemaphore","countUpGraphicsSemaphore","countDownGraphicsSemaphore","components","ToolPanel","Canvas","Vue","use","VueRouter","routes","HomeView","router","Vuex","state","currentStep","selectedBlockID","selectedArrowID","selectedSegmentPointIndex","arrowStartPoint","graphicsSemaphore","schema","internalCounter","getters","getSchema","getPoints","sort","mutations","setArrowStartPoint","payload","setGraphicsSemaphore","setTool","setSelectedBlockID","setSelectedArrowID","setSelectedSegmentPointIndex","setCurrentStep","constructedBlock","changeArrowAngles","constructedArrow","constructedPoint","removePoint","splice","p","movePoint","pointToMove","addFromLoadBlock","addFromLoadArrow","addFromLoadPoint","actions","changeArrowStartPoint","commit","step","this","index","dispatch","blockToMove","firstPoint","lastOrder","lastPoint","sendObject","$","url","method","processData","contentType","dataType","JSON","stringify","success","res","error","err","console","log","response","complete","modules","Vuetify","config","productionTip","store","vuetify","App","$mount","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","call","m","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","r","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","target","head","Symbol","toStringTag","installedChunks","installedChunkData","promise","reject","loadingEnded","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}